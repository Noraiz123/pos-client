{"version":3,"sources":["config/globals.js","constants/actionTypes.js","constants/apiUrl.js","reducers/initialState.js","reducers/products.reducer.js","reducers/root.reducer.js","reducers/loader.reducer.js","reducers/auth.reducer.js","reducers/orders.reducer.js","reducers/categories.reducer.js","reducers/storeReducer.js","reducers/customers.reducer.js","reducers/users.reducer.js","reducers/vendors.reducer.js","reducers/expenses.reducer.js","reducers/onlineReducer.js","config/store.js","api/auth.js","actions/auth.actions.js","api/request.js","api/order.js","actions/order.actions.js","components/Modals/index.js","api/customers.js","actions/customers.actions.js","components/Modals/AddCustomerModal.js","api/user.js","actions/users.actions.js","components/Modals/AddUser.js","components/Modals/InvoiceModal.js","components/Modals/OnholdModal.js","components/Modals/PaymentModal.js","api/products.js","actions/products.actions.js","components/createOrder/Invoice.js","components/createOrder/CreateOrder.js","constants/appConstants.js","api/category.js","actions/categories.actions.js","components/Modals/AddProductModal.js","components/Modals/ProductsModal.js","components/Modals/AddCategory.js","components/Modals/customersModal.js","components/Modals/usersModal.js","api/vendors.js","actions/vendors.action.js","components/Modals/AddVendorsModal.js","components/Modals/VendorsModal.js","components/Modals/CategoriesModal.js","api/store.js","actions/stores.actions.js","components/Modals/AddStore.js","components/Modals/StoresModal.js","api/expenses.js","actions/expenses.actions.js","components/Modals/AddExpenseModal.js","components/Header/Header.js","components/products/Products.js","components/POS/POS.js","pages/PosPage.js","components/Modals/ViewOrderModal.js","components/Transactions/Transactions.js","components/Modals/viewExpense.js","components/Transactions/Expenses.js","components/Transactions/index.js","pages/TransactionsPage.js","config/routes.js","constants/pages.js","components/Login/Login.js","pages/LoginPage.js","components/Loader/index.js","pages/DefaultPage.js","config/reportWebVitals.js","index.js"],"names":["window","React","_","actionTypes","BASE_URL","initialState","auth","isSignedIn","isLoading","online","onlineStatus","navigator","onLine","products","product","allProducts","productSizes","productColors","productsStats","stats","totalPages","currentPage","statsFilter","page","perPage","keyword","store","productsFilter","per_page","category_id","expenses","noOfExpenses","totalExpense","expenseStats","orders","orderStatus","allOrders","order","onHold","currentOrder","totalTransactions","totalSales","totalProfit","chartStats","categories","stores","vendors","users","customers","allCustomers","currentCustomer","updateProductsQuantity","payload","_id","quantity","orderQuantity","combineReducers","state","action","type","concat","map","e","items","product_sizes","product_colors","alreadyExists","createNew","updateItem","status","find","filter","length","previousDiscountedPrice","Number","currentPrice","currentDiscount","currentDiscountedPrice","price","discount","uuid","Math","random","previousQuantity","delete","undefined","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistConfig","key","storage","whitelist","pReducer","persistReducer","rootReducer","createStore","applyMiddleware","thunk","persistor","persistStore","loginRequest","data","instance","post","loginAction","LogoutRequest","dispatch","a","location","href","localStorage","removeItem","axios","create","baseURL","interceptors","request","use","req","token","getItem","headers","Accept","response","res","error","responseURL","includes","toString","toast","message","Promise","reject","getOrders","get","params","createOrder","updateOrder","id","patch","deleteOrder","createOrderAction","getOrderAction","deleteAllOrderItemsAction","updateOrderStatusAction","editOnHoldAction","ConfirmOrder","success","GetOnHold","ModalTemplate","isOpen","setIsOpen","children","appear","show","as","className","onClose","Child","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Overlay","createCustomer","getCustomers","deleteCustomer","updateCustomer","currentCustomerAction","CustomerModal","customerData","initState","name","email","phoneNo","useDispatch","useState","customerDetails","setCustomerDetails","useSelector","handleCustomerFields","target","value","pre","useEffect","Title","onChange","onClick","then","CreateCustomer","createUser","getUsers","deleteUser","updateUser","put","AddUserModal","userData","role","phone_no","userDetails","setUserDetails","user","JSON","parse","handleUserFields","selected","disabled","password","UpdateUser","InvoiceModal","invoiceData","invoiceRef","useRef","printOrder","useReactToPrint","content","current","copyStyles","ref","Date","toLocaleDateString","invoiceNo","customer","orderItems","i","round","total","OnHoldOrdersModal","navigate","useNavigate","OrderUpdateHandler","previousPaid","paidPrice","manipulateProducts","salesman","orderDeleteHandler","DeleteOrder","index","cashier","TrashIcon","PencilAltIcon","PaymentModal","totalPrice","confirmOrder","payment","setPayment","getProducts","getProductsStats","createProduct","deleteProduct","updateProduct","body","filterProductsAction","filterProductsStatsAction","GetProducts","GetAllProducts","OrderInvoice","forwardRef","CreateOrder","currentSalesman","setCurrentSalesman","openOnHold","setOpenOnHold","openPaymentModal","setOpenPaymentModal","setInvoiceNo","holdIndex","setHoldIndex","useLocation","leftBtnRef","rightBtnRef","reduce","next","totalRetailPrice","retailPrice","handleAfterOrder","handleOrderCreate","change","invoice","UpdateOrder","orderItemId","existing","customerAttributes","createdAt","setItem","stringify","openCustomerModal","setOpenCustomerModal","openUserModal","setOpenUserModal","openInvoiceModal","setOpenInvoiceModal","customerOptions","label","salesmanOptions","handleKeyBindings","event","ctrlKey","click","addEventListener","removeEventListener","ArrowSmLeftIcon","ViewBoardsIcon","ArrowSmRightIcon","options","placeholder","isClearable","PlusIcon","s","barcode","setTimeout","CheckIcon","XIcon","min","max","item","handleQuantityChange","deleteCurrentOrderItemAction","PrinterIcon","BanIcon","HandIcon","CashIcon","AddUser","appConstants","createCategory","getCategories","updateCategory","deleteCategory","GetCategories","AddProducts","productData","imgUrl","vendor_id","size","color","productDetails","setProductDetails","fileInputRef","handleAddProduct","preState","parseInt","btnStyle","accept","reader","FileReader","readAsDataURL","files","onload","result","onerror","console","log","src","alt","CreateProduct","ProductsModal","openAddProduct","setOpenAddProduct","currentProduct","setCurrentProduct","productDeleteHandler","DeleteProduct","getCategory","category","getVendor","vendor","AddCategory","categoryData","description","categoryDetails","setCategoryDetails","handleCategory","CreateCategory","CustomersModal","openAddCustomer","setOpenAddCustomer","setCustomerData","handleUserDelete","DeleteCustomer","handleCustomerEdit","UsersModal","openAddUser","setOpenAddUser","setUserData","DeleteUser","handleUserEdit","createVendor","getVendors","deleteVendor","updateVendor","AddVendorsModal","vendorData","vendorDetails","setVendorDetails","handleVendorFields","UpdateVendor","VendorsModal","setVendorData","openAddVendor","setOpenAddVendor","handleVenderDelete","DeleteVendor","handleVendorEdit","CategoriesModal","setCategoryData","openAddCategory","setOpenAddCategory","DeleteCategory","getStores","updateStore","deleteStore","AddStore","storeData","address","storeDetails","setStoreDetails","handleStore","CreateStore","StoresModal","setStoreData","openAddStore","setOpenAddStore","handleStoreDelete","DeleteStore","handleStoreEdit","createExpense","getExpenses","updateExpense","deleteExpense","AddExpenseModal","expenseData","amount","details","expenseDetails","setExpenseDetails","CreateExpense","Header","openCustomers","setOpenCustomers","openUsers","setOpenUsers","openVendors","setOpenVendors","openCategories","setOpenCategories","openStores","setOpenStores","openAddVendors","setOpenAddVendors","openAddStores","setOpenAddStores","openAddExpense","setOpenAddExpense","FolderAddIcon","ViewGridAddIcon","ShoppingBagIcon","UserIcon","DocumentTextIcon","pathname","to","CreditCardIcon","title","LogoutIcon","Products","offlineFilters","setOfflineFilters","optimizedSearch","func","timer","timeout","args","clearTimeout","apply","debounce","handlePageChange","productsData","toLowerCase","handleCreateOrder","Array","fill","POS","PosPage","ViewOrdersModal","orderDetails","salesman_id","Chart","register","registerables","Transactions","created_at_gteq","created_at_lteq","status_in","cashier_id_eq","salesman_id_eq","ordersFilter","setOrdersFilter","ordersData","setOrdersData","ordersPagination","setOrdersPagination","query","handleOrdersFilterChange","handleOrdersPageChange","optimizedInvoiceSearch","labels","toDateString","datasets","backgroundColor","borderColor","borderWidth","totalSaleAmount","sold","available","sales","toUpperCase","EyeIcon","responsive","maintainAspectRatio","count","ViewExpenseModal","Expenses","expensesFilter","setExpensesFilter","viewExpense","setViewExpense","setExpenseData","expensePagination","setExpensePagination","handleExpenseFilterChange","handleExpensePageChange","ExpenseDeleteHandler","filters","DeleteExpenses","TransactionsManagement","active","setActive","TransactionsPage","routes","path","exact","component","Login","onSubmit","preventDefault","for","LoginPage","Loader","xmlns","style","margin","background","display","shapeRendering","width","height","viewBox","preserveAspectRatio","cx","cy","r","strokeWidth","stroke","strokeDasharray","strokeLinecap","attributeName","repeatCount","dur","keyTimes","values","App","checkOnlineStatus","controller","AbortController","signal","fetch","method","abort","setOnline","setOffline","warning","checkStatus","Event","dispatchEvent","setInterval","clearInterval","route","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","loading","position","DefaultPage","document","getElementById","serviceWorker","reg","scope","catch","err"],"mappings":"8IAGAA,OAAOC,MAAQA,IACfD,OAAOE,EAAIA,I,oMCJEC,EACE,eADFA,EAGC,cAHDA,EAIa,0BAJbA,EAKI,kBALJA,EAMI,kBANJA,EASE,gBATFA,EAUC,cAVDA,EAWK,kBAXLA,EAYK,kBAZLA,EAaK,kBAbLA,EAcE,eAdFA,EAeE,eAfFA,EAgBE,eAhBFA,EAiBK,kBAjBLA,EAkBI,iBAlBJA,EAmBA,aAnBAA,EAoBG,gBApBHA,EAqBD,WArBCA,EAsBE,eAtBFA,EAuBA,YAvBAA,EAwBJ,gBAxBIA,EAyBH,iBAzBGA,EA0BA,aA1BAA,EA2BD,YA3BCA,EA4BG,gBA5BHA,GA6BE,eA7BFA,GA8BE,eA9BFA,GA+BM,oBA/BNA,GAgCU,yBAhCVA,GAiCK,kBAjCLA,GAkCE,eAlCFA,GAmCK,kBAnCLA,GAoCK,kBApCLA,GAqCM,mBArCNA,GAsCC,cAtCDA,GAuCG,gBAvCHA,GAwCI,iBAxCJA,GAyCD,YAzCCA,GA0CC,cA1CDA,GA2CE,eA3CFA,GA4CC,cA5CDA,GA6CC,cA7CDA,GA8CG,gBA9CHA,GA+CG,gBA/CHA,GAgDI,iBAhDJA,GAiDI,iBAjDJA,GAkDA,iBAlDAA,GAmDC,eAnDDA,GAoDO,qBApDPA,GAqDQ,sBArDRA,GAsDG,gBAtDHA,GAuDE,eAvDFA,GAwDa,4BAxDbA,GAyDA,oBAzDAA,GA0DC,qB,oBCzDDC,GAAW,wC,kBCoDTC,GArDM,CACnBC,KAAM,CACJC,YAAY,GAEdC,WAAW,EACXC,OAAQ,CAAEC,aAAcC,UAAUC,QAClCC,SAAU,CACRC,QAAS,GACTD,SAAU,GACVE,YAAa,GACbC,aAAc,GACdC,cAAe,GACfC,cAAe,CACbC,MAAO,GACPC,WAAY,KACZC,YAAa,EACbC,YAAa,CAAEC,KAAM,EAAGC,QAAS,GAAIC,QAAS,GAAIC,MAAO,KAE3DC,eAAgB,CAAEJ,KAAM,EAAGK,SAAU,GAAIC,YAAa,KAAMJ,QAAS,IACrEJ,YAAa,EACbD,WAAY,MAEdU,SAAU,CACRA,SAAU,GACVT,YAAa,EACbD,WAAY,KACZW,aAAc,EACdC,aAAc,EACdC,aAAc,IAEhBC,OAAQ,CACNC,YAAa,eACbC,UAAW,GACXC,MAAO,GACPC,OAAQ,GACRC,aAAc,GACdlB,YAAa,EACbD,WAAY,KACZoB,kBAAmB,EACnBC,WAAY,EACZC,YAAa,EACbC,WAAY,IAEdC,WAAY,GACZC,OAAQ,GACRC,QAAS,GACTC,MAAO,GACPC,UAAW,CACTC,aAAc,GACdC,gBAAiB,K,QC9CfC,GAAyB,SAACC,EAASvC,GAAc,IAAD,iBAChCA,GADgC,IACpD,2BAA8B,CAAC,IAAtBC,EAAqB,QACxBA,EAAQuC,MAAQD,EAAQC,MAM1BvC,EAAO,2BAAQA,GAAR,IAAiBwC,SAAUxC,EAAQwC,SAAWF,EAAQG,kBARb,8BAWpD,OAAO1C,GCDM2C,gBAAgB,CAC7BhD,UCXa,WAA6C,IAA5CiD,EAA2C,uDAAnCpD,GAAaG,UAAWkD,EAAW,uCACzD,OAAQA,EAAOC,MACb,KAAKxD,GACH,OAAgB,EAElB,KAAKA,GACH,OAAgB,EAElB,QACE,OAAOsD,IDGXnD,KEZa,WAAwC,IAAvCmD,EAAsC,uDAA9BpD,GAAaC,KAAMoD,EAAW,uCACpD,OAAQA,EAAOC,MACb,KAAKxD,EACH,OAAO,2BAAKsD,GAAZ,IAAmBlD,YAAY,IAEjC,KAAKJ,EACH,OAAO,2BAAKsD,GAAZ,IAAmBlD,YAAY,IAEjC,QACE,OAAOkD,IFIX5C,SDCa,WAA4C,IAA3C4C,EAA0C,uDAAlCpD,GAAaQ,SAAU6C,EAAW,uCACxD,OAAQA,EAAOC,MACb,KAAKxD,EACH,MAA8CuD,EAAON,QAA7C/B,EAAR,EAAQA,YAAaR,EAArB,EAAqBA,SAAUO,EAA/B,EAA+BA,WAC/B,OAAO,2BAAKqC,GAAZ,IAAmB5C,SAAUA,EAAUQ,cAAaD,eAEtD,KAAKjB,EACH,OAAO,2BAAKsD,GAAZ,IAAmB1C,YAAa2C,EAAON,UAEzC,KAAKjD,EACH,OAAO,2BAAKsD,GAAZ,IAAmB3C,QAAS4C,EAAON,UAErC,KAAKjD,GACH,MAA2CuD,EAAON,QAA1CjC,EAAR,EAAQA,MAAOE,EAAf,EAAeA,YAAaD,EAA5B,EAA4BA,WAC5B,OAAO,2BACFqC,GADL,IAEEvC,cAAc,2BACTuC,EAAMvC,eADE,IAEXC,MAAOA,EACPE,YAAaA,EACbD,WAAYA,MAIlB,KAAKjB,GACH,OAAO,2BAAKsD,GAAZ,IAAmB9B,eAAgB+B,EAAON,UAE5C,KAAKjD,GACH,OAAO,2BAAKsD,GAAZ,IAAmBvC,cAAc,2BAAMuC,EAAMvC,eAAb,IAA4BI,YAAaoC,EAAON,YAElF,KAAKjD,EACH,OAAO,2BAAKsD,GAAZ,IAAmB5C,SAAU4C,EAAM5C,SAAS+C,OAAOF,EAAON,WAE5D,KAAKjD,EACH,OAAO,2BACFsD,GADL,IAEE5C,SAAU4C,EAAM5C,SAASgD,KAAI,SAACC,GAAD,OAAQA,EAAET,MAAQK,EAAON,QAAQC,IAAMK,EAAON,QAAUU,OAGzF,KAAK3D,EAAqC,IAAD,iBACrBuD,EAAON,SADc,IACvC,2BAAkC,CAAC,IAA1BW,EAAyB,QAChCZ,GAAuBY,EAAON,EAAM1C,cAFC,8BAIvC,OAAO,2BAAK0C,GAAZ,IAAmB1C,YAAa0C,EAAM1C,cAExC,KAAKZ,EACH,OAAO,2BAAKsD,GAAZ,IAAmBzC,aAAcyC,EAAMzC,aAAa4C,OAAOF,EAAON,WAEpE,KAAKjD,EACH,OAAO,2BAAKsD,GAAZ,IAAmBzC,aAAc0C,EAAON,QAAQY,gBAElD,KAAK7D,EACH,OAAO,2BAAKsD,GAAZ,IAAmBxC,cAAewC,EAAMxC,cAAc2C,OAAOF,EAAON,WAEtE,KAAKjD,EACH,OAAO,2BAAKsD,GAAZ,IAAmBxC,cAAeyC,EAAON,QAAQa,iBAEnD,QACE,OAAOR,IC1DXvB,OGda,WAA0C,IAAzCuB,EAAwC,uDAAhCpD,GAAa6B,OAAQwB,EAAW,uCACtD,OAAQA,EAAOC,MACb,KAAKxD,EACH,MACEuD,EAAON,QADDlB,EAAR,EAAQA,OAAQb,EAAhB,EAAgBA,YAAaD,EAA7B,EAA6BA,WAAYoB,EAAzC,EAAyCA,kBAAmBC,EAA5D,EAA4DA,WAAYC,EAAxE,EAAwEA,YAAaC,EAArF,EAAqFA,WAGrF,OAAO,2BACFc,GADL,IAEErB,UAAWF,EACXb,cACAD,aACAoB,oBACAC,aACAC,cACAC,eAGJ,KAAKxC,EACH,OAAO,2BAAKsD,GAAZ,IAAmBrB,UAAWqB,EAAMrB,UAAUwB,OAAOF,EAAON,WAE9D,KAAKjD,EACH,OAAO,2BAAKsD,GAAZ,IAAmBpB,MAAOqB,EAAON,UAEnC,KAAKjD,GACH,OAAO,2BAAKsD,GAAZ,IAAmBnB,OAAQoB,EAAON,UAEpC,KAAKjD,GACH,OAAO,2BAAKsD,GAAZ,IAAmBlB,aAAcmB,EAAON,UAE1C,KAAKjD,GACH,IAAI+D,EACAC,EACAC,EACJ,GAAsB,iBAAlBV,EAAOW,QACTH,EAAgBT,EAAMlB,aAAa+B,MAAK,SAACR,GAAD,OAAOA,EAAET,MAAQK,EAAON,QAAQC,QAEtEe,EACEF,GACAT,EAAMlB,aAAasB,KAAI,SAACC,GAAD,OACrBA,EAAET,MAAQK,EAAON,QAAQC,IAAzB,2BAAoCS,GAApC,IAAuCP,cAAeG,EAAON,QAAQG,gBAAkBO,KAG3FK,GAAaD,GAAiBT,EAAMlB,aAAaqB,OAAOF,EAAON,cAIjE,IADAc,EAAgBT,EAAMlB,aAAagC,QAAO,SAACT,GAAD,OAAOA,EAAET,MAAQK,EAAON,QAAQC,QACxDmB,OAAS,EACzB,GAA6B,IAAzBN,EAAcM,OAAc,CAC9B,IAAMC,EACHC,OAAOR,EAAc,GAAGS,cAAgBD,OAAOR,EAAc,GAAGU,iBAAoB,IACjFC,EAA0BH,OAAOhB,EAAON,QAAQ0B,OAASJ,OAAOhB,EAAON,QAAQ2B,UAAa,IAEhGb,EAAc,GAAGS,cACjBT,EAAc,GAAGU,iBACjBH,IAA4BI,EAE5BV,EAAYV,EAAMlB,aAAaqB,OAAnB,2BACPF,EAAON,SADA,IAEV4B,KAAMC,KAAKC,SACX3B,cACEG,EAAON,QAAQG,cAAgBW,EAAc,GAAGiB,iBAC5CzB,EAAON,QAAQG,cAAgBW,EAAc,GAAGiB,iBAChDjB,EAAc,GAAGiB,iBAAmBzB,EAAON,QAAQG,iBAG3Da,EAAaX,EAAMlB,aAAasB,KAAI,SAACC,GAAD,OAClCA,EAAET,MAAQK,EAAON,QAAQC,IAAzB,2BAAoCS,GAApC,IAAuCP,cAAeG,EAAON,QAAQG,gBAAkBO,UAI3FM,EAAaX,EAAMlB,aAAasB,KAAI,SAACC,GAAD,OAClCA,EAAEkB,OAASd,EAAcA,EAAcM,OAAS,GAAGQ,KAAnD,2BACSlB,GADT,IACYP,cAAeG,EAAON,QAAQG,cAAe6B,YAAQC,IAC7DvB,UAIRK,EAAYV,EAAMlB,aAAaqB,OAAnB,2BAA+BF,EAAON,SAAtC,IAA+C4B,KAAMC,KAAKC,YAI1E,OAAO,2BAAKzB,GAAZ,IAAmBlB,aAAc6B,GAA0BD,IAE7D,KAAKhE,GACH,OAAO,2BACFsD,GADL,IAEElB,aAAckB,EAAMlB,aAAasB,KAAI,SAACC,GAAD,OACnCA,EAAET,MAAQK,EAAON,QAAQC,KAAOS,EAAEkB,OAAStB,EAAON,QAAQ4B,KAA1D,2BAAsElB,GAAtE,IAAyEsB,QAAQ,IAAStB,OAIhG,KAAK3D,GACH,OAAO,2BACFsD,GADL,IAEElB,aAAckB,EAAMlB,aAAagC,QAAO,SAACT,GAAD,OAAOA,EAAEkB,OAAStB,EAAON,QAAQ4B,MAAQlB,EAAET,MAAQK,EAAON,QAAQC,SAG9G,KAAKlD,GACH,OAAO,2BAAKsD,GAAZ,IAAmBlB,aAAc,KAEnC,KAAKpC,GACH,OAAO,2BAAKsD,GAAZ,IAAmBrB,UAAWqB,EAAMrB,UAAUyB,KAAI,SAACC,GAAD,OAAQA,EAAET,MAAQK,EAAON,QAAQC,IAAMK,EAAON,QAAUU,OAE5G,KAAK3D,GACH,OAAO,2BAAKsD,GAAZ,IAAmBtB,YAAauB,EAAON,UAEzC,QACE,OAAOK,IH5FXb,WIfa,WAA8C,IAA7Ca,EAA4C,uDAApCpD,GAAauC,WAAYc,EAAW,uCAC1D,OAAQA,EAAOC,MACb,KAAKxD,EACH,OAAgBuD,EAAON,QAEzB,KAAKjD,EACH,OAAgBsD,EAAMG,OAAOF,EAAON,SAEtC,KAAKjD,EACH,OAAgBsD,EAAMI,KAAI,SAACC,GAAD,OAAQA,EAAET,MAAQK,EAAON,QAAQC,IAAMK,EAAON,QAAUU,KAEpF,KAAK3D,EACH,OAAgBuD,EAAON,QAEzB,QACE,OAAOK,IJCXZ,OKhBa,WAA0C,IAAzCY,EAAwC,uDAAhCpD,GAAawC,OAAQa,EAAW,uCACtD,OAAQA,EAAOC,MACb,KAAKxD,EACH,OAAgBuD,EAAON,QAEzB,KAAKjD,EACH,OAAgBsD,EAAMG,OAAOF,EAAON,SAEtC,KAAKjD,EACH,OAAgBsD,EAAMI,KAAI,SAACC,GAAD,OAAQA,EAAET,MAAQK,EAAON,QAAQC,IAAMK,EAAON,QAAUU,KAEpF,KAAK3D,EACH,OAAgBuD,EAAON,QAEzB,QACE,OAAOK,ILEXT,UMjBa,WAA6C,IAA5CS,EAA2C,uDAAnCpD,GAAa2C,UAAWU,EAAW,uCACzD,OAAQA,EAAOC,MACb,KAAKxD,EACH,OAAO,2BAAKsD,GAAZ,IAAmBR,aAAcS,EAAON,UAE1C,KAAKjD,GACH,OAAO,2BAAKsD,GAAZ,IAAmBP,gBAAiBQ,EAAON,UAE7C,KAAKjD,EACH,OAAO,2BAAKsD,GAAZ,IAAmBR,aAAcQ,EAAMR,aAAaW,OAAOF,EAAON,SAAUF,gBAAiBQ,EAAON,UAEtG,KAAKjD,GACH,OAAO,2BAAKsD,GAAZ,IAAmBR,aAAcS,EAAON,UAE1C,KAAKjD,GACH,OAAO,2BAAKsD,GAAZ,IAAmBR,aAAcQ,EAAMR,aAAaY,KAAI,SAACC,GAAD,OAAQA,EAAET,MAAQK,EAAON,QAAQC,IAAMK,EAAON,QAAUU,OAElH,QACE,OAAOL,INAXV,MOlBa,WAAyC,IAAxCU,EAAuC,uDAA/BpD,GAAa0C,MAAOW,EAAW,uCACrD,OAAQA,EAAOC,MACb,KAAKxD,GACH,OAAgBuD,EAAON,QAEzB,KAAKjD,GACH,OAAgBsD,EAAMG,OAAOF,EAAON,SAEtC,KAAKjD,GACH,OAAgBuD,EAAON,QAEzB,KAAKjD,GACH,OAAgBsD,EAAMI,KAAI,SAACC,GAAD,OAAQA,EAAET,MAAQK,EAAON,QAAQC,IAAMK,EAAON,QAAUU,KAEpF,QACE,OAAOL,IPIXX,QQnBa,WAA2C,IAA1CW,EAAyC,uDAAjCpD,GAAayC,QAASY,EAAW,uCACvD,OAAQA,EAAOC,MACb,KAAKxD,GACH,OAAgBuD,EAAON,QAEzB,KAAKjD,GACH,OAAgBsD,EAAMG,OAAOF,EAAON,SAEtC,KAAKjD,GACH,OAAgBuD,EAAON,QAEzB,KAAKjD,GACH,OAAgBsD,EAAMI,KAAI,SAACC,GAAD,OAAQA,EAAET,MAAQK,EAAON,QAAQC,IAAMK,EAAON,QAAUU,KAEpF,QACE,OAAOL,IRKX3B,SSpBa,WAA4C,IAA3C2B,EAA0C,uDAAlCpD,GAAayB,SAAU4B,EAAW,uCACxD,OAAQA,EAAOC,MACb,KAAKxD,GACH,MAAwFuD,EAAON,QAAvFtB,EAAR,EAAQA,SAAUT,EAAlB,EAAkBA,YAAaD,EAA/B,EAA+BA,WAAYW,EAA3C,EAA2CA,aAAcC,EAAzD,EAAyDA,aAAcC,EAAvE,EAAuEA,aACvE,OAAO,2BAAKwB,GAAZ,IAAmB3B,WAAUT,cAAaD,aAAYW,eAAcC,eAAcC,iBAEpF,KAAK9B,GACH,OAAO,2BAAKsD,GAAZ,IAAmB3B,SAAU2B,EAAM3B,SAAS8B,OAAOF,EAAON,WAE5D,KAAKjD,GACH,OAAO,2BAAKsD,GAAZ,IAAmB3B,SAAU2B,EAAM3B,SAAS+B,KAAI,SAACC,GAAD,OAAQA,EAAET,MAAQK,EAAON,QAAQC,IAAMK,EAAON,QAAUU,OAE1G,KAAK3D,GACH,MAAwFuD,EAAON,QAAvFtB,EAAR,EAAQA,SAAUT,EAAlB,EAAkBA,YAAaD,EAA/B,EAA+BA,WAAYW,EAA3C,EAA2CA,aAAcC,EAAzD,EAAyDA,aAAcC,EAAvE,EAAuEA,aAEvE,OAAO,2BAAKwB,GAAZ,IAAmB3B,WAAUT,cAAaD,aAAYW,eAAcC,eAAcC,iBAEpF,QACE,OAAOwB,ITGX/C,aUrBa,WAA0C,IAAzC+C,EAAwC,uDAAhCpD,GAAaI,OAAQiD,EAAW,uCACtD,OAAQA,EAAOC,MACb,KAAKxD,GACH,OAAO,2BAAKsD,GAAZ,IAAmB/C,cAAc,IAEnC,KAAKP,GACH,OAAO,2BAAKsD,GAAZ,IAAmB/C,cAAc,IAEnC,QACE,OAAO+C,M,6BCNP6B,GAAkBtF,OAAOuF,sCAAwCC,KAEjEC,GAAgB,CACpBC,IAAK,MACLC,QAASA,KACTC,UAAW,CAAC,WAAY,YAAa,eAGjCC,GAAWC,aAAeL,GAAeM,IAEzCrE,GAAQsE,aAAYH,GAAUP,GAAgBW,aAAgBC,QAE9DC,GAAYC,aAAa1E,I,SChBxB,SAAS2E,GAAaC,GAC3B,OAAOC,GAASC,KAAT,gBAA+BF,GCCjC,IAAMG,GAAc,WACzB,MAAO,CACL9C,KAAMxD,IAuBGuG,GAAgB,yDAAM,WAAOC,GAAP,SAAAC,EAAA,sDACjC5G,OAAO6G,SAASC,KAAO,SACvBH,EApBO,CACLhD,KAAMxD,IAoBR4G,aAAaC,WAAW,SACxBD,aAAaC,WAAW,QAJS,2CAAN,uDCtBvBT,GAAWU,KAAMC,OAAO,CAC5BC,QAAS/G,KAGXmG,GAASa,aAAaC,QAAQC,KAAI,SAACC,GACjC,IAAMC,EAAQT,aAAaU,QAAQ,SAMnC,OALAF,EAAIG,QAAQC,OAAS,mBACrBJ,EAAIG,QAAJ,cAA+BF,EAC/BD,EAAIG,QAAQ,gBAAkB,mBAC9BhG,GAAMiF,SAAS,CAAEhD,KAAMxD,KAEhBoH,KAGThB,GAASa,aAAaQ,SAASN,KAC7B,SAACO,GAGC,OAFAnG,GAAMiF,SAASF,MACf/E,GAAMiF,SAAS,CAAEhD,KAAMxD,KAChB0H,KAET,SAACC,GAAW,IAAD,QAMT,OALI,UAACA,EAAMT,eAAP,iBAAC,EAAeU,mBAAhB,OAAC,EAA4BC,SAAS,aAAcF,EAAMG,WAAWD,SAAS,MAChFtG,GAAMiF,SAASD,MAEjBhF,GAAMiF,SAAS,CAAEhD,KAAMxD,KACvB+H,KAAMJ,MAAN,UAAYA,EAAMF,gBAAlB,aAAY,EAAgBtB,KAAK6B,SAC1BC,QAAQC,OAAR,UAAeP,EAAMF,gBAArB,aAAe,EAAgBtB,SAI3BC,UCnCR,SAAS+B,GAAUhC,EAAM/B,GAC9B,OAAOgC,GAASgC,IAAT,sBAA4BhE,EAAOhD,KAAnC,sBAAqDgD,EAAO/C,SAAW,CAC5EgH,OAAQlC,IAYL,SAASmC,GAAYnC,GAC1B,OAAOC,GAASC,KAAK,SAAUF,GAG1B,SAASoC,GAAYpC,EAAMqC,GAChC,OAAOpC,GAASqC,MAAT,iBAAyBD,GAAMrC,GAGjC,SAASuC,GAAYF,GAC1B,OAAOpC,GAASnB,OAAT,iBAA0BuD,ICrB5B,IAAMG,GAAoB,SAACzE,EAAQjB,GACxC,MAAO,CACLO,KAAMxD,GACNiD,UACAiB,WAkBS0E,GAAiB,SAAC3F,GAC7B,MAAO,CACLO,KAAMxD,EACNiD,YAkBS4F,GAA4B,WACvC,MAAO,CACLrF,KAAMxD,KAIG8I,GAA0B,SAAC7F,GACtC,MAAO,CACLO,KAAMxD,GACNiD,YAkBS8F,GAAmB,SAAC9F,GAC/B,MAAO,CACLO,KAAMxD,GACNiD,YAIS+F,GAAe,SAAC7C,GAAD,8CAAU,WAAOK,GAAP,eAAAC,EAAA,sEAClB6B,GAAYnC,GADM,cAEjB,OADbuB,EAD8B,QAE5BxD,SACNsC,GAxBwBvD,EAwBIyE,EAAIvB,KAvB3B,CACL3C,KAAMxD,EACNiD,aAsBA8E,KAAMkB,QAAQ,+BAJoB,kBAM7BvB,GAN6B,iCArBX,IAACzE,IAqBU,OAAV,uDASfiG,GAAY,SAAC/C,GAAD,8CAAU,WAAOK,GAAP,eAAAC,EAAA,sED7E1BL,GAASgC,IAAT,iBC6E0B,cAEd,OADbV,EAD2B,QAEzBxD,QACNsC,GA1B2BvD,EA0BIyE,EAAIvB,KAzB9B,CACL3C,KAAMxD,GACNiD,aAoB+B,kBAK1ByE,GAL0B,iCAvBL,IAACzE,IAuBI,OAAV,uD,iCC7CVkG,GAzCO,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SAC1C,OACE,eAAC,KAAD,CAAYC,QAAM,EAACC,KAAMJ,EAAzB,SACE,eAAC,KAAD,CACEK,GAAG,MACHC,UAAS,8BAAyBN,GAAU,2CAAnC,KACTO,QAAS,kBAAMN,GAAU,IAH3B,SAKE,uBAAKK,UAAU,gCAAf,UACE,eAAC,KAAWE,MAAZ,CACEH,GAAII,WACJC,MAAM,wBACNC,UAAU,YACVC,QAAQ,cACRC,MAAM,uBACNC,UAAU,cACVC,QAAQ,YAPV,SASE,eAAC,KAAOC,QAAR,CAAgBV,UAAU,oBAG5B,uBAAMA,UAAU,+CAA+C,cAAY,OAA3E,oBAGA,eAAC,KAAWE,MAAZ,CACEH,GAAII,WACJC,MAAM,wBACNC,UAAU,qBACVC,QAAQ,wBACRC,MAAM,uBACNC,UAAU,wBACVC,QAAQ,qBAPV,SASGb,YCnCN,SAASe,GAAelE,GAC7B,OAAOC,GAASC,KAAK,aAAcF,GAG9B,SAASmE,KACd,OAAOlE,GAASgC,IAAI,cAGf,SAASmC,GAAe/B,GAC7B,OAAOpC,GAASnB,OAAT,qBAA8BuD,IAGhC,SAASgC,GAAehC,EAAIrC,GACjC,OAAOC,GAASqC,MAAT,qBAA6BD,GAAMrC,GCX5C,IA4BasE,GAAwB,SAACxH,GACpC,MAAO,CACLO,KAAMxD,GACNiD,YC8EWyH,GA3GO,SAAC,GAAyC,IAAvCtB,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,UAAWsB,EAAmB,EAAnBA,aACpCC,EAAY,CAChBC,KAAM,GACNC,MAAO,GACPC,QAAS,IAELvE,EAAWwE,cACjB,EAA8CC,mBAASL,GAAvD,mBAAOM,EAAP,KAAwBC,EAAxB,KACM5K,EAAe6K,aAAY,SAAC9H,GAAD,OAAWA,EAAM/C,aAAaA,gBAEzD8K,EAAuB,SAAC1H,GAC5B,MAAwBA,EAAE2H,OAAlBT,EAAR,EAAQA,KAAMU,EAAd,EAAcA,MACdJ,GAAmB,SAACK,GAAD,mBAAC,eACfA,GADc,mBAEhBX,EAAOU,QAIZE,qBAAU,WACJd,GACFQ,EAAmBR,KAEpB,CAACA,IAuBJ,OACE,+BACE,eAAC,GAAD,CAAevB,OAAQA,EAAQC,UAAWA,EAA1C,SACE,uBAAKK,UAAU,6HAAf,UACE,gBAAC,KAAOgC,MAAR,CAAcjC,GAAG,KAAKC,UAAU,4DAAhC,UACGiB,EAAe,SAAW,MAD7B,eAGA,uBAAKjB,UAAU,QAAf,UACE,uBAAKA,UAAU,qBAAf,UACE,wBAAOA,UAAU,+BAAjB,2BACA,wBACEA,UAAU,cACVlG,KAAK,OACLqH,KAAK,OACLc,SAAUN,EACVE,MAAOL,EAAgBL,UAG3B,uBAAKnB,UAAU,qBAAf,UACE,wBAAOA,UAAU,+BAAjB,4BACA,wBACEA,UAAU,cACVmB,KAAK,QACLrH,KAAK,QACLmI,SAAUN,EACVE,MAAOL,EAAgBJ,WAG3B,uBAAKpB,UAAU,qBAAf,UACE,wBAAOA,UAAU,+BAAjB,mCACA,wBACEA,UAAU,cACVmB,KAAK,WACLrH,KAAK,OACLmI,SAAUN,EACVE,MAAOL,EAAgBH,gBAK7B,uBAAKrB,UAAU,OAAf,UACE,yBACElG,KAAK,SACLoI,QAhEiB,WAC3B,GAAIrL,EACF,GAAIoK,EAAc,CAChB,IAAQzH,EAA8BgI,EAA9BhI,IAAK2H,EAAyBK,EAAzBL,KAAMC,EAAmBI,EAAnBJ,MAAOC,EAAYG,EAAZH,QAC1BvE,GD+BuBgC,EC/BCtF,ED+BGiD,EC/BE,CAAE0E,OAAMC,QAAOC,WD+BtB,uCAAc,WAAOvE,GAAP,eAAAC,EAAA,sEACxB+D,GAAehC,EAAIrC,GADK,OAEvB,OADbuB,EADoC,QAElCxD,SACNsC,GA3C0BvD,EA2CIyE,EAAIvB,KA1C7B,CACL3C,KAAMxD,GACNiD,aAyCA8E,KAAMkB,QAAQ,kCAJ0B,iCAxCf,IAAChG,IAwCc,OAAd,wDC/BkC4I,MAAK,WAC3DxC,GAAU,GACV8B,EAAmBP,WAGrBpE,EDAsB,SAACL,GAAD,8CAAU,WAAOK,GAAP,eAAAC,EAAA,sEACpB4D,GAAelE,GADK,cAEnB,OADbuB,EADgC,QAE9BxD,SACNsC,GAtC0BvD,EAsCIyE,EAAIvB,KArC7B,CACL3C,KAAMxD,EACNiD,aAoCA8E,KAAMkB,QAAQ,kCAJsB,kBAM/BvB,GAN+B,iCAnCX,IAACzE,IAmCU,OAAV,sDCAb6I,CAAeZ,IAAkBW,MAAK,WAC7CxC,GAAU,GACV8B,EAAmBP,WAIvBpE,EAASiE,GAAsBS,IAC/B7B,GAAU,GACV8B,EAAmBP,GDkBK,IAACpC,EAAIrC,GC8BrBuD,UAAU,4OAHZ,oBAOA,yBACElG,KAAK,SACLkG,UAAU,8OACVkC,QAAS,kBAAMvC,GAAU,IAH3B,8BCjGL,SAAS0C,GAAW5F,GACzB,OAAOC,GAASC,KAAK,YAAaF,GAG7B,SAAS6F,KACd,OAAO5F,GAASgC,IAAI,SAGf,SAAS6D,GAAWzD,GACzB,OAAOpC,GAASnB,OAAT,uBAAgCuD,IAGlC,SAAS0D,GAAW1D,EAAIrC,GAC7B,OAAOC,GAAS+F,IAAT,uBAA6B3D,GAAMrC,GCX5C,ICsIeiG,GApIM,SAAC,GAAqC,IAAnChD,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,UAAWgD,EAAe,EAAfA,SACnCzB,EAAY,CAChBC,KAAM,GACNC,MAAO,GACPvJ,MAAO,KACP+K,KAAM,GACNC,SAAU,IAEN/F,EAAWwE,cACjB,EAAsCC,mBAASL,GAA/C,mBAAO4B,EAAP,KAAoBC,EAApB,KACM/J,EAAS0I,aAAY,SAAC9H,GAAD,OAAWA,EAAMZ,UACtCgK,EAAOC,KAAKC,MAAMhG,aAAaU,QAAQ,SAEvCuF,EAAmB,SAAClJ,GACxB,MAAwBA,EAAE2H,OAAlBT,EAAR,EAAQA,KAAMU,EAAd,EAAcA,MACdkB,GAAe,SAACjB,GAAD,mBAAC,eACXA,GADU,mBAEZX,EAAOU,QAIZE,qBAAU,WACJY,GACFI,EAAeJ,KAEhB,CAACA,IAiBJ,OACE,+BACE,eAAC,GAAD,CAAejD,OAAQA,EAAQC,UAAWA,EAA1C,SACE,uBAAKK,UAAU,6HAAf,UACE,gBAAC,KAAOgC,MAAR,CAAcjC,GAAG,KAAKC,UAAU,4DAAhC,UACG2C,EAAW,SAAW,MADzB,WAGA,uBAAK3C,UAAU,QAAf,UACkB,gBAAX,OAAJgD,QAAI,IAAJA,OAAA,EAAAA,EAAMJ,OACL,uBAAK5C,UAAU,qBAAf,UACE,wBAAOA,UAAU,+BAAjB,oBACA,0BAAQA,UAAU,eAAemB,KAAK,QAAQc,SAAUkB,EAAkBtB,MAAOiB,EAAYjL,MAA7F,UACE,yBAAQgK,MAAM,GAAGuB,UAAQ,EAACC,UAAQ,EAAlC,+BAGCrK,GACCA,EAAOgB,KAAI,SAACC,GAAD,OACT,yBAAoB4H,MAAO5H,EAAET,IAA7B,SACGS,EAAEkH,MADQlH,EAAET,cAOzB,uBAAKwG,UAAU,qBAAf,UACE,wBAAOA,UAAU,+BAAjB,kBACA,wBACEA,UAAU,cACVlG,KAAK,OACLqH,KAAK,OACLc,SAAUkB,EACVtB,MAAOiB,EAAY3B,UAGvB,uBAAKnB,UAAU,qBAAf,UACE,wBAAOA,UAAU,+BAAjB,mBACA,wBACEA,UAAU,cACVmB,KAAK,QACLrH,KAAK,QACLmI,SAAUkB,EACVtB,MAAOiB,EAAY1B,YAGrBuB,GACA,uBAAK3C,UAAU,qBAAf,UACE,wBAAOA,UAAU,+BAAjB,sBACA,wBACEA,UAAU,cACVmB,KAAK,WACLrH,KAAK,WACLmI,SAAUkB,EACVtB,MAAOiB,EAAYQ,cAIzB,uBAAKtD,UAAU,qBAAf,UACE,wBAAOA,UAAU,+BAAjB,kBACA,0BAAQA,UAAU,eAAemB,KAAK,OAAOc,SAAUkB,EAAkBtB,MAAOiB,EAAYF,KAA5F,UACE,yBAAQf,MAAM,GAAGuB,UAAQ,EAACC,UAAQ,EAAlC,8BAGA,yBAAQxB,MAAM,QAAd,mBACA,yBAAQA,MAAM,UAAd,qBACA,yBAAQA,MAAM,WAAd,gCAIN,uBAAK7B,UAAU,OAAf,UACE,yBACElG,KAAK,SACLoI,QAtFa,WACvB,GAAIS,EAAU,CACZ,IAAQ7D,EAA2CgE,EAA3ChE,GAAIqC,EAAuC2B,EAAvC3B,KAAMC,EAAiC0B,EAAjC1B,MAAOwB,EAA0BE,EAA1BF,KAAMU,EAAoBR,EAApBQ,SAAUzL,EAAUiL,EAAVjL,MACzCiF,EDsBoB,SAACgC,EAAIrC,GAAL,8CAAc,WAAOK,GAAP,eAAAC,EAAA,sEACpByF,GAAW1D,EAAIrC,GADK,OAEnB,OADbuB,EADgC,QAE9BxD,SACNsC,GApCsBvD,EAoCIyE,EAAIvB,KAnCzB,CACL3C,KAAMxD,GACNiD,aAkCA8E,KAAMkB,QAAQ,8BAJsB,iCAjCf,IAAChG,IAiCc,OAAd,sDCtBXgK,CAAWzE,EAAI,CAAEqC,OAAMC,QAAOkC,WAAUV,OAAM/K,WAAUsK,MAAK,WACpExC,GAAU,GACVoD,EAAe7B,WAGjBpE,GDTqBL,ECSDqG,EDTA,uCAAU,WAAOhG,GAAP,eAAAC,EAAA,sEAChBsF,GAAW5F,GADK,cAEf,OADbuB,EAD4B,QAE1BxD,SACNsC,GA/BsBvD,EA+BIyE,EAAIvB,KA9BzB,CACL3C,KAAMxD,GACNiD,aA6BA8E,KAAMkB,QAAQ,8BAJkB,kBAM3BvB,GAN2B,iCA5BX,IAACzE,IA4BU,OAAV,wDCSc4I,MAAK,WACrCxC,GAAU,GACVoD,EAAe7B,MDXG,IAACzE,GCwFbuD,UAAU,4OAHZ,oBAOA,yBACElG,KAAK,SACLkG,UAAU,8OACVkC,QAAS,kBAAMvC,GAAU,IAH3B,8B,SClBG6D,GApGM,SAAC,GAAwC,IAAD,IAArC9D,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,UAAW8D,EAAkB,EAAlBA,YACnCC,EAAaC,mBAEbC,EAAaC,2BAAgB,CACjCC,QAAS,kBAAMJ,EAAWK,SAC1BC,YAAY,IAGd,OACE,+BACE,eAAC,GAAD,CAAetE,OAAQA,EAAQC,UAAWA,EAA1C,SACE,uBAAKK,UAAU,+HAAf,UACE,eAAC,KAAOgC,MAAR,CAAcjC,GAAG,KAAKC,UAAU,4DAAhC,qBAGA,sBAAKA,UAAU,6BAAf,SACE,uBAAKA,UAAU,iDAAiDiE,IAAKP,EAArE,UACE,qBAAI1D,UAAU,2CAAd,oBACA,uBAAKA,UAAU,iBAAf,UACE,iCACE,+BACE,2BAASA,UAAU,UAAnB,UACE,uBAAMA,UAAU,YAAhB,6BACC,IAAIkE,MAAOC,0BAGhB,+BACE,2BAASnE,UAAU,UAAnB,UACE,uBAAMA,UAAU,YAAhB,2BACY,OAAXyD,QAAW,IAAXA,OAAA,EAAAA,EAAaW,YAAa,cAIjC,iCACE,+BACE,2BAASpE,UAAU,UAAnB,UACE,uBAAMA,UAAU,YAAhB,8BACY,OAAXyD,QAAW,IAAXA,GAAA,UAAAA,EAAaY,gBAAb,SAAuBlD,KAAOsC,EAAYY,SAASlD,KAAO,WAG/D,+BACE,2BAASnB,UAAU,UAAnB,UACE,uBAAMA,UAAU,YAAhB,+BACY,OAAXyD,QAAW,IAAXA,GAAA,UAAAA,EAAaY,gBAAb,SAAuBxB,SAAWY,EAAYY,SAASxB,SAAW,iBAK3E,yBAAO7C,UAAU,uCAAjB,UACE,iCACE,sBAAIA,UAAU,GAAd,UACE,qBAAIA,UAAU,iBAAd,kBACA,qBAAIA,UAAU,iBAAd,iBACA,qBAAIA,UAAU,iBAAd,qBAGJ,mCACGyD,EAAYa,YACXb,EAAYa,WAAWtK,KAAI,SAACC,EAAGsK,GAAJ,OACzB,sBAAIvE,UAAU,6BAAd,UACE,qBAAIA,UAAU,iBAAd,SAAgC/F,EAAEkH,OAClC,qBAAInB,UAAU,iBAAd,SAAgC/F,EAAEP,gBAClC,qBAAIsG,UAAU,iBAAd,SACG5E,KAAKoJ,OAAOvK,EAAEgB,MAAShB,EAAEgB,MAAQhB,EAAEiB,SAAY,KAAOjB,EAAEP,mBAJbO,EAAE6E,OAQtD,sBAAIkB,UAAU,wBAAd,UACE,wBACA,wCACA,8BAAK5E,KAAKoJ,MAAMf,EAAYgB,kBAIlC,oBAAGzE,UAAU,oBAAb,4CAIJ,uBAAKA,UAAU,OAAf,UACE,yBACElG,KAAK,SACLoI,QAAS0B,EACT5D,UAAU,4OAHZ,mBAOA,yBACElG,KAAK,SACLkG,UAAU,8OACVkC,QAAS,kBAAMvC,GAAU,IAH3B,8B,UCkBG+E,GA/FW,SAAC,GAA2B,IAAzBhF,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UAC7B7C,EAAWwE,cACTjJ,EAAWqJ,aAAY,SAAC9H,GAAD,MAAY,CACzCX,QAASW,EAAMX,QACfZ,OAAQuB,EAAMvB,OAAOI,WAFfJ,OAIFsM,EAAWC,cAcXC,EAAqB,SAACpI,GAC1BK,EAASoC,GAAezC,IACxBK,EAASuC,GAdgB,SAAC5C,GAU1B,OATeA,EAAKzC,KAAI,SAACC,GAAD,mBAAC,eACpBA,EAAEhD,SADiB,IAEtBkE,KAAMC,KAAKC,SACXN,gBAAiBd,EAAEc,gBACnBD,aAAcb,EAAEa,aAChBpB,cAAeO,EAAER,SACjB6B,iBAAkBrB,EAAER,SACpBqL,aAAc7K,EAAE8K,eAMQC,CAAmBvI,EAAK6H,cAClDxH,EAASiE,GAAqB,OAACtE,QAAD,IAACA,OAAD,EAACA,EAAM4H,WACrCvH,EAASsC,GAAwB,iBACjCuF,EAAS,IAAK,CAAE/K,MAAO,CAAEqL,SAAQ,OAAExI,QAAF,IAAEA,OAAF,EAAEA,EAAMwI,SAASzL,QAGpDuI,qBAAU,WACRjF,EAAS0C,QACR,CAAC1C,IAEJ,IAAMoI,EAAqB,SAACpG,GAC1BhC,ET2EuB,SAACgC,GAAD,8CAAQ,WAAOhC,GAAP,eAAAC,EAAA,sEACfiC,GAAYF,GADG,cAEd,OADbd,EAD2B,QAEzBxD,QACN6D,KAAMkB,QAAQ,8BAHiB,kBAK1BvB,GAL0B,2CAAR,sDS3EdmH,CAAYrG,IAAKqD,MAAK,WAC7BrF,EAAS0C,UAIb,OACE,+BACE,eAAC,GAAD,CAAeE,OAAQA,EAAQC,UAAWA,EAA1C,SACE,uBAAKK,UAAU,+GAAf,UACE,eAAC,KAAOgC,MAAR,CAAcjC,GAAG,KAAKC,UAAU,4DAAhC,2BAGA,sBAAKA,UAAU,8BAAf,SACE,yBAAOA,UAAU,qCAAjB,UACE,wBAAOA,UAAU,6BAAjB,SACE,gCACE,uCACA,gDACA,wCACA,0CACA,2CACA,8CAGJ,iCACG3H,GACCA,EAAO2B,KAAI,SAACC,EAAGmL,GAAJ,mBACT,gCACE,8BAAKA,EAAQ,IACb,+BAAM,OAADnL,QAAC,IAADA,GAAA,UAAAA,EAAGoK,gBAAH,eAAalD,OAAQ,QAC1B,8BAAKlH,EAAEwK,QACP,8BAAK,UAAAxK,EAAEoL,eAAF,SAAWlE,KAAX,UAAkBlH,EAAEoL,eAApB,aAAkB,EAAWlE,KAAO,QACzC,8BAAK,UAAAlH,EAAEgL,gBAAF,SAAY9D,KAAOlH,EAAEgL,SAAS9D,KAAO,QAC1C,sBAAInB,UAAU,mCAAd,UACE,yBAAQA,UAAU,aAAakC,QAAS,kBAAMgD,EAAmBjL,EAAET,MAAnE,SACE,eAAC8L,EAAA,EAAD,CAAWtF,UAAU,UAEvB,yBAAQA,UAAU,qBAAqBkC,QAAS,kBAAM2C,EAAmB5K,IAAzE,SACE,eAACsL,GAAA,EAAD,CAAevF,UAAU,eAXtB/F,EAAET,eAoBrB,sBAAKwG,UAAU,6BAAf,SACE,yBACElG,KAAK,SACLkG,UAAU,4OACVkC,QAAS,kBAAMvC,GAAU,IAH3B,6BCzCG6F,GAnDM,SAAC,GAAqD,IAAnD9F,EAAkD,EAAlDA,OAAQC,EAA0C,EAA1CA,UAAW8F,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aACrD,EAA8BnE,mBAAS,IAAvC,mBAAOoE,EAAP,KAAgBC,EAAhB,KACA,OACE,+BACE,eAAC,GAAD,CAAelG,OAAQA,EAAQC,UAAWA,EAA1C,SACE,uBAAKK,UAAU,+GAAf,UACE,eAAC,KAAOgC,MAAR,CAAcjC,GAAG,KAAKC,UAAU,4DAAhC,qBAGA,uBAAKA,UAAU,8BAAf,UACE,uBAAKA,UAAU,qBAAf,UACE,wBAAOA,UAAU,+BAAjB,mBACA,wBAAOA,UAAU,cAAclG,KAAK,OAAOuJ,UAAQ,EAACxB,MAAO4D,OAE7D,uBAAKzF,UAAU,qBAAf,UACE,wBAAOA,UAAU,+BAAjB,qBACA,wBAAOA,UAAU,cAAclG,KAAK,OAAOmI,SAAU,SAAChI,GAAD,OAAO2L,EAAW3L,EAAE2H,OAAOC,QAAQA,MAAO8D,OAEhG9K,OAAO8K,GAAWF,GACjB,uBAAKzF,UAAU,4EAAf,uBACa5E,KAAKoJ,MAAMiB,EAAa5K,OAAO8K,UAIhD,uBAAK3F,UAAU,uCAAf,UACGnF,OAAO8K,IAAYF,GAClB,yBACE3L,KAAK,SACLoI,QAAS,WACPwD,EAAatK,KAAKoJ,MAAMiB,EAAa5K,OAAO8K,KAC5CC,EAAW,KAEb5F,UAAU,4OANZ,2BAWF,yBACElG,KAAK,SACLkG,UAAU,yOACVkC,QAAS,kBAAMvC,GAAU,IAH3B,8B,SCvCL,SAASkG,GAAYpJ,GAC1B,OAAOC,GAASgC,IAAT,yBACajC,EAAK/E,KADlB,yBACuC+E,EAAKzE,YAD5C,4BAC2EyE,EAAK7E,QADhF,sBACqG6E,EAAK1E,WAY5G,SAAS+N,GAAiBrJ,GAC/B,OAAOC,GAASgC,IAAT,wCAC4BjC,EAAK7E,QADjC,kBACkD6E,EAAK/E,KADvD,sBACyE+E,EAAK9E,QAD9E,mBACgG8E,EAAK5E,QAIvG,SAASkO,GAActJ,GAC5B,OAAOC,GAASC,KAAK,YAAaF,GAG7B,SAASuJ,GAAclH,GAC5B,OAAOpC,GAASnB,OAAT,oBAA6BuD,IAG/B,SAASmH,GAAcnH,EAAIoH,GAChC,OAAOxJ,GAASqC,MAAT,oBAA4BD,GAAMoH,GCnB3C,IA0CaC,GAAuB,SAAC5M,GACnC,MAAO,CACLO,KAAMxD,GACNiD,YAIS6M,GAA4B,SAAC7M,GACxC,MAAO,CACLO,KAAMxD,GACNiD,YAWS8M,GAAc,SAAC5J,GAAD,8CAAU,WAAOK,GAAP,eAAAC,EAAA,sEACjB8I,GAAYpJ,GADK,OAEhB,OADbuB,EAD6B,QAE3BxD,QACNsC,GAlEuBvD,EAkEG,OAACyE,QAAD,IAACA,OAAD,EAACA,EAAKvB,KAjE3B,CACL3C,KAAMxD,EACNiD,aA4DiC,iCA/DX,IAACA,IA+DU,OAAV,uDAqBd+M,GAAiB,SAAC7J,GAAD,8CAAU,WAAOK,GAAP,eAAAC,EAAA,sEDvF/BL,GAASgC,IAAT,iBCuF+B,cAEnB,OADbV,EADgC,QAE9BxD,QACNsC,GAhF0BvD,EAgFIyE,EAAIvB,KA/E7B,CACL3C,KAAMxD,EACNiD,aA0EoC,kBAM/ByE,GAN+B,iCA7EX,IAACzE,IA6EU,OAAV,uDC3BfgN,GAnEMnQ,IAAMoQ,YAAW,WAAkBvC,GAAS,IAAD,IAAvBR,EAAuB,EAAvBA,YACvC,OACE,sBAAKzD,UAAU,6BAAf,SACE,uBAAKA,UAAU,iDAAiDiE,IAAKA,EAArE,UACE,qBAAIjE,UAAU,2CAAd,oBACA,uBAAKA,UAAU,iBAAf,UACE,iCACE,+BACE,2BAASA,UAAU,UAAnB,UACE,uBAAMA,UAAU,YAAhB,6BACC,IAAIkE,MAAOC,0BAGhB,+BACE,2BAASnE,UAAU,UAAnB,UACE,uBAAMA,UAAU,YAAhB,2BACY,OAAXyD,QAAW,IAAXA,OAAA,EAAAA,EAAaW,YAAa,cAIjC,iCACE,+BACE,2BAASpE,UAAU,UAAnB,UACE,uBAAMA,UAAU,YAAhB,8BACY,OAAXyD,QAAW,IAAXA,GAAA,UAAAA,EAAaY,gBAAb,SAAuBlD,KAAOsC,EAAYY,SAASlD,KAAO,WAG/D,+BACE,2BAASnB,UAAU,UAAnB,UACE,uBAAMA,UAAU,YAAhB,+BACY,OAAXyD,QAAW,IAAXA,GAAA,UAAAA,EAAaY,gBAAb,SAAuBxB,SAAWY,EAAYY,SAASxB,SAAW,iBAK3E,yBAAO7C,UAAU,uCAAjB,UACE,iCACE,sBAAIA,UAAU,GAAd,UACE,qBAAIA,UAAU,iBAAd,kBACA,qBAAIA,UAAU,iBAAd,iBACA,qBAAIA,UAAU,iBAAd,qBAGJ,mCACGyD,EAAYa,YACXb,EAAYa,WAAWtK,KAAI,SAACC,EAAGsK,GAAJ,OACzB,sBAAIvE,UAAU,6BAAd,UACE,qBAAIA,UAAU,iBAAd,SAAgC/F,EAAEkH,OAClC,qBAAInB,UAAU,iBAAd,SAAgC/F,EAAEP,gBAClC,qBAAIsG,UAAU,iBAAd,SACG5E,KAAKoJ,OAAOvK,EAAEgB,MAAShB,EAAEgB,MAAQhB,EAAEiB,SAAY,KAAOjB,EAAEP,mBAJbO,EAAE6E,OAQtD,sBAAIkB,UAAU,wBAAd,UACE,wBACA,wCACA,8BAAK5E,KAAKoJ,MAAMf,EAAYgB,kBAIlC,oBAAGzE,UAAU,oBAAb,+CCkeOyG,GA1fK,WAClB,IAAM3J,EAAWwE,cACjB,EAWII,aAAY,SAAC9H,GAAD,MAAY,CAC1BlB,aAAckB,EAAMvB,OAAOK,aAC3BF,MAAOoB,EAAMvB,OAAOG,MACpBF,YAAasB,EAAMvB,OAAOC,YAC1Be,gBAAiBO,EAAMT,UAAUE,gBACjCF,UAAWS,EAAMT,UAAUC,aAC3BF,MAAOU,EAAMV,MAAMwB,QAAO,SAACT,GAAD,MAAkB,aAAXA,EAAE2I,QACnC9K,eAAgB8B,EAAM5C,SAASc,eAC/Bd,SAAU4C,EAAM5C,SAASA,SACzByB,OAAQmB,EAAMvB,OAAOI,OACrB5B,aAAc+C,EAAM/C,aAAaA,iBApBjC6B,EADF,EACEA,aACAW,EAFF,EAEEA,gBACAF,EAHF,EAGEA,UACAD,EAJF,EAIEA,MACAV,EALF,EAKEA,MACAF,EANF,EAMEA,YACAR,EAPF,EAOEA,eACAW,EARF,EAQEA,OACAzB,EATF,EASEA,SACAH,EAVF,EAUEA,aAaF,EAA8C0K,mBAAS,IAAvD,mBAAOmF,EAAP,KAAwBC,EAAxB,KACA,EAAoCpF,oBAAS,GAA7C,mBAAOqF,EAAP,KAAmBC,EAAnB,KACA,EAAgDtF,oBAAS,GAAzD,mBAAOuF,EAAP,KAAyBC,EAAzB,KACA,EAAkCxF,mBAAS,MAA3C,mBAAO6C,EAAP,KAAkB4C,EAAlB,KACA,EAAkCzF,mBAAS,MAA3C,mBAAO0F,EAAP,KAAkBC,EAAlB,KACQtN,EAAUuN,cAAVvN,MACFwN,GAAazD,mBACb0D,GAAc1D,mBACdgB,GAAWC,cAEjB7C,qBAAU,WACRjF,EX3BwB,uCAAM,WAAOA,GAAP,eAAAC,EAAA,sEACd6D,KADc,cAEb,OADb5C,EAD0B,QAExBxD,QACNsC,GAxCwBvD,EAwCIyE,EAAIvB,KAvC3B,CACL3C,KAAMxD,EACNiD,aAkC8B,kBAKzByE,GALyB,iCArCP,IAACzE,IAqCM,OAAN,yDW4BvB,CAACuD,IAEJiF,qBAAU,WACR,OAAInI,QAAJ,IAAIA,KAAOqL,UACT0B,EAAmB/M,EAAMqL,YAE1B,CAACrL,IAEJ,IAAM6L,GACJ/M,GACAA,EACGgC,QAAO,SAACT,GAAD,OAAQA,EAAEsB,UACjB+L,QAAO,SAACxF,EAAKyF,GACZ,IAAM3M,EAA2BC,OAAO0M,EAAKzM,cAAgBD,OAAO0M,EAAKxM,iBAAoB,IACvFC,EAA0BH,OAAO0M,EAAKtM,OAASJ,OAAO0M,EAAKrM,UAAa,IAC9E,OAAIqM,EAAKzM,cAAgByM,EAAKxM,iBAAmBH,IAA4BI,EAEzE8G,GACCjH,OAAO0M,EAAKzM,cAAiBD,OAAO0M,EAAKzM,cAAgBD,OAAO0M,EAAKxM,iBAAoB,KACxFF,OAAO0M,EAAK7N,eAIhBoI,GAAOjH,OAAO0M,EAAKtM,OAAUJ,OAAO0M,EAAKtM,OAASJ,OAAO0M,EAAKrM,UAAa,KAAOL,OAAO0M,EAAK7N,iBAE/F,GACD8N,GACJ9O,GACAA,EACGgC,QAAO,SAACT,GAAD,OAAQA,EAAEsB,UACjB+L,QAAO,SAACxF,EAAKyF,GACZ,OAAOzF,EAAMjH,OAAO0M,EAAKE,aAAe5M,OAAO0M,EAAK7N,iBACnD,GAEDgO,GAAmB,WACH,iBAAhBpP,GACFwE,EAASsC,GAAwB,iBAEnCtC,EAASqC,MACLtI,GACFiG,EAASuJ,GAAYvO,IAEvBgF,EAASiE,GAAsB,KAC/BgG,GAAoB,GACpBJ,EAAmB,IACf/M,GAAK,OAAIA,QAAJ,IAAIA,KAAOqL,UAClBN,GAAS,MAIPjB,GAAaC,mBAEbC,GAAaC,2BAAgB,CACjCC,QAAS,kBAAMJ,GAAWK,SAC1BC,YAAY,IAGR2D,GAAoB,SAACnN,EAAQoN,GACjC,IAAMC,EAAUzM,KAAKC,SAErB,GADA2L,EAAaa,GACO,iBAAhBvP,EACFwE,EdvCqB,SAACL,EAAMqC,GAAP,8CAAc,WAAOhC,GAAP,eAAAC,EAAA,sEACrB8B,GAAYpC,EAAMqC,GADG,cAEpB,OADbd,EADiC,QAE/BxD,SACNsC,GAzF8BvD,EAyFHyE,EAAIvB,KAxF1B,CACL3C,KAAMxD,GACNiD,aAuFA8E,KAAMkB,QAAQ,+BAJuB,kBAMhCvB,GANgC,iCAtFR,IAACzE,IAsFO,OAAd,sDcwCnBuO,CACE,CACEtN,OAAQA,EACRyK,SAAUyB,QAAmBlL,EAC7B6I,UAAyB,OAAfhL,QAAe,IAAfA,OAAA,EAAAA,EAAiBG,WAAOgC,EAClCoM,OAAQA,QAAkBpM,EAC1B8I,WAAY5L,EAAasB,KAAI,SAACC,GAC5B,IAAMW,EAA2BC,OAAOZ,EAAEa,cAAgBD,OAAOZ,EAAEc,iBAAoB,IACjFC,EAA0BH,OAAOZ,EAAEgB,OAASJ,OAAOZ,EAAEiB,UAAa,IAExE,MAAO,CACL4D,GAAK,OAAD7E,QAAC,IAADA,KAAG8N,YAAc9N,EAAE8N,iBAAcvM,EACrCvE,QAASgD,EAAET,IACXC,SAAUQ,EAAEP,cACZ4B,iBAAkBrB,EAAEqB,iBACpBwJ,aAAc7K,EAAE6K,aAChBC,UACE9K,EAAEa,cAAgBb,EAAEc,iBAAmBH,IAA4BI,EAC/DI,KAAKoJ,OACF3J,OAAOZ,EAAEa,cAAiBD,OAAOZ,EAAEa,cAAgBD,OAAOZ,EAAEc,iBAAoB,KAC/EF,OAAOZ,EAAEP,gBAEb0B,KAAKoJ,OAAOvK,EAAEgB,MAAShB,EAAEgB,MAAQhB,EAAEiB,SAAY,KAAOjB,EAAEP,eAC9DoB,aAAe,OAADb,QAAC,IAADA,KAAGa,aAAeb,EAAEa,aAAeb,EAAEgB,MACnDF,gBAAiBd,EAAEc,gBAAkBd,EAAEc,gBAAkBd,EAAEiB,SAC3DK,SAAS,OAADtB,QAAC,IAADA,MAAGsB,cAAgBC,MAG/BiJ,MAAOgB,GACP+B,qBAEFhP,EAAMgB,MAER2I,MAAK,SAACnE,GACa,MAAfA,EAAIxD,SACNwM,EAAahJ,EAAIvB,KAAK2H,WACtBR,KACA8D,cAIJ,GAAI7Q,EACFiG,EACEwC,GAAa,CACX9E,OAAQA,EACRyK,SAAUyB,QAAmBlL,EAC7B6I,UAAyB,OAAfhL,QAAe,IAAfA,OAAA,EAAAA,EAAiBG,WAAOgC,EAClCoM,OAAQA,QAAkBpM,EAC1B8I,WAAY5L,EAAasB,KAAI,SAACC,GAAD,MAAQ,CACnC6E,GAAK,OAAD7E,QAAC,IAADA,KAAG8N,YAAc9N,EAAE8N,iBAAcvM,EACrCvE,QAASgD,EAAET,IACXC,SAAUQ,EAAEP,cACZqB,gBAAiBd,EAAEiB,SACnB6J,UAAW3J,KAAKoJ,OAAOvK,EAAEgB,MAAShB,EAAEgB,MAAQhB,EAAEiB,SAAY,KAAOjB,EAAEP,eACnEoB,aAAcb,EAAEgB,UAElBwJ,MAAOgB,GACP+B,uBAEFrF,MAAK,SAACnE,GACa,MAAfA,EAAIxD,SACNwM,EAAahJ,EAAIvB,KAAK2H,WACtBR,KACA8D,aAGC,CACL5K,EFxIC,CACLhD,KAAMxD,EACNiD,QEsI0Cb,IACtC,IAAMsP,EAAW9K,aAAaU,QAAQ,UAChCnB,EAAOuL,EAAQ,sBAEZ/E,KAAKC,MAAM8E,IAFC,CAGf,CACExN,OAAQA,EACRyK,SAAUyB,QAAmBlL,EAC7B6I,UAAyB,OAAfhL,QAAe,IAAfA,OAAA,EAAAA,EAAiBG,WAAOgC,EAClCyM,mBAAqBpR,OAAiC2E,EAAlBnC,EACpCuO,OAAQA,QAAkBpM,EAC1B0M,UAAW,IAAIhE,KACfI,WAAY5L,EAAasB,KAAI,SAACC,GAAD,MAAQ,CACnC6E,GAAK,OAAD7E,QAAC,IAADA,KAAG8N,YAAc9N,EAAE8N,iBAAcvM,EACrCvE,QAASgD,EAAET,IACXC,SAAUQ,EAAEP,cACZqB,gBAAiBd,EAAEiB,SACnB6J,UAAW3J,KAAKoJ,OAAOvK,EAAEgB,MAAShB,EAAEgB,MAAQhB,EAAEiB,SAAY,KAAOjB,EAAEP,eACnEoB,aAAcb,EAAEgB,UAElBwJ,MAAOgB,GACP+B,uBAGJ,CACE,CACEhN,OAAQA,EACRyK,SAAUyB,QAAmBlL,EAC7B6I,UAAyB,OAAfhL,QAAe,IAAfA,OAAA,EAAAA,EAAiBG,WAAOgC,EAClCyM,mBAAqBpR,OAAiC2E,EAAlBnC,EACpC6O,UAAW,IAAIhE,KACf0D,OAAQA,QAAkBpM,EAC1B8I,WAAY5L,EAAasB,KAAI,SAACC,GAAD,MAAQ,CACnC6E,GAAK,OAAD7E,QAAC,IAADA,KAAG8N,YAAc9N,EAAE8N,iBAAcvM,EACrCvE,QAASgD,EAAET,IACXC,SAAUQ,EAAEP,cACZqB,gBAAiBd,EAAEiB,SACnB6J,UAAW3J,KAAKoJ,OAAOvK,EAAEgB,MAAShB,EAAEgB,MAAQhB,EAAEiB,SAAY,KAAOjB,EAAEP,eACnEoB,aAAcb,EAAEgB,UAElBwJ,MAAOgB,GACP+B,sBAGRtK,aAAaiL,QAAQ,SAAUlF,KAAKmF,UAAU3L,IAC9CiL,OAQN,GAAkDnG,oBAAS,GAA3D,qBAAO8G,GAAP,MAA0BC,GAA1B,MACA,GAA0C/G,oBAAS,GAAnD,qBAAOgH,GAAP,MAAsBC,GAAtB,MACA,GAAgDjH,oBAAS,GAAzD,qBAAOkH,GAAP,MAAyBC,GAAzB,MAgBM1F,GAAOC,KAAKC,MAAMhG,aAAaU,QAAQ,SAMvC+K,GAAkBxP,EAAUa,KAAI,SAACC,GAAD,MAAQ,CAAE2O,MAAO3O,EAAEkH,KAAMU,MAAO5H,EAAET,QAClEqP,GAAkB3P,EAAMc,KAAI,SAACC,GAAD,MAAQ,CAAE2O,MAAO3O,EAAEkH,KAAMU,MAAO5H,EAAET,QAe9DqL,GAAqB,SAACpI,GAC1BK,EAASoC,GAAezC,IACxBK,EAASuC,GAfgB,SAAC5C,GAU1B,OATeA,EAAKzC,KAAI,SAACC,GAAD,mBAAC,eACpBA,EAAEhD,SADiB,IAEtBkE,KAAMC,KAAKC,SACXN,gBAAiBd,EAAEc,gBACnBD,aAAcb,EAAEa,aAChBpB,cAAeO,EAAER,SACjB6B,iBAAkBrB,EAAER,SACpBqL,aAAc7K,EAAE8K,eAOQC,CAAmBvI,EAAK6H,cAClDxH,EAASiE,GAAqB,OAACtE,QAAD,IAACA,OAAD,EAACA,EAAM4H,WACrCvH,EAASsC,GAAwB,iBACjCuF,GAAS,IAAK,CAAE/K,MAAO,CAAEqL,SAAQ,OAAExI,QAAF,IAAEA,OAAF,EAAEA,EAAMwI,SAASzL,QAG9CsP,GAAoB,SAACC,GACzB,IAAMlN,EAAMkN,EAAMlN,IACdkN,EAAMC,SAAmB,eAARnN,EACnBwL,GAAYtD,QAAQkF,QACXF,EAAMC,SAAmB,cAARnN,GAC1BuL,GAAWrD,QAAQkF,SAIvBlH,qBAAU,WAGR,OAFA5L,OAAO+S,iBAAiB,WAAW,SAACjP,GAAD,OAAO6O,GAAkB7O,MAErD,WACL9D,OAAOgT,oBAAoB,WAAW,SAAClP,GAAD,OAAO6O,GAAkB7O,SAEhE,IAiDH,OACE,uBAAK+F,UAAU,2BAAf,UACE,uBAAKA,UAAU,qBAAf,UACE,uBAAKA,UAAU,sBAAf,UACE,yBACEA,UAAU,gCACVqD,WAAU,OAAC5K,QAAD,IAACA,KAAQkC,QACnBuH,QAtDM,WACd,GAAsB,IAAlBzJ,EAAOkC,QAA8B,IAAdsM,GAAiC,OAAdA,EAAoB,CAChE,IAAM7B,GAAS6B,EAAY,GAAKxO,EAAOkC,OACvCuM,EAAa9B,GACbP,GAAmBpM,EAAO2M,QACrB,CACL,IAAMA,EAAQ3M,EAAOkC,OAAS,EAC9BuM,EAAazO,EAAOkC,OAAS,GAC7BkK,GAAmBpM,EAAO2M,MA+CpBnB,IAAKmD,GAJP,SAME,eAACgC,EAAA,EAAD,CAAiBpJ,UAAU,eAE7B,0BAAQA,UAAU,6BAA6BkC,QAAS,kBAAM2E,GAAc,IAA5E,UACE,eAACwC,EAAA,EAAD,CAAgBrJ,UAAU,aAD5B,mBAIA,yBACEA,UAAU,gCACVqD,WAAU,OAAC5K,QAAD,IAACA,KAAQkC,QACnBuH,QAtDO,WACf,GAAsB,IAAlBzJ,EAAOkC,QAA8B,OAAdsM,EAAoB,CAC7C,IAAM7B,GAAS6B,EAAY,GAAKxO,EAAOkC,OACvCuM,EAAa9B,GACbP,GAAmBpM,EAAO2M,SAE1B8B,EAAa,GACbrC,GAAmBpM,EAAO,KAgDpBwL,IAAKoD,GAJP,SAME,eAACiC,EAAA,EAAD,CAAkBtJ,UAAU,kBAGhC,uBAAKA,UAAU,YAAf,UACE,eAAC,KAAD,CACEuJ,QAASZ,GACTa,YAAY,qBACZ3H,MAAsB,OAAfxI,QAAe,IAAfA,KAAiBG,IAAMmP,GAAgBlO,MAAK,SAACR,GAAD,OAAOA,EAAE4H,QAAUxI,EAAgBG,OAAO,KAC7FiQ,aAAW,EACXxH,SAtImB,SAAChI,GAC5B,UAAIA,QAAJ,IAAIA,KAAG4H,MAAO,CACZ,IAAQA,EAAU5H,EAAV4H,MACFwC,EAAWlL,EAAUsB,MAAK,SAACR,GAAD,OAAOA,EAAET,MAAQqI,KACjD/E,EAASiE,GAAsBsD,SAE/BvH,EAASiE,GAAsB,QAkI3B,yBAAQf,UAAU,oBAAoBkC,QAAS,kBAAMoG,IAAqB,IAA1E,SACE,eAACoB,EAAA,EAAD,CAAU1J,UAAU,aAGxB,uBAAKA,UAAU,YAAf,UACE,eAAC,KAAD,CACEuJ,QAASV,GACTW,YAAY,qBACZC,aAAW,EACX5H,MAA2B,KAApB6E,EAAyBmC,GAAgBpO,MAAK,SAACR,GAAD,OAAOA,EAAE4H,QAAU6E,KAAmB,KAC3FzE,SAAU,SAAChI,GAAD,OAAS,OAADA,QAAC,IAADA,KAAG4H,MAAQ8E,EAAmB1M,EAAE4H,OAAS8E,EAAmB,QAE/D,gBAAX,OAAJ3D,SAAI,IAAJA,QAAA,EAAAA,GAAMJ,OAAwC,WAAX,OAAJI,SAAI,IAAJA,QAAA,EAAAA,GAAMJ,QACrC,yBAAQ5C,UAAU,oBAAoBkC,QAAS,kBAAMsG,IAAiB,IAAtE,SACE,eAACkB,EAAA,EAAD,CAAU1J,UAAU,aAI1B,uBAAKA,UAAU,oBAAf,UACE,wBACElG,KAAK,SACL0P,YAAY,iDACZxJ,UAAU,sBACViC,SAhFmB,SAAChI,GAC5B,IAAQ4H,EAAU5H,EAAE2H,OAAZC,MAEF5K,EAAUD,EAASyD,MAAK,SAACkP,GAAD,OAAOA,EAAEC,UAAY/H,KAEnD,UAAI5K,QAAJ,IAAIA,KAASuC,IAAK,CAChB,IAAMa,EAAgB3B,EAAagC,QAAO,SAACT,GAAD,OAAOA,EAAET,MAAQvC,EAAQuC,OAC/Da,EAAcM,OAAS,EACzBmC,EACEmC,GAAkB3G,EAAD,YAAC,eACbrB,GADY,IAEfyC,cACEmB,OAAOR,EAAcA,EAAcM,OAAS,GAAGjB,eAAiBmB,OAAO5D,EAAQwC,UAC3EY,EAAcA,EAAcM,OAAS,GAAGjB,cAAgB,EACxDW,EAAcA,EAAcM,OAAS,GAAGjB,kBAIlDoD,EAASmC,GAAkB3G,EAAD,YAAC,eAAkBrB,GAAnB,IAA4ByC,cAAe,MAEvEmQ,YAAW,kBAAO5P,EAAE2H,OAAOC,MAAQ,KAAK,SA8DpC,yBAAQ7B,UAAU,cAAlB,SACE,eAAC8J,EAAA,EAAD,CAAW9J,UAAU,aAGzB,sBAAKA,UAAU,6BAAf,SACE,sBAAKA,UAAU,aAAf,SACE,yBAAOA,UAAU,2BAAjB,UACE,iCACE,gCACE,qBAAIA,UAAU,QAAd,eACA,qBAAIA,UAAU,QAAd,kBACA,qBAAIA,UAAU,QAAd,iBACA,qBAAIA,UAAU,QAAd,mBACA,qBAAIA,UAAU,QAAd,SACE,yBAAQA,UAAU,aAAakC,QAAS,kBAAMpF,EAASqC,OAAvD,SACE,eAAC4K,EAAA,EAAD,CAAO/J,UAAU,iBAKzB,iCACGtH,GACCA,EACGgC,QAAO,SAACT,GAAD,OAAQA,EAAEsB,UACjBvB,KAAI,SAACC,EAAGmL,GAAJ,OACH,gCACE,qBAAIpF,UAAU,GAAd,SAAkBoF,EAAQ,IAC1B,qBAAIpF,UAAU,GAAd,SAAkB/F,EAAEkH,OACpB,qBAAInB,UAAU,GAAd,SACE,wBACElG,KAAK,SACLkG,UAAU,mBACVgK,IAAI,IACJC,IAAKhQ,EAAER,SACPoI,MAAO5H,EAAEP,cACTuI,SAAU,SAACJ,GAAD,OAzMP,SAACqI,EAAMjQ,GAClC,IAAQ4H,EAAU5H,EAAE2H,OAAZC,MACR/E,EAASmC,GAAkB3G,EAAD,YAAC,eAAkB4R,GAAnB,IAAyBxQ,cAAemB,OAAOgH,OAuM5BsI,CAAqBlQ,EAAG4H,QAGjD,qBAAI7B,UAAU,GAAd,UAAmB,OAAD/F,QAAC,IAADA,OAAA,EAAAA,EAAGa,eAAgBb,EAAEgB,QACvC,qBAAI+E,UAAU,GAAd,SACE,yBACEA,UAAU,aACVkC,QAAS,iBACS,iBAAhB5J,GAAkC2B,EAAEa,aAChCgC,EdtbzB,CACLhD,KAAMxD,GACNiD,Qcob6DU,IAC/B6C,EdjbU,SAACvD,GAC3C,MAAO,CACLO,KAAMxD,GACNiD,Wc8auC6Q,CAA6BnQ,KAL9C,SAQE,eAACqL,EAAA,EAAD,CAAWtF,UAAU,cAvBlB/F,EAAE6E,gBAiCzB,sBAAKkB,UAAU,iDAAf,SACE,sBAAIA,UAAU,gCAAd,8BAAgE5E,KAAKoJ,MAAMiB,SAE7E,uBAAKzF,UAAU,4BAAf,UACE,yBAAQA,UAAU,WAAWkC,QAAS,kBAAMwG,IAAoB,IAAOrF,SAAkC,IAAxB3K,EAAaiC,OAA9F,SACE,eAAC0P,EAAA,EAAD,CAAarK,UAAU,UAEzB,0BAAQA,UAAU,eAAekC,QAASwF,GAA1C,UACE,eAAC4C,EAAA,EAAD,CAAStK,UAAU,aADrB,YAIA,0BAAQA,UAAU,kBAAkBkC,QA3NjB,WACzByF,GAAkB,WA0NZ,UACE,eAAC4C,EAAA,EAAD,CAAUvK,UAAU,aADtB,UAIA,0BACEA,UAAU,iBACVqD,SAAkC,IAAxB3K,EAAaiC,OACvBuH,QAAS,kBAAM6E,GAAoB,IAHrC,UAKE,eAACyD,EAAA,EAAD,CAAUxK,UAAU,aALtB,eAUJ,sBAAKA,UAAU,SAAf,SACE,eAAC,GAAD,CACEiE,IAAKP,GACLD,YAAa,CACXa,WAAY5L,EAAagC,QAAO,SAACT,GAAD,OAAQA,EAAEsB,UAC1C8I,SAAUhL,EACVoL,MAAOgB,GACPrB,UAAWA,OAIjB,eAAC,GAAD,CAAe1E,OAAQ2I,GAAmB1I,UAAW2I,KACrD,eAACmC,GAAD,CAAc/K,OAAQ6I,GAAe5I,UAAW6I,KAChD,eAAC,GAAD,CAAmB9I,OAAQkH,EAAYjH,UAAWkH,IAClD,eAAC,GAAD,CACEnH,OAAQ+I,GACR9I,UAAW+I,GACXjF,YAAa,CACXa,WAAY5L,EAAagC,QAAO,SAACT,GAAD,OAAQA,EAAEsB,UAC1C8I,SAAUhL,EACVoL,MAAOgB,GACPrB,UAAWA,KAGf,eAAC,GAAD,CACE1E,OAAQoH,EACRnH,UAAWoH,EACXrB,aA3R0B,SAACkC,GAC/BD,GAAkB,OAAQC,IA2RtBnC,WAAYA,S,sEC3hBPiF,GACD,ICCL,SAASC,GAAelO,GAC7B,OAAOC,GAASC,KAAK,cAAeF,GAG/B,SAASmO,KACd,OAAOlO,GAASgC,IAAI,eAGf,SAASmM,GAAe/L,EAAIrC,GACjC,OAAOC,GAASqC,MAAT,sBAA8BD,GAAMrC,GAGtC,SAASqO,GAAehM,GAC7B,OAAOpC,GAASnB,OAAT,sBAA+BuD,ICXxC,IAoCaiM,GAAgB,yDAAM,WAAOjO,GAAP,eAAAC,EAAA,sEACf6N,KADe,OAEd,OADb5M,EAD2B,QAEzBxD,QACNsC,GAlByBvD,EAkBG,OAACyE,QAAD,IAACA,OAAD,EAACA,EAAKvB,KAjB7B,CACL3C,KAAMxD,EACNiD,aAY+B,iCAfP,IAACA,IAeM,OAAN,uDCqOdyR,GApQK,SAAC,GAAwC,IAAtCtL,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,UAAWsL,EAAkB,EAAlBA,YAClC/J,EAAY,CAChBgK,OAAQ,KACRlT,YAAa,KACb4R,QAAS,GACT/R,MAAO,GACPsT,UAAW,KACXjQ,SAAU,KACViG,KAAM,GACNiK,KAAM,GACNC,MAAO,GACPpQ,MAAO,GACPwM,YAAa,IAEf,EAA4ClG,mBAASL,GAArD,mBAAOoK,EAAP,KAAuBC,EAAvB,KAEMvI,EAAOC,KAAKC,MAAMhG,aAAaU,QAAQ,SAEvC4N,EAAe7H,iBAAO,MACtB7G,EAAWwE,cACjB,EAAwCI,aAAY,SAAC9H,GAAD,MAAY,CAC9Db,WAAYa,EAAMb,WAClBE,QAASW,EAAMX,QACfD,OAAQY,EAAMZ,WAHRD,EAAR,EAAQA,WAAYE,EAApB,EAAoBA,QAASD,EAA7B,EAA6BA,OAM7B+I,qBAAU,WACR,GAAIkJ,GAAeA,EAAYzR,IAAK,CAClC,IACE0R,EAYED,EAZFC,OACA/J,EAWE8J,EAXF9J,KACAnJ,EAUEiT,EAVFjT,YACAmT,EASEF,EATFE,UACAjQ,EAQE+P,EARF/P,SACArD,EAOEoT,EAPFpT,MACAuT,EAMEH,EANFG,KACAC,EAKEJ,EALFI,MACApQ,EAIEgQ,EAJFhQ,MACAxB,EAGEwR,EAHFxR,SACAgO,EAEEwD,EAFFxD,YACAmC,EACEqB,EADFrB,QAGF2B,EAAkB,2BACbrK,GADY,IAEfgK,SACA/J,OACAnJ,cACAmT,YACAtT,MAAY,OAALA,QAAK,IAALA,KAAO2B,IAAM3B,EAAM2B,IAAM,GAChC0B,WACAkQ,OACAC,QACA5R,WACAgO,cACAmC,UACA3O,cAGH,CAACgQ,IAEJ,IAAMQ,EAAmB,SAACxR,GACxB,MAAwBA,EAAE2H,OAAlBT,EAAR,EAAQA,KAAMU,EAAd,EAAcA,MACV,CAAC,QAAS,WAAY,YAAY1D,SAASgD,GAC7CoK,GAAkB,SAACG,GAAD,mBAAC,eACdA,GADa,mBAEfvK,EAAOwK,SAAS9J,QAGnB0J,GAAkB,SAACG,GAAD,mBAAC,eAAmBA,GAApB,mBAA+BvK,EAAOU,QAe5DE,qBAAU,WACRjF,EAASiO,QACR,CAACjO,IAEJ,IAcM8O,EAAW,SAACP,GAChB,MAAM,iEAAN,OAAwEA,EAAxE,mBAAwFA,EAAxF,8DAAmJA,EAAnJ,uGAAuPA,EAAvP,cAGF,OACE,+BACE,eAAC,GAAD,CAAe3L,OAAQA,EAAQC,UAAWA,EAA1C,SACE,uBAAKK,UAAU,6GAAf,UACE,gBAAC,KAAOgC,MAAR,CAAcjC,GAAG,KAAKC,UAAU,4DAAhC,UACGiL,EAAc,SAAW,MAD5B,cAGA,uBAAKjL,UAAU,0CAAf,UACkB,gBAAX,OAAJgD,QAAI,IAAJA,OAAA,EAAAA,EAAMJ,OACL,uBAAK5C,UAAU,qBAAf,UACE,wBAAOA,UAAU,+BAAjB,oBACA,0BAAQA,UAAU,eAAemB,KAAK,QAAQc,SAAUwJ,EAAkB5J,MAAOyJ,EAAezT,MAAhG,UACE,yBAAQgK,MAAM,GAAGuB,UAAQ,EAACC,UAAQ,EAAlC,+BAGCrK,GACCA,EAAOgB,KAAI,SAACC,GAAD,OACT,yBAAoB4H,MAAO5H,EAAET,IAA7B,SACGS,EAAEkH,MADQlH,EAAET,cAOzB,uBACEwG,UAAU,uFACVkC,QAAS,kBAAMsJ,EAAazH,QAAQkF,SAFtC,UAIE,wBAAOnP,KAAK,OAAOkG,UAAU,SAAS6L,OAAO,UAAU5H,IAAKuH,EAAcvJ,SA7D3D,SAAChI,GAC1B,IAAI6R,EAAS,IAAIC,WACjBD,EAAOE,cAAc/R,EAAE2H,OAAOqK,MAAM,IACpCH,EAAOI,OAAS,WACdX,GAAkB,SAACzJ,GAAD,mBAAC,eAAcA,GAAf,IAAoBoJ,OAAQY,EAAOK,aAEvDL,EAAOM,QAAU,SAAUnO,GACzBoO,QAAQC,IAAI,UAAWrO,OAuDdqN,EAAeJ,OACd,sBAAKqB,IAAKjB,EAAeJ,OAAQsB,IAAI,UAAUxM,UAAU,4CAEzD,oBAAGA,UAAU,4BAAb,qCAGJ,iCACE,uBAAKA,UAAU,qBAAf,UACE,wBAAOA,UAAU,+BAAjB,sBACA,0BACEA,UAAU,sBACVmB,KAAK,cACLc,SAAUwJ,EACV5J,MAAOyJ,EAAetT,YAJxB,UAME,yBAAQ6J,MAAM,GAAGuB,UAAQ,EAACC,UAAQ,EAAlC,6BAGCtK,EAAW4B,OAAS,GAAK5B,EAAWiB,KAAI,SAACC,GAAD,OAAO,kCAAqBA,EAAEkH,MAAVlH,EAAET,cAGnE,uBAAKwG,UAAU,qBAAf,UACE,wBAAOA,UAAU,+BAAjB,qBACA,0BACEA,UAAU,sBACVmB,KAAK,YACLc,SAAUwJ,EACV5J,MAAOyJ,EAAeH,UAJxB,UAME,yBAAQtJ,MAAM,GAAGuB,UAAQ,EAACC,UAAQ,EAAlC,2BAGCpK,GACCA,EAAQe,KAAI,SAACC,GAAD,OACV,yBAAoB,aAAYA,EAAET,IAAlC,SACGS,EAAEkH,MADQlH,EAAET,cAMvB,uBAAKwG,UAAU,qBAAf,UACE,wBAAOA,UAAU,+BAAjB,0BACA,wBACEA,UAAU,cACVlG,KAAK,OACLqH,KAAK,OACLU,MAAOyJ,EAAenK,KACtBc,SAAUwJ,OAGd,uBAAKzL,UAAU,qBAAf,UACE,wBAAOA,UAAU,+BAAjB,qBACA,wBACEA,UAAU,cACVlG,KAAK,OACLqH,KAAK,UACLU,MAAOyJ,EAAe1B,QACtB3H,SAAUwJ,OAGd,uBAAKzL,UAAU,qBAAf,UACE,wBAAOA,UAAU,+BAAjB,sBACA,wBACEA,UAAU,cACVmB,KAAK,WACLrH,KAAK,SACL+H,MAAOyJ,EAAepQ,SACtB+G,SAAUwJ,UAIhB,wBACA,uBAAKzL,UAAU,qBAAf,UACE,wBAAOA,UAAU,+BAAjB,mBACA,wBACEA,UAAU,cACVmB,KAAK,QACLrH,KAAK,SACL+H,MAAOyJ,EAAerQ,MACtBgH,SAAUwJ,OAGd,uBAAKzL,UAAU,qBAAf,UACE,wBAAOA,UAAU,+BAAjB,0BACA,wBACEA,UAAU,cACVmB,KAAK,cACLrH,KAAK,SACL+H,MAAOyJ,EAAe7D,YACtBxF,SAAUwJ,OAGd,uBAAKzL,UAAU,qBAAf,UACE,wBAAOA,UAAU,+BAAjB,sBACA,wBACEA,UAAU,cACVmB,KAAK,WACLrH,KAAK,SACL+H,MAAOyJ,EAAe7R,SACtBwI,SAAUwJ,OAGd,uBAAKzL,UAAU,qBAAf,UACE,wBAAOA,UAAU,+BAAjB,kBACA,wBAAOA,UAAU,cAAcmB,KAAK,OAAOU,MAAOyJ,EAAeF,KAAMnJ,SAAUwJ,OAEnF,uBAAKzL,UAAU,qBAAf,UACE,wBAAOA,UAAU,+BAAjB,mBACA,wBAAOA,UAAU,cAAcmB,KAAK,QAAQU,MAAOyJ,EAAeD,MAAOpJ,SAAUwJ,UAGvF,uBAAKzL,UAAU,OAAf,UACE,yBAAQlG,KAAK,SAASkG,UAAW4L,EAAS,QAAS1J,QA/JhC,WNyBJ,IAACpD,EAAIrC,EMxB5B,OAAIwO,QAAJ,IAAIA,KAAazR,IACfsD,GNuBsBgC,EMvBDmM,EAAYzR,INuBPiD,EMvBY6O,ENuBjB,uCAAc,WAAOxO,GAAP,eAAAC,EAAA,sEACrBkJ,GAAcnH,EAAIrC,GADG,cAEpB,OADbuB,EADiC,QAE/BxD,SACNsC,GA9EuBvD,EA8EIyE,EAAIvB,KA7E1B,CACL3C,KAAMxD,EACNiD,aA4EA8E,KAAMkB,QAAQ,iCAJuB,kBAMhCvB,GANgC,iCA3Ef,IAACzE,IA2Ec,OAAd,wDMvBkC4I,MAAK,WAC1DxC,GAAU,GACV4L,EAAkBrK,MAGpBpE,ENCuB,SAACL,GAAD,8CAAU,WAAOK,GAAP,eAAAC,EAAA,sEACnBgJ,GAActJ,GADK,cAElB,OADbuB,EAD+B,QAE7BxD,SACNsC,GApEyBvD,EAoEIyE,EAAIvB,KAnE5B,CACL3C,KAAMxD,EACNiD,aAkEA8E,KAAMkB,QAAQ,iCAJqB,kBAM9BvB,GAN8B,iCAjEX,IAACzE,IAiEU,OAAV,sDMDdkT,CAAcnB,IAAiBnJ,MAAK,SAACnE,GAC5C2B,GAAU,GACV4L,EAAkBrK,OAsJd,oBAGA,yBAAQpH,KAAK,SAASkG,UAAW4L,EAAS,OAAQ1J,QAAS,kBAAMvC,GAAU,IAA3E,8B,oBC9IG+M,GA1GO,SAAC,GAA2B,IAAzBhN,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UACzB7C,EAAWwE,cACjB,EAAsEI,aAAY,SAAC9H,GAAD,MAAY,CAC5F3C,QAAS2C,EAAM5C,SAASE,YACxBY,eAAgB8B,EAAM5C,SAASc,eAC/BiB,WAAYa,EAAMb,WAClBE,QAASW,EAAMX,YAJAF,GAAjB,EAAQ9B,QAAR,EAAiB8B,YAAYjB,EAA7B,EAA6BA,eAAgBmB,EAA7C,EAA6CA,QAMvC+J,GANN,EAAsD9L,YAMzC+L,KAAKC,MAAMhG,aAAaU,QAAQ,UAE7C,EAA4C2D,oBAAS,GAArD,mBAAOoL,EAAP,KAAuBC,EAAvB,KACA,EAA4CrL,mBAAS,IAArD,mBAAOsL,EAAP,KAAuBC,EAAvB,KACQ9V,EAAa0K,aAAY,SAAC9H,GAAD,MAAY,CAC3C5C,SAAU4C,EAAM5C,SAASE,gBADnBF,SAGR+K,qBAAU,WACRjF,EAASuJ,GAAYvO,IACrBgF,EAASwJ,QACR,CAACxJ,EAAUhF,IAEd,IAAMiV,EAAuB,SAACjO,GAC5BhC,EPkFyB,SAACgC,GAAD,8CAAQ,WAAOhC,GAAP,eAAAC,EAAA,sEACjBiJ,GAAclH,GADG,cAEhB,OADbd,EAD6B,QAE3BxD,QACN6D,KAAMkB,QAAQ,gCAHmB,kBAK5BvB,GAL4B,2CAAR,sDOlFhBgP,CAAclO,IAAKqD,MAAK,WAC/BrF,EAASuJ,GAAYvO,QAYnBmV,EAAc,SAACnO,GACnB,IAAMoO,EAAWnU,GAAcA,EAAW0B,MAAK,SAACR,GAAD,OAAOA,EAAE6E,KAAOA,KAE/D,OAAOoO,EAAWA,EAAS/L,KAAO,OAG9BgM,EAAY,SAACrO,GACjB,IAAMsO,EAASnU,GAAWA,EAAQwB,MAAK,SAACR,GAAD,OAAOA,EAAE6E,KAAOA,KAEvD,OAAOsO,EAASA,EAAOjM,KAAO,OAGhC,OACE,iCACE,eAAC,GAAD,CAAezB,OAAQA,EAAQC,UAAWA,EAA1C,SACE,uBAAKK,UAAU,kHAAf,UACE,eAAC,KAAOgC,MAAR,CAAcjC,GAAG,KAAKC,UAAU,4DAAhC,sBAGA,sBAAKA,UAAU,8BAAf,SACE,yBAAOA,UAAU,qCAAjB,UACE,wBAAOA,UAAU,6BAAjB,SACE,gCACE,0CACA,uCACA,uCACA,2CACA,0CACiB,gBAAX,OAAJgD,QAAI,IAAJA,OAAA,EAAAA,EAAMJ,OAAwC,WAAX,OAAJI,QAAI,IAAJA,OAAA,EAAAA,EAAMJ,QAAqB,qBAAI5C,UAAU,SAAd,yBAGhE,iCACGhJ,GACCA,EAASgD,KAAI,SAACC,EAAGmL,GAAJ,OACX,gCACE,qBAAIpF,UAAU,GAAd,SAAkB/F,EAAE2P,SAAW,eAAC,KAAD,CAAS/H,MAAO5H,EAAE2P,YACjD,8BAAKxE,EAAQ,IACb,8BAAKnL,EAAEkH,OACP,8BAAK8L,EAAYhT,EAAEjC,eACnB,8BAAKmV,EAAUlT,EAAEkR,cACA,gBAAX,OAAJnI,QAAI,IAAJA,OAAA,EAAAA,EAAMJ,OAAwC,WAAX,OAAJI,QAAI,IAAJA,OAAA,EAAAA,EAAMJ,QACrC,gCACE,yBAAQ5C,UAAU,oBAAoBkC,QAAS,kBAAM6K,EAAqB9S,EAAET,MAA5E,SACE,eAAC8L,EAAA,EAAD,CAAWtF,UAAU,UAEvB,yBAAQA,UAAU,4BAA4BkC,QAAS,kBApD7E4K,EAoDwG7S,GAnDxG0F,GAAU,QACVkK,YAAW,WACT+C,GAAkB,KACjBlC,KAgDmB,SACE,eAACnF,GAAA,EAAD,CAAevF,UAAU,eAZxB/F,EAAET,eAsBrB,sBAAKwG,UAAU,6BAAf,SACE,yBACElG,KAAK,SACLkG,UAAU,4OACVkC,QAAS,kBAAMvC,GAAU,IAH3B,0BAUN,eAAC,GAAD,CAAaD,OAAQiN,EAAgBhN,UAAWiN,EAAmB3B,YAAa4B,QCzBvEQ,GAjFK,SAAC,GAAyC,IAAvC3N,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,UAAW2N,EAAmB,EAAnBA,aAClCpM,EAAY,CAAEC,KAAM,GAAIoM,YAAa,IAC3C,EAA8ChM,mBAASL,GAAvD,mBAAOsM,EAAP,KAAwBC,EAAxB,KACM3Q,EAAWwE,cAEXoM,EAAiB,SAACzT,GACtB,MAAwBA,EAAE2H,OAAlBT,EAAR,EAAQA,KAAMU,EAAd,EAAcA,MACd4L,GAAmB,SAAC3L,GAAD,mBAAC,eACfA,GADc,mBAEhBX,EAAOU,QAIZE,qBAAU,WACJuL,GACFG,EAAmBH,KAEpB,CAACA,IAmBJ,OACE,+BACE,eAAC,GAAD,CAAe5N,OAAQA,EAAQC,UAAWA,EAA1C,SACE,uBAAKK,UAAU,wIAAf,UACE,gBAAC,KAAOgC,MAAR,CAAcjC,GAAG,KAAKC,UAAU,8CAAhC,UACGsN,EAAe,SAAW,MAD7B,eAGA,uBAAKtN,UAAU,QAAf,UACE,uBAAKA,UAAU,qBAAf,UACE,wBAAOA,UAAU,+BAAjB,kBACA,wBAAOA,UAAU,cAAcmB,KAAK,OAAOc,SAAUyL,EAAgB7L,MAAO2L,EAAgBrM,UAE9F,uBAAKnB,UAAU,qBAAf,UACE,wBAAOA,UAAU,+BAAjB,yBACA,2BACEA,UAAU,cACVlG,KAAK,GACLqH,KAAK,cACLc,SAAUyL,EACV7L,MAAO2L,EAAgBD,oBAI7B,uBAAKvN,UAAU,OAAf,UACE,yBACElG,KAAK,SACLkG,UAAU,4OACVkC,QA5CW,WACrB,IH8B2BpD,EAAIrC,EG9BvB0E,EAAsBqM,EAAtBrM,KAAMoM,EAAgBC,EAAhBD,YACd,GAAIpM,EAAKxG,OACP,GAAI2S,EAAc,CAChB,IAAQ9T,EAAQgU,EAARhU,IACRsD,GH0BuBgC,EG1BCtF,EH0BGiD,EG1BE,CAAE0E,OAAMoM,eH0Bf,uCAAc,WAAOzQ,GAAP,eAAAC,EAAA,sEACxB8N,GAAe/L,EAAIrC,GADK,OAEvB,OADbuB,EADoC,QAElCxD,SACNsC,GAhD0BvD,EAgDIyE,EAAIvB,KA/C7B,CACL3C,KAAMxD,EACNiD,aA8CA8E,KAAMkB,QAAQ,kCAJ0B,iCA7Cf,IAAChG,IA6Cc,OAAd,wDG1B+B4I,MAAK,WACxDxC,GAAU,GACV8N,EAAmBvM,WAGrBpE,EHHsB,SAACL,GAAD,8CAAU,WAAOK,GAAP,eAAAC,EAAA,sEACpB4N,GAAelO,GADK,OAEnB,OADbuB,EADgC,QAE9BxD,SACNsC,GA/B0BvD,EA+BIyE,EAAIvB,KA9B7B,CACL3C,KAAMxD,EACNiD,aA6BA8E,KAAMkB,QAAQ,kCAJsB,iCA5BX,IAAChG,IA4BU,OAAV,sDGGboU,CAAeH,IAAkBrL,MAAK,WAC7CxC,GAAU,GACV8N,EAAmBvM,OA6BjB,oBAOA,yBACEpH,KAAK,SACLkG,UAAU,8OACVkC,QAAS,kBAAMvC,GAAU,IAH3B,8BCsBGiO,GAtFQ,SAAC,GAA2B,IAAzBlO,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UAC1B7C,EAAWwE,cACTnI,EAAcuI,aAAY,SAAC9H,GAAD,MAAY,CAC5CT,UAAWS,EAAMT,UAAUC,iBADrBD,UASR,EAA8CoI,oBAAS,GAAvD,mBAAOsM,EAAP,KAAwBC,EAAxB,KACA,EAAwCvM,mBAPtB,CAChBzC,GAAI,KACJqC,KAAM,GACNC,MAAO,GACPC,QAAS,KAGX,mBAAOJ,EAAP,KAAqB8M,EAArB,KAEMC,EAAmB,SAAClP,GACxBhC,ElBgC0B,SAACgC,GAAD,8CAAQ,WAAOhC,GAAP,eAAAC,EAAA,sEAClB8D,GAAe/B,GADG,UAEjB,MAFiB,OAE5BtE,OAF4B,gCAGVoG,KAHU,OAG5BzH,EAH4B,OAIlC2D,GA1C0BvD,EA0CIJ,EAAUsD,KAzCnC,CACL3C,KAAMxD,GACNiD,aAwCA8E,KAAMkB,QAAQ,iCALoB,iCAtCT,IAAChG,IAsCQ,OAAR,sDkBhCjB0U,CAAenP,KAWpBkE,EAAOC,KAAKC,MAAMhG,aAAaU,QAAQ,SAE7C,OACE,iCACE,eAAC,GAAD,CAAe8B,OAAQA,EAAQC,UAAWA,EAA1C,SACE,uBAAKK,UAAU,+HAAf,UACE,eAAC,KAAOgC,MAAR,CAAcjC,GAAG,KAAKC,UAAU,4DAAhC,uBAGA,sBAAKA,UAAU,8BAAf,SACE,yBAAOA,UAAU,qCAAjB,UACE,wBAAOA,UAAU,6BAAjB,SACE,gCACE,uCACA,wCACA,2CACA,8CAGJ,iCACG7G,GACCA,EAAUa,KAAI,SAACC,GAAD,OACZ,gCACE,8BAAKA,EAAEkH,OACP,8BAAKlH,EAAEmH,QACP,8BAAKnH,EAAEoH,UACP,+BACmB,gBAAX,OAAJ2B,QAAI,IAAJA,OAAA,EAAAA,EAAMJ,OAAwC,WAAX,OAAJI,QAAI,IAAJA,OAAA,EAAAA,EAAMJ,QACrC,uCACE,yBAAQ5C,UAAU,aAAakC,QAAS,kBAAM8L,EAAiB/T,EAAET,MAAjE,SACE,eAAC8L,EAAA,EAAD,CAAWtF,UAAU,UAEvB,yBAAQA,UAAU,qBAAqBkC,QAAS,kBAxC/C,SAACzF,GAC1B,IAAQjD,EAA8BiD,EAA9BjD,IAAK2H,EAAyB1E,EAAzB0E,KAAMC,EAAmB3E,EAAnB2E,MAAOC,EAAY5E,EAAZ4E,QAC1B0M,EAAgB,CAAEvU,MAAK2H,OAAMC,QAAOC,YACpC1B,GAAU,GACVkK,YAAW,WACTiE,GAAmB,KAClBpD,IAkC2EwD,CAAmBjU,IAAzE,SACE,eAACsL,GAAA,EAAD,CAAevF,UAAU,iBAX1B/F,EAAET,eAsBrB,sBAAKwG,UAAU,OAAf,SACE,yBACElG,KAAK,SACLkG,UAAU,4OACVkC,QAAS,kBAAMvC,GAAU,IAH3B,0BAUN,eAAC,GAAD,CAAeD,OAAQmO,EAAiBlO,UAAWmO,EAAoB7M,aAAcA,QCS5EkN,GA1FI,SAAC,GAA2B,IAAzBzO,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UACtB7C,EAAWwE,cACTpI,EAAUwI,aAAY,SAAC9H,GAAD,MAAY,CACxCV,MAAOU,EAAMV,UADPA,MAUR6I,qBAAU,WACRjF,EhBmBoB,uCAAM,WAAOA,GAAP,eAAAC,EAAA,sEACVuF,KADU,cAET,OADbtE,EADsB,QAEpBxD,QACNsC,GAjCoBvD,EAiCIyE,EAAIvB,KAhCvB,CACL3C,KAAMxD,GACNiD,aA2B0B,kBAKrByE,GALqB,iCA9BP,IAACzE,IA8BM,OAAN,yDgBlBnB,CAACuD,IAEJ,MAAsCyE,oBAAS,GAA/C,mBAAO6M,EAAP,KAAoBC,EAApB,KACA,EAAgC9M,mBAZd,CAChBzC,GAAI,KACJqC,KAAM,GACNC,MAAO,GACPkC,SAAU,KAQZ,mBAAOX,EAAP,KAAiB2L,EAAjB,KAEMN,EAAmB,SAAClP,GACxBhC,EhBoBsB,SAACgC,GAAD,8CAAQ,WAAOhC,GAAP,eAAAC,EAAA,sEACdwF,GAAWzD,GADG,UAEb,MAFa,OAExBtE,OAFwB,gCAGV8H,KAHU,OAGxBpJ,EAHwB,OAI9B4D,GAnCsBvD,EAmCIL,EAAMuD,KAlC3B,CACL3C,KAAMxD,GACNiD,aAiCA8E,KAAMkB,QAAQ,6BALgB,iCA/BT,IAAChG,IA+BQ,OAAR,sDgBpBbgV,CAAWzP,KAWTmE,KAAKC,MAAMhG,aAAaU,QAAQ,SAG7C,OACE,iCACE,eAAC,GAAD,CAAe8B,OAAQA,EAAQC,UAAWA,EAA1C,SACE,uBAAKK,UAAU,+HAAf,UACE,eAAC,KAAOgC,MAAR,CAAcjC,GAAG,KAAKC,UAAU,4DAAhC,mBAGA,sBAAKA,UAAU,8BAAf,SACE,yBAAOA,UAAU,qCAAjB,UACE,wBAAOA,UAAU,6BAAjB,SACE,gCACE,uCACA,wCACA,uCACA,8CAGJ,iCACG9G,GACCA,EAAMc,KAAI,SAACC,GAAD,OACR,gCACE,8BAAKA,EAAEkH,OACP,8BAAKlH,EAAEmH,QACP,8BAAKnH,EAAE2I,OACP,gCACc,UAAX3I,EAAE2I,MACD,yBAAQ5C,UAAU,aAAakC,QAAS,kBAAM8L,EAAiB/T,EAAET,MAAjE,SACE,eAAC8L,EAAA,EAAD,CAAWtF,UAAU,UAGzB,yBAAQA,UAAU,qBAAqBkC,QAAS,kBAzC/C,SAACzF,GACtB,IAAQjD,EAAkCiD,EAAlCjD,IAAK2H,EAA6B1E,EAA7B0E,KAAMyB,EAAuBnG,EAAvBmG,KAAMxB,EAAiB3E,EAAjB2E,MAAOvJ,EAAU4E,EAAV5E,MAChCyW,EAAY,CAAExP,GAAItF,EAAK2H,OAAMyB,OAAMxB,QAAOvJ,UAC1C8H,GAAU,GACVkK,YAAW,WACTwE,GAAe,KACd3D,IAmCuE8D,CAAevU,IAArE,SACE,eAACsL,GAAA,EAAD,CAAevF,UAAU,eAXtB/F,EAAET,eAoBrB,sBAAKwG,UAAU,OAAf,SACE,yBACElG,KAAK,SACLkG,UAAU,4OACVkC,QAAS,kBAAMvC,GAAU,IAH3B,0BAUN,eAAC8K,GAAD,CAAc/K,OAAQ0O,EAAazO,UAAW0O,EAAgB1L,SAAUA,QC5FvE,SAAS8L,GAAahS,GAC3B,OAAOC,GAASC,KAAK,WAAYF,GAG5B,SAASiS,KACd,OAAOhS,GAASgC,IAAI,YAGf,SAASiQ,GAAa7P,GAC3B,OAAOpC,GAASnB,OAAT,mBAA4BuD,IAG9B,SAAS8P,GAAa9P,EAAIrC,GAC/B,OAAOC,GAASqC,MAAT,mBAA2BD,GAAMrC,GCX1C,IC2FeoS,GAzFS,SAAC,GAAuC,IAArCnP,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,UAAWmP,EAAiB,EAAjBA,WACtC5N,EAAY,CAChBC,KAAM,GACNoM,YAAa,IAETzQ,EAAWwE,cACjB,EAA0CC,mBAASL,GAAnD,mBAAO6N,EAAP,KAAsBC,EAAtB,KAEMC,EAAqB,SAAChV,GAC1B,MAAwBA,EAAE2H,OAAlBT,EAAR,EAAQA,KAAMU,EAAd,EAAcA,MACdmN,GAAiB,SAAClN,GAAD,mBAAC,eACbA,GADY,mBAEdX,EAAOU,QAIZE,qBAAU,WACJ+M,GACFE,EAAiBF,KAElB,CAACA,IAkBJ,OACE,+BACE,eAAC,GAAD,CAAepP,OAAQA,EAAQC,UAAWA,EAA1C,SACE,uBAAKK,UAAU,6HAAf,UACE,gBAAC,KAAOgC,MAAR,CAAcjC,GAAG,KAAKC,UAAU,4DAAhC,UACG8O,EAAa,SAAW,MAD3B,aAGA,uBAAK9O,UAAU,QAAf,UACE,uBAAKA,UAAU,qBAAf,UACE,wBAAOA,UAAU,+BAAjB,kBACA,wBACEA,UAAU,cACVlG,KAAK,OACLqH,KAAK,OACLc,SAAUgN,EACVpN,MAAOkN,EAAc5N,UAGzB,uBAAKnB,UAAU,qBAAf,UACE,wBAAOA,UAAU,+BAAjB,yBACA,2BACEA,UAAU,cACVmB,KAAK,cACLc,SAAUgN,EACVpN,MAAOkN,EAAcxB,oBAK3B,uBAAKvN,UAAU,OAAf,UACE,yBACElG,KAAK,SACLoI,QAhDiB,WAC3B,GAAI4M,EAAY,CACd,IAAQhQ,EAA0BiQ,EAA1BjQ,GAAIqC,EAAsB4N,EAAtB5N,KAAMoM,EAAgBwB,EAAhBxB,YAClBzQ,EDyBsB,SAACgC,EAAIrC,GAAL,8CAAc,WAAOK,GAAP,eAAAC,EAAA,sEACtB6R,GAAa9P,EAAIrC,GADK,OAErB,OADbuB,EADkC,QAEhCxD,SACNsC,GAlCwBvD,EAkCIyE,EAAIvB,KAjC3B,CACL3C,KAAMxD,GACNiD,aAgCA8E,KAAMkB,QAAQ,gCAJwB,iCA/Bf,IAAChG,IA+Bc,OAAd,sDCzBb2V,CAAapQ,EAAI,CAAEqC,OAAMoM,iBAAgBpL,MAAK,WACrDxC,GAAU,GACVqP,EAAiB9N,UAEd,CACL,IAAQC,EAAsB4N,EAAtB5N,KAAMoM,EAAgBwB,EAAhBxB,YACdzQ,GDLuBL,ECKD,CAAE0E,OAAMoM,eDLR,uCAAU,WAAOzQ,GAAP,eAAAC,EAAA,sEAClB0R,GAAahS,GADK,OAEjB,OADbuB,EAD8B,QAE5BxD,SACNsC,GA/BwBvD,EA+BIyE,EAAIvB,KA9B3B,CACL3C,KAAMxD,GACNiD,aA6BA8E,KAAMkB,QAAQ,gCAJoB,iCA5BX,IAAChG,IA4BU,OAAV,wDCKwB4I,MAAK,WACjDxC,GAAU,GACVqP,EAAiB9N,MDPG,IAACzE,GC6CfuD,UAAU,4OAHZ,oBAOA,yBACElG,KAAK,SACLkG,UAAU,8OACVkC,QAAS,kBAAMvC,GAAU,IAH3B,8BCaGwP,GArFM,SAAC,GAA2B,IAAzBzP,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UACxB7C,EAAWwE,cACTrI,EAAYyI,aAAY,SAAC9H,GAAD,MAAY,CAC1CX,QAASW,EAAMX,YADTA,QAGR,EAAoCsI,mBAAS,CAAEzC,GAAI,KAAMqC,KAAM,GAAIoM,YAAa,KAAhF,mBAAOuB,EAAP,KAAmBM,EAAnB,KACA,EAA0C7N,oBAAS,GAAnD,mBAAO8N,EAAP,KAAsBC,EAAtB,KAEAvN,qBAAU,WACRjF,EFsBsB,uCAAM,WAAOA,GAAP,eAAAC,EAAA,sEACZ2R,KADY,OAEX,OADb1Q,EADwB,QAEtBxD,QACNsC,GAhCsBvD,EAgCIyE,EAAIvB,KA/BzB,CACL3C,KAAMxD,GACNiD,aA0B4B,iCA7BP,IAACA,IA6BM,OAAN,yDErBrB,CAACuD,IAEJ,IAAMyS,EAAqB,SAACzQ,GAC1BhC,EFyBwB,SAACgC,GAAD,8CAAQ,WAAOhC,GAAP,eAAAC,EAAA,sEAChB4R,GAAa7P,GADG,UAEf,MAFe,OAE1BtE,OAF0B,gCAGVkU,KAHU,OAG1BzV,EAH0B,OAIhC6D,GAjCwBvD,EAiCIN,EAAQwD,KAhC/B,CACL3C,KAAMxD,GACNiD,aA+BA8E,KAAMkB,QAAQ,+BALkB,iCA7BT,IAAChG,IA6BQ,OAAR,sDEzBfiW,CAAa1Q,KAYlBkE,EAAOC,KAAKC,MAAMhG,aAAaU,QAAQ,SAE7C,OACE,iCACE,eAAC,GAAD,CAAe8B,OAAQA,EAAQC,UAAWA,EAA1C,SACE,uBAAKK,UAAU,+HAAf,UACE,eAAC,KAAOgC,MAAR,CAAcjC,GAAG,KAAKC,UAAU,4DAAhC,qBAGC/G,EAAQ0B,OACP,sBAAKqF,UAAU,8BAAf,SACE,yBAAOA,UAAU,qCAAjB,UACE,wBAAOA,UAAU,6BAAjB,SACE,gCACE,uCACA,8CACA,8CAGJ,iCACG/G,EAAQe,KAAI,SAACC,GAAD,OACX,gCACE,8BAAKA,EAAEkH,OACP,8BAAKlH,EAAEsT,YAActT,EAAEsT,YAAc,QACrC,+BACmB,gBAAX,OAAJvK,QAAI,IAAJA,OAAA,EAAAA,EAAMJ,OAAwC,WAAX,OAAJI,QAAI,IAAJA,OAAA,EAAAA,EAAMJ,QACrC,uCACE,yBAAQ5C,UAAU,aAAakC,QAAS,kBAAMqN,EAAmBtV,EAAET,MAAnE,SACE,eAAC8L,EAAA,EAAD,CAAWtF,UAAU,UAEvB,yBAAQA,UAAU,qBAAqBkC,QAAS,kBAvCjD,SAACzF,GACxB,IAAQjD,EAA2BiD,EAA3BjD,IAAK2H,EAAsB1E,EAAtB0E,KAAMoM,EAAgB9Q,EAAhB8Q,YACnB6B,EAAc,CAAEtQ,GAAItF,EAAK2H,OAAMoM,gBAC/B5N,GAAU,GACVkK,YAAW,WACTyF,GAAiB,KAChB5E,IAiC2E+E,CAAiBxV,IAAvE,SACE,eAACsL,GAAA,EAAD,CAAevF,UAAU,iBAV1B/F,EAAET,eAqBnB,qBAAIwG,UAAU,MAAd,kCAEF,sBAAKA,UAAU,OAAf,SACE,yBACElG,KAAK,SACLkG,UAAU,4OACVkC,QAAS,kBAAMvC,GAAU,IAH3B,0BAUN,eAAC,GAAD,CAAiBD,OAAQ2P,EAAe1P,UAAW2P,EAAkBR,WAAYA,QCIxEY,GApFS,SAAC,GAA2B,IAAzBhQ,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UAC3B7C,EAAWwE,cACTvI,EAAe2I,aAAY,SAAC9H,GAAD,MAAY,CAC7Cb,WAAYa,EAAMb,eADZA,WAGR,EAAwCwI,mBAAS,CAAEzC,GAAI,KAAMqC,KAAM,GAAIoM,YAAa,KAApF,mBAAOD,EAAP,KAAqBqC,EAArB,KACA,EAA8CpO,oBAAS,GAAvD,mBAAOqO,EAAP,KAAwBC,EAAxB,KAEA9N,qBAAU,WACRjF,EAASiO,QACR,CAACjO,IAEJ,IAAMyS,EAAqB,SAACzQ,GAC1BhC,EVyB0B,SAACgC,GAAD,8CAAQ,WAAOhC,GAAP,eAAAC,EAAA,sEAClB+N,GAAehM,GADG,UAEjB,MAFiB,OAE5BtE,OAF4B,gCAGToQ,KAHS,OAG5B7R,EAH4B,OAIlC+D,GAjC0BvD,EAiCIR,EAAW0D,KAhCpC,CACL3C,KAAMxD,EACNiD,aA+BA8E,KAAMkB,QAAQ,iCALoB,iCA7BT,IAAChG,IA6BQ,OAAR,sDUzBjBuW,CAAehR,KAWpBkE,EAAOC,KAAKC,MAAMhG,aAAaU,QAAQ,SAE7C,OACE,iCACE,eAAC,GAAD,CAAe8B,OAAQA,EAAQC,UAAWA,EAA1C,SACE,uBAAKK,UAAU,+HAAf,UACE,eAAC,KAAOgC,MAAR,CAAcjC,GAAG,KAAKC,UAAU,4DAAhC,wBAGCjH,EAAW4B,OAAS,EACnB,sBAAKqF,UAAU,8BAAf,SACE,yBAAOA,UAAU,qCAAjB,UACE,wBAAOA,UAAU,6BAAjB,SACE,gCACE,uCACA,8CACA,8CAGJ,iCACGjH,EAAWiB,KAAI,SAACC,GAAD,OACd,gCACE,8BAAKA,EAAEkH,OACP,8BAAKlH,EAAEsT,YAActT,EAAEsT,YAAc,QACrC,+BACmB,gBAAX,OAAJvK,QAAI,IAAJA,OAAA,EAAAA,EAAMJ,OAAwC,WAAX,OAAJI,QAAI,IAAJA,OAAA,EAAAA,EAAMJ,QACrC,uCACE,yBAAQ5C,UAAU,aAAakC,QAAS,kBAAMqN,EAAmBtV,EAAET,MAAnE,SACE,eAAC8L,EAAA,EAAD,CAAWtF,UAAU,UAEvB,yBAAQA,UAAU,qBAAqBkC,QAAS,kBAtCjD,SAACzF,GACxB,IAAQjD,EAA2BiD,EAA3BjD,IAAK2H,EAAsB1E,EAAtB0E,KAAMoM,EAAgB9Q,EAAhB8Q,YACnBoC,EAAgB,CAAEnW,MAAK2H,OAAMoM,gBAC7B5N,GAAU,GACVkK,YAAW,WACTgG,GAAmB,KAClBnF,IAgC2E+E,CAAiBxV,IAAvE,SACE,eAACsL,GAAA,EAAD,CAAevF,UAAU,iBAV1B/F,EAAET,eAqBnB,qBAAIwG,UAAU,MAAd,qCAEF,sBAAKA,UAAU,OAAf,SACE,yBACElG,KAAK,SACLkG,UAAU,4OACVkC,QAAS,kBAAMvC,GAAU,IAH3B,0BAUN,eAAC,GAAD,CAAaD,OAAQkQ,EAAiBjQ,UAAWkQ,EAAoBvC,aAAcA,QCtFlF,SAASnR,GAAYM,GAC1B,OAAOC,GAASC,KAAK,SAAUF,GAG1B,SAASsT,KACd,OAAOrT,GAASgC,IAAI,UAGf,SAASsR,GAAYlR,EAAIrC,GAC9B,OAAOC,GAASqC,MAAT,iBAAyBD,GAAMrC,GAGjC,SAASwT,GAAYnR,GAC1B,OAAOpC,GAASnB,OAAT,iBAA0BuD,ICXnC,ICmFeoR,GAjFE,SAAC,GAAsC,IAApCxQ,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,UAAWwQ,EAAgB,EAAhBA,UAC/BjP,EAAY,CAAEC,KAAM,GAAIiP,QAAS,IACvC,EAAwC7O,mBAASL,GAAjD,mBAAOmP,EAAP,KAAqBC,EAArB,KACMxT,EAAWwE,cAEXiP,EAAc,SAACtW,GACnB,MAAwBA,EAAE2H,OAAlBT,EAAR,EAAQA,KAAMU,EAAd,EAAcA,MACdyO,GAAgB,SAACxO,GAAD,mBAAC,eACZA,GADW,mBAEbX,EAAOU,QAIZE,qBAAU,WACJoO,GACFG,EAAgBH,KAEjB,CAACA,IAmBJ,OACE,+BACE,eAAC,GAAD,CAAezQ,OAAQA,EAAQC,UAAWA,EAA1C,SACE,uBAAKK,UAAU,wIAAf,UACE,gBAAC,KAAOgC,MAAR,CAAcjC,GAAG,KAAKC,UAAU,8CAAhC,UACGmQ,EAAY,SAAW,MAD1B,YAGA,uBAAKnQ,UAAU,QAAf,UACE,uBAAKA,UAAU,qBAAf,UACE,wBAAOA,UAAU,+BAAjB,kBACA,wBAAOA,UAAU,cAAcmB,KAAK,OAAOc,SAAUsO,EAAa1O,MAAOwO,EAAalP,UAExF,uBAAKnB,UAAU,qBAAf,UACE,wBAAOA,UAAU,+BAAjB,qBACA,2BACEA,UAAU,cACVlG,KAAK,GACLqH,KAAK,UACLc,SAAUsO,EACV1O,MAAOwO,EAAaD,gBAI1B,uBAAKpQ,UAAU,OAAf,UACE,yBACElG,KAAK,SACLkG,UAAU,4OACVkC,QA5CQ,WAClB,ID8BwBpD,EAAIrC,EC9BpB0E,EAAkBkP,EAAlBlP,KAAMiP,EAAYC,EAAZD,QACd,GAAIjP,EAAKxG,OACP,GAAIwV,EAAW,CACb,IAAQ3W,EAAQ6W,EAAR7W,IACRsD,GD0BoBgC,EC1BCtF,ED0BGiD,EC1BE,CAAE0E,OAAMiP,WD0Bf,uCAAc,WAAOtT,GAAP,eAAAC,EAAA,sEACrBiT,GAAYlR,EAAIrC,GADK,OAEpB,OADbuB,EADiC,QAE/BxD,SACNsC,GAhDuBvD,EAgDIyE,EAAIvB,KA/C1B,CACL3C,KAAMxD,EACNiD,aA8CA8E,KAAMkB,QAAQ,+BAJuB,iCA7Cf,IAAChG,IA6Cc,OAAd,wDC1B2B4I,MAAK,WACjDxC,GAAU,GACV2Q,EAAgBpP,WAGlBpE,EDHmB,SAACL,GAAD,8CAAU,WAAOK,GAAP,eAAAC,EAAA,sEACjBZ,GAAYM,GADK,OAEhB,OADbuB,EAD6B,QAE3BxD,SACNsC,GA/BuBvD,EA+BIyE,EAAIvB,KA9B1B,CACL3C,KAAMxD,EACNiD,aA6BA8E,KAAMkB,QAAQ,+BAJmB,iCA5BX,IAAChG,IA4BU,OAAV,sDCGViX,CAAYH,IAAelO,MAAK,WACvCxC,GAAU,GACV2Q,EAAgBpP,OA6Bd,oBAOA,yBACEpH,KAAK,SACLkG,UAAU,8OACVkC,QAAS,kBAAMvC,GAAU,IAH3B,8BCeG8Q,GA/EK,SAAC,GAA2B,IAAzB/Q,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UACvB7C,EAAWwE,cACTtI,EAAW0I,aAAY,SAAC9H,GAAD,MAAY,CACzCZ,OAAQY,EAAMZ,WADRA,OAGR,EAAkCuI,mBAAS,CAAEzC,GAAI,KAAMqC,KAAM,GAAIiP,QAAS,KAA1E,mBAAOD,EAAP,KAAkBO,EAAlB,KACA,EAAwCnP,oBAAS,GAAjD,mBAAOoP,EAAP,KAAqBC,EAArB,KAEA7O,qBAAU,WACRjF,EFsBqB,uCAAU,WAAOA,GAAP,eAAAC,EAAA,sEACfgT,KADe,OAEd,OADb/R,EAD2B,QAEzBxD,QACNsC,GAlBqBvD,EAkBIyE,EAAIvB,KAjBxB,CACL3C,KAAMxD,EACNiD,aAY+B,iCAfX,IAACA,IAeU,OAAV,yDErBpB,CAACuD,IAEJ,IAAM+T,EAAoB,SAAC/R,GACzBhC,EFyBuB,SAACgC,GAAD,8CAAQ,WAAOhC,GAAP,eAAAC,EAAA,sEACfkT,GAAYnR,GADG,UAEd,MAFc,OAEzBtE,OAFyB,gCAGVuV,KAHU,OAGzB/W,EAHyB,OAI/B8D,GAjCuBvD,EAiCIP,EAAOyD,KAhC7B,CACL3C,KAAMxD,EACNiD,aA+BA8E,KAAMkB,QAAQ,8BALiB,iCA7BT,IAAChG,IA6BQ,OAAR,sDEzBduX,CAAYhS,KAYvB,OACE,iCACE,eAAC,GAAD,CAAeY,OAAQA,EAAQC,UAAWA,EAA1C,SACE,uBAAKK,UAAU,+HAAf,UACE,eAAC,KAAOgC,MAAR,CAAcjC,GAAG,KAAKC,UAAU,4DAAhC,oBAGChH,EAAO2B,OACN,sBAAKqF,UAAU,8BAAf,SACE,yBAAOA,UAAU,qCAAjB,UACE,wBAAOA,UAAU,6BAAjB,SACE,gCACE,uCACA,0CACA,8CAGJ,iCACGhH,EAAOgB,KAAI,SAACC,GAAD,OACV,gCACE,8BAAKA,EAAEkH,OACP,8BAAKlH,EAAEmW,QAAUnW,EAAEmW,QAAU,QAC7B,gCACE,yBAAQpQ,UAAU,aAAakC,QAAS,kBAAM2O,EAAkB5W,EAAET,MAAlE,SACE,eAAC8L,EAAA,EAAD,CAAWtF,UAAU,UAEvB,yBAAQA,UAAU,qBAAqBkC,QAAS,kBAnC9C,SAACzF,GACvB,IAAQjD,EAAuBiD,EAAvBjD,IAAK2H,EAAkB1E,EAAlB0E,KAAMiP,EAAY3T,EAAZ2T,QACnBM,EAAa,CAAElX,MAAK2H,OAAMiP,YAC1BzQ,GAAU,GACVkK,YAAW,WACT+G,GAAgB,KACflG,IA6BuEqG,CAAgB9W,IAAtE,SACE,eAACsL,GAAA,EAAD,CAAevF,UAAU,eARtB/F,EAAET,eAiBnB,qBAAIwG,UAAU,MAAd,iCAEF,sBAAKA,UAAU,OAAf,SACE,yBACElG,KAAK,SACLkG,UAAU,4OACVkC,QAAS,kBAAMvC,GAAU,IAH3B,0BAUN,eAAC,GAAD,CAAUD,OAAQiR,EAAchR,UAAWiR,EAAiBT,UAAWA,QCjFtE,SAASa,GAAcvU,GAC5B,OAAOC,GAASC,KAAT,YAA2BF,GAG7B,SAASwU,GAAYxU,EAAM/B,GAChC,OAAOgC,GAASgC,IAAT,yBAA+BhE,EAAOhD,KAAtC,sBAAwDgD,EAAO/C,SAAW,CAAEgH,OAAQlC,IAGtF,SAASyU,GAAcpS,EAAIrC,GAChC,OAAOC,GAASqC,MAAT,oBAA4BD,GAAMrC,GAGpC,SAAS0U,GAAcrS,GAC5B,OAAOpC,GAASnB,OAAT,oBAA6BuD,ICXtC,IC2FesS,GAzFS,SAAC,GAAwC,IAAtC1R,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,UAAW0R,EAAkB,EAAlBA,YACtCnQ,EAAY,CAAEC,KAAM,GAAImQ,OAAQ,GAAIC,QAAS,IACnD,EAA4ChQ,mBAASL,GAArD,mBAAOsQ,EAAP,KAAuBC,EAAvB,KACM3U,EAAWwE,cAEXiP,EAAc,SAACtW,GACnB,MAAwBA,EAAE2H,OAAlBT,EAAR,EAAQA,KAAMU,EAAd,EAAcA,MACd4P,GAAkB,SAAC3P,GAAD,mBAAC,eACdA,GADa,mBAEfX,EAAOU,QAIZE,qBAAU,WACJsP,GACFI,EAAkBJ,KAEnB,CAACA,IAiBJ,OACE,+BACE,eAAC,GAAD,CAAe3R,OAAQA,EAAQC,UAAWA,EAA1C,SACE,uBAAKK,UAAU,wIAAf,UACE,gBAAC,KAAOgC,MAAR,CAAcjC,GAAG,KAAKC,UAAU,8CAAhC,UACGqR,EAAc,SAAW,MAD5B,cAGA,uBAAKrR,UAAU,QAAf,UACE,uBAAKA,UAAU,qBAAf,UACE,wBAAOA,UAAU,+BAAjB,kBACA,wBAAOA,UAAU,cAAcmB,KAAK,OAAOc,SAAUsO,EAAa1O,MAAO2P,EAAerQ,UAE1F,uBAAKnB,UAAU,qBAAf,UACE,wBAAOA,UAAU,+BAAjB,oBACA,wBACEA,UAAU,cACVmB,KAAK,SACLrH,KAAK,SACLmI,SAAUsO,EACV1O,MAAO2P,EAAeF,YAG1B,uBAAKtR,UAAU,qBAAf,UACE,wBAAOA,UAAU,+BAAjB,qBACA,2BACEA,UAAU,cACVlG,KAAK,GACLqH,KAAK,UACLc,SAAUsO,EACV1O,MAAO2P,EAAeD,gBAI5B,uBAAKvR,UAAU,OAAf,UACE,yBACElG,KAAK,SACLkG,UAAU,4OACVkC,QApDU,WACpB,ID8B0BpD,EAAIrC,EC9BtB0E,EAA0BqQ,EAA1BrQ,KAAMmQ,EAAoBE,EAApBF,OAAQC,EAAYC,EAAZD,QACtB,UAAIF,QAAJ,IAAIA,KAAa7X,IAAK,CACpB,IAAQA,EAAQgY,EAARhY,IACRsD,GD2BwBgC,EC3BDtF,ED2BKiD,EC3BA,CAAE0E,OAAMmQ,SAAQC,WD2BrB,uCAAc,WAAOzU,GAAP,eAAAC,EAAA,sEACvBmU,GAAcpS,EAAIrC,GADK,OAEtB,OADbuB,EADmC,QAEjCxD,SACNsC,GAlCyBvD,EAkCIyE,EAAIvB,KAjC5B,CACL3C,KAAMxD,GACNiD,aAgCA8E,KAAMkB,QAAQ,iCAJyB,iCA/Bf,IAAChG,IA+Bc,OAAd,wDC3BiC4I,MAAK,WAC3DxC,GAAU,GACV8R,EAAkBvQ,WAGpBpE,EDFuB,SAACL,GAAD,8CAAU,WAAOK,GAAP,eAAAC,EAAA,sEACnBiU,GAAcvU,GADK,OAElB,OADbuB,EAD+B,QAE7BxD,SACNsC,GA/ByBvD,EA+BIyE,EAAIvB,KA9B5B,CACL3C,KAAMxD,GACNiD,aA6BA8E,KAAMkB,QAAQ,iCAJqB,iCA5BX,IAAChG,IA4BU,OAAV,sDCEdmY,CAAcF,IAAiBrP,MAAK,WAC3CxC,GAAU,GACV8R,EAAkBvQ,OAsCd,oBAOA,yBACEpH,KAAK,SACLkG,UAAU,8OACVkC,QAAS,kBAAMvC,GAAU,IAH3B,8BC4EGgS,GAhIA,WACb,MAA4BpQ,oBAAS,GAArC,mBAAO7B,EAAP,KAAeC,EAAf,KACA,EAA4C4B,oBAAS,GAArD,mBAAOoL,EAAP,KAAuBC,EAAvB,KACA,EAA8CrL,oBAAS,GAAvD,mBAAOqO,EAAP,KAAwBC,EAAxB,KACA,EAA0CtO,oBAAS,GAAnD,mBAAOqQ,EAAP,KAAsBC,EAAtB,KACA,EAAsCtQ,oBAAS,GAA/C,mBAAO6M,EAAP,KAAoBC,EAApB,KACA,EAAkC9M,oBAAS,GAA3C,mBAAOuQ,EAAP,KAAkBC,EAAlB,KACA,EAAsCxQ,oBAAS,GAA/C,mBAAOyQ,EAAP,KAAoBC,EAApB,KACA,EAA4C1Q,oBAAS,GAArD,mBAAO2Q,EAAP,KAAuBC,EAAvB,KACA,EAAoC5Q,oBAAS,GAA7C,mBAAO6Q,EAAP,KAAmBC,EAAnB,KACA,EAA4C9Q,oBAAS,GAArD,mBAAO+Q,EAAP,KAAuBC,EAAvB,KACA,EAA0ChR,oBAAS,GAAnD,mBAAOiR,EAAP,KAAsBC,EAAtB,KACA,EAA4ClR,oBAAS,GAArD,mBAAOmR,EAAP,KAAuBC,EAAvB,KACM3V,GAAWmK,cACXrK,GAAWwE,cACX0B,GAAOC,KAAKC,MAAMhG,aAAaU,QAAQ,SAE7C,OACE,iCACE,uBAAKoC,UAAU,yEAAf,UACE,uBAAKA,UAAU,iBAAf,UACE,uBAAKA,UAAU,OAAf,UACE,0BAAQA,UAAU,8BAA8BkC,QAAS,kBAAMvC,GAAU,IAAzE,UACE,eAACiT,GAAA,EAAD,CAAe5S,UAAU,aAD3B,eAIiB,gBAAX,OAAJgD,SAAI,IAAJA,QAAA,EAAAA,GAAMJ,OAAwC,WAAX,OAAJI,SAAI,IAAJA,QAAA,EAAAA,GAAMJ,QACrC,yBAAQ5C,UAAU,gBAAgBkC,QAAS,kBAAM0K,GAAkB,IAAnE,SACE,eAAClD,EAAA,EAAD,CAAU1J,UAAU,aAI1B,uBAAKA,UAAU,OAAf,UACE,0BAAQA,UAAU,8BAA8BkC,QAAS,kBAAMiQ,GAAkB,IAAjF,UACE,eAACU,GAAA,EAAD,CAAiB7S,UAAU,aAD7B,iBAIiB,gBAAX,OAAJgD,SAAI,IAAJA,QAAA,EAAAA,GAAMJ,OAAwC,WAAX,OAAJI,SAAI,IAAJA,QAAA,EAAAA,GAAMJ,QACrC,yBAAQ5C,UAAU,gBAAgBkC,QAAS,kBAAM2N,GAAmB,IAApE,SACE,eAACnG,EAAA,EAAD,CAAU1J,UAAU,aAIV,gBAAX,OAAJgD,SAAI,IAAJA,QAAA,EAAAA,GAAMJ,OACL,uBAAK5C,UAAU,OAAf,UACE,0BAAQA,UAAU,8BAA8BkC,QAAS,kBAAMmQ,GAAc,IAA7E,UACE,eAACS,GAAA,EAAD,CAAiB9S,UAAU,aAD7B,WAIA,yBAAQA,UAAU,gBAAgBkC,QAAS,kBAAMuQ,GAAiB,IAAlE,SACE,eAAC/I,EAAA,EAAD,CAAU1J,UAAU,aAI1B,0BAAQA,UAAU,6BAA6BkC,QAAS,kBAAM2P,GAAiB,IAA/E,UACE,eAACkB,GAAA,EAAD,CAAU/S,UAAU,aADtB,eAIgB,gBAAX,OAAJgD,SAAI,IAAJA,QAAA,EAAAA,GAAMJ,OACL,0BAAQ5C,UAAU,6BAA6BkC,QAAS,kBAAMyQ,GAAkB,IAAhF,UACE,eAACK,GAAA,EAAD,CAAkBhT,UAAU,aAD9B,oBAMJ,uBAAKA,UAAU,gCAAf,UACkB,WAAX,OAAJgD,SAAI,IAAJA,QAAA,EAAAA,GAAMJ,QACH5F,GAASiW,SAAS9U,SAAS,iBAQ3B,eAAC,IAAD,CAAM+U,GAAG,IAAT,SACE,0BAAQlT,UAAU,8BAAlB,UACE,eAACmT,GAAA,EAAD,CAAgBnT,UAAU,aAD5B,qBARF,eAAC,IAAD,CAAMkT,GAAG,gBAAT,SACE,0BAAQlT,UAAU,8BAAlB,UACE,eAACmT,GAAA,EAAD,CAAgBnT,UAAU,aAD5B,qBAaN,uBAAKA,UAAU,OAAf,UACE,0BAAQA,UAAU,8BAA8BkC,QAAS,kBAAM+P,GAAe,IAA9E,UACE,eAACc,GAAA,EAAD,CAAU/S,UAAU,aADtB,cAIiB,gBAAX,OAAJgD,SAAI,IAAJA,QAAA,EAAAA,GAAMJ,OAAwC,WAAX,OAAJI,SAAI,IAAJA,QAAA,EAAAA,GAAMJ,QACrC,yBAAQ5C,UAAU,cAAckC,QAAS,kBAAMqQ,GAAkB,IAAjE,SACE,eAAC7I,EAAA,EAAD,CAAU1J,UAAU,cAIT,gBAAX,OAAJgD,SAAI,IAAJA,QAAA,EAAAA,GAAMJ,OAAwC,WAAX,OAAJI,SAAI,IAAJA,QAAA,EAAAA,GAAMJ,QACrC,qCACE,uBAAK5C,UAAU,OAAf,UACE,0BAAQA,UAAU,8BAA8BkC,QAAS,kBAAM6P,GAAa,IAA5E,UACE,eAACgB,GAAA,EAAD,CAAU/S,UAAU,aADtB,WAIA,yBAAQA,UAAU,cAAckC,QAAS,kBAAMmM,GAAe,IAA9D,SACE,eAAC3E,EAAA,EAAD,CAAU1J,UAAU,eAM5B,yBAAQA,UAAU,gBAAgBkC,QAAS,kBAAMpF,GAASD,OAAkBuW,MAAM,SAAlF,SACE,eAACC,GAAA,EAAD,CAAYrT,UAAU,gBAI5B,eAAC,GAAD,CAAeN,OAAQA,EAAQC,UAAWA,IAC1C,eAAC,GAAD,CAAaD,OAAQiN,EAAgBhN,UAAWiN,IAChD,eAAC,GAAD,CAAalN,OAAQkQ,EAAiBjQ,UAAWkQ,IACjD,eAAC,GAAD,CAAYnQ,OAAQoS,EAAWnS,UAAWoS,IAC1C,eAACtH,GAAD,CAAc/K,OAAQ0O,EAAazO,UAAW0O,IAC9C,eAAC,GAAD,CAAgB3O,OAAQkS,EAAejS,UAAWkS,IAClD,eAAC,GAAD,CAAiBnS,OAAQ4S,EAAgB3S,UAAW4S,IACpD,eAAC,GAAD,CAAc7S,OAAQsS,EAAarS,UAAWsS,IAC9C,eAAC,GAAD,CAAiBvS,OAAQwS,EAAgBvS,UAAWwS,IACpD,eAAC,GAAD,CAAazS,OAAQ0S,EAAYzS,UAAW0S,IAC5C,eAAC,GAAD,CAAU3S,OAAQ8S,EAAe7S,UAAW8S,IAC5C,eAAC,GAAD,CAAiB/S,OAAQgT,EAAgB/S,UAAWgT,QCqD3CW,GAxME,WACf,IAAMxW,EAAWwE,cACjB,EAUII,aAAY,SAAC9H,GAAD,MAAY,CAC1B5C,SAAU4C,EAAM5C,SAASA,SACzBc,eAAgB8B,EAAM5C,SAASc,eAC/BiB,WAAYa,EAAMb,WAClBvB,YAAaoC,EAAM5C,SAASQ,YAC5BD,WAAYqC,EAAM5C,SAASO,WAC3BmB,aAAckB,EAAMvB,OAAOK,aAC3BJ,YAAasB,EAAMvB,OAAOC,YAC1BzB,aAAc+C,EAAM/C,aAAaA,aACjCK,YAAa0C,EAAM5C,SAASE,gBAlB5BF,EADF,EACEA,SACAc,EAFF,EAEEA,eACAiB,EAHF,EAGEA,WACAvB,EAJF,EAIEA,YACAD,EALF,EAKEA,WACAmB,EANF,EAMEA,aACAJ,EAPF,EAOEA,YACAzB,EARF,EAQEA,aACAK,EATF,EASEA,YAYF,EAA4CqK,mBAAS,CAAEvJ,YAAa,KAAMmJ,KAAM,KAAhF,mBAAOoS,EAAP,KAAuBC,EAAvB,KAsBA,IAWMC,EArBN,SAAkBC,GAAuB,IACnCC,EADkC,OAAhBC,EAAgB,uDAAN,IAEhC,OAAO,WAAc,IAAD,uBAATC,EAAS,yBAATA,EAAS,gBAClBC,aAAaH,GACbA,EAAQ9J,YAAW,WACjB6J,EAAKK,MAAM,EAAMF,KAChBD,IAeiBI,EAXI,SAAC/Z,GAC3B,IAAQ4H,EAAU5H,EAAE2H,OAAZC,MACR/E,EAASqJ,GAAqB,2BAAKrO,GAAN,IAAsBF,QAASiK,MAExDhL,EACFiG,EAASqJ,GAAqB,2BAAKrO,GAAN,IAAsBF,QAASiK,MAE5D2R,GAAkB,SAAC1R,GAAD,mBAAC,eAAcA,GAAf,IAAoBX,KAAMU,UAM1CoS,EAAmB,SAACvc,GACxBoF,EAASqJ,GAAqB,2BAAKrO,GAAN,IAAsBJ,YAyB/Cwc,EAAerd,EACjBG,EACAE,EACGwD,QAAO,SAACT,GAAD,OAAOA,EAAEkH,KAAKgT,cAAchW,SAASoV,EAAepS,KAAKgT,kBAChEzZ,QAAO,SAACT,GAAD,OAAQsZ,EAAevb,aAAciC,EAAEjC,cAAgBub,EAAevb,eAEpF,OACE,uBAAKgI,UAAU,wCAAf,UACE,uBAAKA,UAAU,uCAAf,UACE,sBAAKA,UAAU,GAAf,SACE,wBACElG,KAAK,OACLkG,UAAU,kCACVwJ,YAAY,gCACZvH,SAAUwR,MAGd,sBAAKzT,UAAU,YAAf,SACE,0BACEA,UAAU,sBACVmB,KAAK,cACLc,SAhFmB,SAAChI,GAC5B,IAAQ4H,EAAU5H,EAAE2H,OAAZC,MAEJhL,EACFiG,EAASqJ,GAAqB,2BAAKrO,GAAN,IAAsBE,YAAa6J,MAEhE2R,GAAkB,SAAC1R,GAAD,mBAAC,eAAcA,GAAf,IAAoB9J,YAAuB,KAAV6J,EAAe,KAAOhH,OAAOgH,SA2E1EA,MAAOhL,EAAeiB,EAAeE,YAAcub,EAAevb,YAJpE,UAME,yBAAQ6J,MAAM,GAAGuB,UAAQ,EAACC,UAAQ,EAAlC,6BAGA,yBAAQxB,MAAM,GAAd,iBACC9I,GACCA,EAAWiB,KAAI,SAACC,GAAD,OACb,yBAAoB4H,MAAO5H,EAAET,IAA7B,SACGS,EAAEkH,MADQlH,EAAET,aAMtB3C,GACC,sBAAKmJ,UAAU,6BAAf,SACE,0BACEA,UAAU,kCACVmB,KAAK,WACLc,SA/DgB,SAAChI,GAC3B,IAAQ4H,EAAU5H,EAAE2H,OAAZC,MACR/E,EAASqJ,GAAqB,2BAAKrO,GAAN,IAAsBC,SAAU8J,OA8DnDA,MAAO/J,EAAeC,SAJxB,UAME,yBAAQ8J,MAAM,GAAGuB,UAAQ,EAACC,UAAQ,EAAlC,sBAGA,wCACA,yCACA,yCACA,iDAKR,sBAAKrD,UAAU,qCAAf,SACGkU,GACCA,EAAala,KAAI,SAACC,GAAD,OACf,uBAEE+F,UAAU,0FACVkC,QAAS,kBA9EK,SAACgI,GACzB,IAAM7P,EAAgB3B,EAAagC,QAAO,SAACT,GAAD,OAAOA,EAAET,MAAQ0Q,EAAK1Q,OAC5Da,EAAcM,OAAS,EACzBmC,EACEmC,GAAkB3G,EAAD,YAAC,eACb4R,GADY,IAEfxQ,cACEmB,OAAOR,EAAcA,EAAcM,OAAS,GAAGjB,eAAiBmB,OAAOqP,EAAKzQ,UACxEY,EAAcA,EAAcM,OAAS,GAAGjB,cAAgB,EACxDW,EAAcA,EAAcM,OAAS,GAAGjB,kBAIlDoD,EAASmC,GAAkB3G,EAAD,YAAC,eAAkB4R,GAAnB,IAAyBxQ,cAAe,MAiE3C0a,CAAkBna,IAHnC,UAKE,uBAAK+F,UAAU,yBAAf,UACE,sBACEuM,IAAKtS,EAAEiR,QAAU,mEACjBsB,IAAI,UACJxM,UAAU,gCAEZ,oBAAGA,UAAU,sCAAb,SAAoD/F,EAAEkH,UAExD,uBAAKnB,UAAU,eAAf,UACE,qBAAGA,UAAU,0CAAb,wBAAmE/F,EAAER,YACrE,qBAAGuG,UAAU,sDAAb,gBAAuE/F,EAAEgB,cAdtEhB,EAAET,UAmBdxC,EAAS2D,OAAS,GAAK9D,GACtB,sBAAKmJ,UAAU,2BAAf,SACE,sBAAK,aAAW,0BAAhB,SACE,sBAAIA,UAAU,aAAd,UACE,qBAAIA,UAAU,YAAYkC,QAAS,kBAAsB,IAAhB1K,GAAqByc,EAAiBnc,EAAeJ,KAAO,IAArG,SACE,yBAAQsI,UAAU,YAAlB,SACE,uBAAM,cAAY,OAAlB,sBAGHqU,MAAM9c,GACJ+c,OACAta,KAAI,SAACC,EAAGsK,GAAJ,OACH,qBAEEvE,UAAS,oBAAexI,IAAgB+M,EAAI,GAAK,UACjDrC,QAAS,kBAAM+R,EAAiB1P,EAAI,IAHtC,SAKE,yBAAQvE,UAAU,YAAY/C,KAAK,IAAnC,SACGsH,EAAI,KALFA,MASX,qBACEvE,UAAU,YACVkC,QAAS,kBAAM1K,EAAcD,GAAc0c,EAAiBnc,EAAeJ,KAAO,IAFpF,SAIE,yBAAQsI,UAAU,YAAlB,SACE,uBAAM,cAAY,OAAlB,iCCjLHuU,GAZH,WACV,OACE,uBAAKvU,UAAU,OAAf,UACE,eAAC,GAAD,IACA,uBAAKA,UAAU,6CAAf,UACE,eAAC,GAAD,IACA,eAAC,GAAD,WCaOwU,GApBC,WACd,IAAMxR,EAAOC,KAAKC,MAAMhG,aAAaU,QAAQ,SACrChE,EAAUuN,cAAVvN,MACF+K,EAAWC,cAcjB,OAZA7C,qBAAU,WACU,eAAdiB,EAAKJ,OACPzM,OAAO6G,SAASC,KAAO,mBAExB,IAEH8E,qBAAU,WACJnI,GAAK,OAAIA,QAAJ,IAAIA,KAAOqL,UAClBN,EAAS,OAEV,IAEI,eAAC,GAAD,K,UC6EM8P,GA1FS,SAAC,GAAyC,IAAvC/U,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,UAAW+U,EAAmB,EAAnBA,aACtC5X,EAAWwE,cACjB,EAAuCI,aAAY,SAAC9H,GAAD,MAAY,CAC7D9B,eAAgB8B,EAAM5C,SAASc,eAC/BiB,WAAYa,EAAMb,WAClBE,QAASW,EAAMX,QACfT,MAAOoB,EAAMvB,OAAOG,UAJdO,EAAR,EAAQA,WAAYE,EAApB,EAAoBA,QAAST,EAA7B,EAA6BA,MAMvBmM,EAAWC,cASXqI,EAAc,SAACnO,GACnB,IAAMoO,EAAWnU,GAAcA,EAAW0B,MAAK,SAACR,GAAD,OAAOA,EAAET,MAAQsF,KAEhE,OAAOoO,EAAWA,EAAS/L,KAAO,OAG9BgM,EAAY,SAACrO,GACjB,IAAMsO,EAASnU,GAAWA,EAAQwB,MAAK,SAACR,GAAD,OAAOA,EAAET,MAAQsF,KAExD,OAAOsO,EAASA,EAAOjM,KAAO,OAIhC,OACE,+BACE,eAAC,GAAD,CAAezB,OAAQA,EAAQC,UAAWA,EAA1C,SACE,uBAAKK,UAAU,+GAAf,UACE,eAAC,KAAOgC,MAAR,CAAcjC,GAAG,KAAKC,UAAU,4DAAhC,yBAGA,sBAAKA,UAAU,8BAAf,SACE,yBAAOA,UAAU,qCAAjB,UACE,wBAAOA,UAAU,6BAAjB,SACE,gCACE,0CACA,uCACA,uCACA,wCACA,2CACA,2CACA,yCACA,2CACA,8CAGJ,iCACG0U,GACCA,EAAa1a,KAAI,SAACC,EAAGmL,GAAJ,OACf,gCACE,wBACA,8BAAKA,EAAQ,IACb,8BAAKnL,EAAEhD,QAAQkK,OACf,8BAAKlH,EAAEa,eACP,8BAAKb,EAAER,WACP,8BAAKwT,EAAYhT,EAAEiT,YACnB,8BAAKC,EAAUlT,EAAEmT,UACjB,8BAAKnT,EAAE8K,YACP,8BACE,yBAAQ/E,UAAU,qBAAqBkC,QAAS,kBAtDpEpF,EAASmC,GAsDoFhF,IArD7F6C,EAASiE,GAAqB,OAACvI,QAAD,IAACA,OAAD,EAACA,EAAO6L,WACtCvH,EAASsC,GAAwB,sBACjCuF,EAAS,IAAK,CAAE/K,MAAO,CAAEqL,SAAUzM,EAAMmc,gBAmDrB,SACE,eAACpP,GAAA,EAAD,CAAevF,UAAU,cAXtB/F,EAAET,eAoBrB,sBAAKwG,UAAU,6BAAf,SACE,yBACElG,KAAK,SACLkG,UAAU,4OACVkC,QAAS,kBAAMvC,GAAU,IAH3B,6B,kBCzEZiV,KAAMC,SAAN,MAAAD,KAAK,YAAaE,OAElB,IAwfeC,GAxfM,WACnB,IAAMjY,EAAWwE,cACjB,EAWII,aAAY,SAAC9H,GAAD,MAAY,CAC1BvB,OAAQuB,EAAMvB,OACda,MAAOU,EAAMV,MACb7B,cAAeuC,EAAM5C,SAASK,cAC9B4N,SAAUrL,EAAMV,MAAMwB,QAAO,SAACT,GAAD,MAAkB,aAAXA,EAAE2I,QACtCtK,YAAasB,EAAMvB,OAAOC,YAC1BK,kBAAmBiB,EAAMvB,OAAOM,kBAChCC,WAAYgB,EAAMvB,OAAOO,WACzBC,YAAae,EAAMvB,OAAOQ,YAC1BC,WAAYc,EAAMvB,OAAOS,WACzBE,OAAQY,EAAMZ,WApBdX,EADF,EACEA,OACAa,EAFF,EAEEA,MACA7B,EAHF,EAGEA,cACA4N,EAJF,EAIEA,SACA3M,EALF,EAKEA,YACAK,EANF,EAMEA,kBACAE,EAPF,EAOEA,YACAD,EARF,EAQEA,WACAE,EATF,EASEA,WACAE,EAVF,EAUEA,OAuBIgK,EAAOC,KAAKC,MAAMhG,aAAaU,QAAQ,SAEvC+G,EAAWC,cACjB,EAAwCrD,mBAbjB,CACrByT,gBAAiB,GACjBC,gBAAiB,GACjBC,UAAW,GACXC,cAAe,GACfC,eAAgB,GAChBvd,MAAO,GACPuM,UAAW,KAMb,mBAAOiR,EAAP,KAAqBC,EAArB,KACA,EAA4B/T,oBAAS,GAArC,mBAAO7B,EAAP,KAAeC,EAAf,KACA,EAAoC4B,mBAAS,MAA7C,mBAAOgU,EAAP,KAAmBC,EAAnB,KACA,EAAgDjU,mBAAS,CAAE5J,QAAS,GAAID,KAAM,EAAGE,QAAS,KAA1F,mBAAO6d,EAAP,KAAyBC,EAAzB,KACA3T,qBAAU,WxCoDa,IAACtF,EAAM/B,EwCnD5BoC,GxCmDsBL,EwCnDH,CAAEkZ,MAAON,GxCmDA3a,EwCnDgB+a,ExCmDvB,uCAAkB,WAAO3Y,GAAP,eAAAC,EAAA,sEACvB0B,GAAUhC,EAAM/B,GADO,cAEtB,OADbsD,EADmC,QAEjCxD,QACNsC,GA3FqBvD,EA2FIyE,EAAIvB,KA1FxB,CACL3C,KAAMxD,EACNiD,aAqFuC,kBAKlCyE,GALkC,iCAxFnB,IAACzE,IAwFkB,OAAlB,0DwClDpB,CAACuD,EAAUuY,EAAcI,IAE5B1T,qBAAU,W5BuBoB,IAACtF,E4BtB7BK,G5BsB6BL,E4BtBHpF,EAAcI,Y5BsBZ,uCAAU,WAAOqF,GAAP,eAAAC,EAAA,sEACtB+I,GAAiBrJ,GADK,OAErB,OADbuB,EADkC,QAEhCxD,QACNsC,GA3D4BvD,EA2DIyE,EAAIvB,KA1D/B,CACL3C,KAAMxD,GACNiD,aAqDsC,iCAxDX,IAACA,IAwDU,OAAV,0D4BrB3B,CAACuD,EAAUzF,EAAcI,cAE5B,IAAMme,EAA2B,SAAC3b,GAChC,MAAwBA,EAAE2H,OAAlBT,EAAR,EAAQA,KAAMU,EAAd,EAAcA,MAKd,GAJAyT,GAAgB,SAACxT,GAAD,mBAAC,eACZA,GADW,mBAEbX,EAAOU,OAEG,UAATV,EAAkB,CACpB,IAAQ1J,EAAgBJ,EAAhBI,YACRqF,EAASsJ,GAA0B,2BAAK3O,GAAN,IAAmBI,MAAOgK,QAI1DoS,EAAmB,SAACvc,GACxB,IAAQD,EAAgBJ,EAAhBI,YACRqF,EAASsJ,GAA0B,2BAAK3O,GAAN,IAAmBC,YAGjDme,EAAyB,SAACne,GAC9Bge,EAAoB,2BAAKD,GAAN,IAAwB/d,WAG7C,SAASsc,EAASN,GAAuB,IACnCC,EADkC,OAAhBC,EAAgB,uDAAN,IAEhC,OAAO,WAAc,IAAD,uBAATC,EAAS,yBAATA,EAAS,gBAClBC,aAAaH,GACbA,EAAQ9J,YAAW,WACjB6J,EAAKK,MAAM,EAAMF,KAChBD,IAIP,IAWMH,EAAkBO,GAXK,SAAC/Z,GAC5B,IAAQxC,EAAgBJ,EAAhBI,YACAoK,EAAU5H,EAAE2H,OAAZC,MACR/E,EAASsJ,GAA0B,2BAAK3O,GAAN,IAAmBG,QAASiK,SAS1DiU,EAAyB9B,GANJ,SAAC/Z,GAC1B,IAAQ4H,EAAU5H,EAAE2H,OAAZC,MACRyT,EAAgB,2BAAKD,GAAN,IAAoBjR,UAAWvC,QA8B1CgD,EAAqB,SAACpI,GAC1BK,EAASoC,GAAezC,IACxBK,EAASmC,GAAkB3G,EAfF,SAACmE,GAU1B,OATeA,EAAKzC,KAAI,SAACC,GAAD,mBAAC,eACpBA,EAAEhD,SADiB,IAEtBkE,KAAMC,KAAKC,SACXN,gBAAiBd,EAAEc,gBACnBD,aAAcb,EAAEa,aAChBpB,cAAeO,EAAER,SACjB6B,iBAAkBrB,EAAER,SACpBqL,aAAc7K,EAAE8K,eAOsBC,CAAmBvI,EAAK6H,cAChExH,EAASiE,GAAqB,OAACtE,QAAD,IAACA,OAAD,EAACA,EAAM4H,WACrCvH,EAASsC,GAAwB,iBACjCuF,EAAS,IAAK,CAAE/K,MAAO,CAAEqL,SAAQ,OAAExI,QAAF,IAAEA,OAAF,EAAEA,EAAMwI,aAMrCrL,EAAQ,CACZmc,OAJajd,EAAW6B,OAAS,GAAK7B,EAAWkB,KAAI,SAACC,GAAD,OAAO,IAAIiK,KAAKjK,EAAET,KAAKwc,kBAK5EC,SAAU,CACR,CACEC,gBAAiB,CACf,0BACA,0BACA,0BACA,0BACA,0BACA,2BACA,4BAEFC,YAAa,CACX,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,sBAEFC,YAAa,EACb3Z,KAzBY3D,EAAW6B,OAAS,GAAK7B,EAAWkB,KAAI,SAACC,GAAD,OAAOA,EAAEoc,sBA8BnE,OACE,iCACE,uBAAKrW,UAAS,4BAAqC,eAAdgD,EAAKJ,KAAwB,EAAI,EAAxD,sCAAd,UACE,qBAAI5C,UAAU,2CAAd,0BACe,eAAdgD,EAAKJ,MACJ,uBAAK5C,UAAU,gBAAf,UACE,wBAAOA,UAAU,+BAAjB,mBACA,0BAAQA,UAAU,eAAemB,KAAK,QAAQc,SAAU2T,EAAxD,UACE,yBAAQ/T,MAAM,GAAGuB,UAAQ,EAAzB,iBAGCpK,GACCA,EAAOgB,KAAI,SAACC,GAAD,OACT,yBAAoB4H,MAAO5H,EAAET,IAA7B,SACGS,EAAEkH,MADQlH,EAAET,cAOzB,uBAAKwG,UAAU,gBAAf,UACE,wBAAOA,UAAU,+BAAjB,sBACA,0BAAQA,UAAU,eAAemB,KAAK,iBAAiBc,SAAU2T,EAAjE,UACE,yBAAQ/T,MAAM,GAAd,iBACCoD,GACCA,EAASjL,KAAI,SAACC,GAAD,OACX,yBAAoB4H,MAAO5H,EAAET,IAA7B,SACGS,EAAEkH,MADQlH,EAAET,cAMvB,uBAAKwG,UAAU,gBAAf,UACE,wBAAOA,UAAU,+BAAjB,qBACA,0BAAQA,UAAU,eAAemB,KAAK,gBAAgBc,SAAU2T,EAAhE,UACE,yBAAQ/T,MAAM,GAAGuB,UAAQ,EAAzB,iBAGClK,GACCA,EAAMc,KAAI,SAACC,GAAD,OACR,yBAAoB4H,MAAO5H,EAAET,IAA7B,SACGS,EAAEkH,MADQlH,EAAET,cAOvB,uBAAKwG,UAAU,gBAAf,UACE,wBAAOA,UAAU,+BAAjB,oBACA,0BAAQA,UAAU,eAAemB,KAAK,YAAYc,SAAU2T,EAA5D,UACE,yBAAQ/T,MAAM,GAAGuB,UAAQ,EAAzB,iBAGA,yBAAQvB,MAAM,OAAd,kBACA,yBAAQA,MAAM,SAAd,0BAGJ,uBAAK7B,UAAU,2BAAf,UACE,wBAAOA,UAAU,+BAAjB,kBACA,uBAAKA,UAAU,uDAAf,UACE,wBAAOlG,KAAK,OAAOkG,UAAU,GAAGmB,KAAK,kBAAkBc,SAAU2T,IACjE,uBAAM5V,UAAU,0BAAhB,gBACA,wBAAOlG,KAAK,OAAOkG,UAAU,GAAGmB,KAAK,kBAAkBc,SAAU2T,aAKvE,uBAAK5V,UAAU,gDAAf,UACE,uBAAKA,UAAU,aAAf,UACE,uBAAKA,UAAU,4BAAf,UACE,qBAAIA,UAAU,2CAAd,sBACA,iCACE,wBAAOA,UAAU,+BAAjB,qBACA,0BACEA,UAAU,eACViC,SA1IsB,SAAChI,GACnC,IAAQxC,EAAgBJ,EAAhBI,YACAoK,EAAU5H,EAAE2H,OAAZC,MACR/E,EAASsJ,GAA0B,2BAAK3O,GAAN,IAAmBE,QAASkK,OAwIlDA,MAAOxK,EAAcI,YAAYE,QAHnC,UAKE,yCACA,yCACA,yCACA,gDAGJ,+BACE,wBACEmC,KAAK,OACLkG,UAAU,mBACVwJ,YAAY,qBACZvH,SAAUwR,SAIhB,sBAAKzT,UAAU,6BAAf,SACE,sBAAKA,UAAU,aAAf,SACE,yBAAOA,UAAU,uCAAjB,UACE,iCACE,gCACE,uCACA,uCACA,4CACA,6CAGJ,iCACG3I,EAAcC,OACbD,EAAcC,MAAM0C,KAAI,SAACC,GAAD,OACtB,gCACE,qBAAI+F,UAAU,GAAd,SAAkB/F,EAAEhD,QAAQkK,OAC5B,qBAAInB,UAAU,GAAd,SAAkB/F,EAAEqc,OACpB,qBAAItW,UAAU,GAAd,SAAkB/F,EAAEsc,YACpB,sBAAIvW,UAAU,GAAd,gBAAqB/F,EAAEuc,WAJhBvc,EAAET,iBAWtBnC,EAAcC,MAAMqD,OAAS,GAC5B,sBAAKqF,UAAU,2BAAf,SACE,sBAAK,aAAW,0BAAhB,SACE,sBAAIA,UAAU,aAAd,UACE,qBACEA,UAAU,YACVkC,QAAS,kBAAoC,IAA9B7K,EAAcG,aAAqByc,EAAiB5c,EAAcG,YAAc,IAFjG,SAIE,yBAAQwI,UAAU,YAAlB,SACE,uBAAM,cAAY,OAAlB,sBAGHqU,MAAMhd,EAAcE,YAClB+c,OACAta,KAAI,SAACC,EAAGsK,GAAJ,OACH,qBAEEvE,UAAS,oBAAe3I,EAAcG,cAAgB+M,EAAI,GAAK,UAC/DrC,QAAS,kBAAM+R,EAAiB1P,EAAI,IAHtC,SAKE,yBAAQvE,UAAU,YAAY/C,KAAK,IAAnC,SACGsH,EAAI,KALFA,MASX,qBACEvE,UAAU,YACVkC,QAAS,kBACP7K,EAAcG,YAAcH,EAAcE,YAC1C0c,EAAiB5c,EAAcG,YAAc,IAJjD,SAOE,yBAAQwI,UAAU,YAAlB,SACE,uBAAM,cAAY,OAAlB,gCAQd,uBAAKA,UAAU,gBAAf,UACE,uBAAKA,UAAU,yCAAf,UACE,qBAAIA,UAAU,2CAAd,mBACA,+BACE,wBACElG,KAAK,OACLkG,UAAU,cACVwJ,YAAY,0BACZvH,SAAU6T,MAGd,iCACE,wBAAO9V,UAAU,+BAAjB,6BACA,0BACEA,UAAU,eACV6B,MAAO4T,EAAiB9d,QACxBsK,SAAU,SAAChI,GAAD,OAAOyb,EAAoB,2BAAKD,GAAN,IAAwB9d,QAASsC,EAAE2H,OAAOC,UAHhF,UAKE,wCACA,yCACA,yCACA,yCACA,mDAIN,uBAAK7B,UAAU,0CAAf,UACE,uBAAKA,UAAU,qEAAf,UACE,sBAAKA,UAAU,oCAAf,SACE,uBAAKA,UAAU,2EAAf,UACE,wCACA,sCAAQ5E,KAAKoJ,MAAM5L,WAGvB,sBAAKoH,UAAU,qCAAf,SACE,uBAAKA,UAAU,4EAAf,UACE,+CACA,8BAAKrH,SAGT,sBAAKqH,UAAU,mCAAf,SACE,uBAAKA,UAAU,0EAAf,UACE,yCACA,sCAAQnH,aAId,uBAAKmH,UAAU,kBAAf,UACE,sBAAKA,UAAU,+BAAf,SACE,sBAAKA,UAAU,QAAf,SACE,yBAAOA,UAAU,gCAAjB,UACE,iCACE,gCACE,0CACA,2CACA,uCACA,wCACA,uCACA,yCACA,yCACA,yCACA,0CACA,2CACA,4CAGJ,iCACG3H,EAAOE,WACNF,EAAOE,UAAUyB,KAAI,SAACC,GAAD,iBACnB,gCACE,qBAAI+F,UAAU,GAAd,UAAmB,OAAD/F,QAAC,IAADA,OAAA,EAAAA,EAAGmK,YAAa,QAClC,+BAAM,OAADnK,QAAC,IAADA,GAAA,UAAAA,EAAGoK,gBAAH,eAAalD,OAAQ,QAC1B,qBAAInB,UAAU,GAAd,SAAkB,IAAIkE,KAAKjK,EAAEiO,WAAW8N,iBACxC,sBAAIhW,UAAU,GAAd,iBAAsB5E,KAAKoJ,MAAMvK,EAAEwK,UACnC,sBAAIzE,UAAU,GAAd,iBAAsB5E,KAAKoJ,MAAMvK,EAAEwK,UACnC,uCAAU,OAADxK,QAAC,IAADA,KAAG2N,OAAS3N,EAAE2N,OAAS,KAChC,uCACA,8BACE,oBACE5H,UAAS,qDACM,SAAb/F,EAAEO,OAAoB,8BAAgC,iCAF1D,SAKGP,EAAEO,OAAOic,kBAGd,wCAAKxc,EAAEoL,eAAP,aAAK,EAAWlE,OAChB,+BAAM,OAADlH,QAAC,IAADA,GAAA,UAAAA,EAAGgL,gBAAH,eAAa9D,OAAQ,QAC1B,gCACE,yBAAQnB,UAAU,qBAAqBkC,QAAS,kBAhT1EsT,EAgTiGvb,EAhT7EqK,iBACpB3E,GAAU,IA+SgB,SACE,eAAC+W,GAAA,EAAD,CAAS1W,UAAU,UAErB,yBAAQA,UAAU,oBAAoBkC,QAAS,kBAAM2C,EAAmB5K,IAAxE,SACE,eAACsL,GAAA,EAAD,CAAevF,UAAU,eAxBtB/F,EAAET,iBAiCtBnC,EAAcC,MAAMqD,OAAS,GAC5B,sBAAKqF,UAAU,2BAAf,SACE,sBAAK,aAAW,0BAAhB,SACE,sBAAIA,UAAU,aAAd,UACE,qBACEA,UAAU,YACVkC,QAAS,kBAA6B,IAAvB7J,EAAOb,aAAqBqe,EAAuBxd,EAAOb,YAAc,IAFzF,SAIE,yBAAQwI,UAAU,YAAlB,SACE,uBAAM,cAAY,OAAlB,sBAGHqU,MAAMhc,EAAOd,YACX+c,OACAta,KAAI,SAACC,EAAGsK,GAAJ,OACH,qBAEEvE,UAAS,oBAAe3H,EAAOb,cAAgB+M,EAAI,GAAK,UACxDrC,QAAS,kBAAM2T,EAAuBtR,EAAI,IAH5C,SAKE,yBAAQvE,UAAU,YAAY/C,KAAK,IAAnC,SACGsH,EAAI,KALFA,MASX,qBACEvE,UAAU,YACVkC,QAAS,kBACP7J,EAAOb,YAAca,EAAOd,YAAcse,EAAuBxd,EAAOb,YAAc,IAH1F,SAME,yBAAQwI,UAAU,YAAlB,SACE,uBAAM,cAAY,OAAlB,yCAWpB,qBAAIA,UAAU,oDAAd,+BACA,uBAAKA,UAAU,gDAAf,UACE,sBAAKA,UAAU,cAAf,SACE,eAAC,KAAD,CACEvD,KAAM7C,EACN2P,QAAS,CACPoN,YAAY,EACZC,qBAAqB,OAI3B,sBAAK5W,UAAU,aAAf,SACE,sBAAKA,UAAU,6BAAf,SACE,sBAAKA,UAAU,aAAf,SACE,yBAAOA,UAAU,uCAAjB,UACE,iCACE,gCACE,uCACA,6CACA,0DAGJ,iCACGlH,GACCA,EAAWkB,KAAI,SAACC,GAAD,OACb,gCACE,qBAAI+F,UAAU,GAAd,SAAkB,IAAIkE,KAAKjK,EAAET,KAAKwc,iBAClC,sBAAIhW,UAAU,GAAd,gBAAqB/F,EAAEoc,mBACvB,qBAAIrW,UAAU,GAAd,SAAkB/F,EAAE4c,UAHb5c,EAAET,sBAY3B,eAAC,GAAD,CAAiBkG,OAAQA,EAAQC,UAAWA,EAAW+U,aAAca,QCle5DuB,GA3BU,SAAC,GAA2C,IAAzCpX,EAAwC,EAAxCA,OAAQC,EAAgC,EAAhCA,UAAW6R,EAAqB,EAArBA,eAC7C,OACE,+BACE,eAAC,GAAD,CAAe9R,OAAQA,EAAQC,UAAWA,EAA1C,SACE,uBAAKK,UAAU,+HAAf,UACE,eAAC,KAAOgC,MAAR,CAAcjC,GAAG,KAAKC,UAAU,4DAAhC,6BAGA,sBAAKA,UAAU,+BAAf,SACE,qCAAKwR,QAAL,IAAKA,OAAL,EAAKA,EAAgBD,YAGvB,sBAAKvR,UAAU,OAAf,SACE,yBACElG,KAAK,SACLkG,UAAU,4OACVkC,QAAS,kBAAMvC,GAAU,IAH3B,6BC+NGoX,GAxOE,WACf,IAAMja,EAAWwE,cACjB,EAAgGI,aAC9F,SAAC9H,GAAD,MAAY,CACV3B,SAAU2B,EAAM3B,SAASA,SACzBV,WAAYqC,EAAM3B,SAASV,WAC3BY,aAAcyB,EAAM3B,SAASE,aAC7BX,YAAaoC,EAAM3B,SAAST,YAC5BU,aAAc0B,EAAM3B,SAASC,aAC7BE,aAAcwB,EAAM3B,SAASG,aAC7BY,OAAQY,EAAMZ,WARVf,EAAR,EAAQA,SAAUV,EAAlB,EAAkBA,WAAYY,EAA9B,EAA8BA,aAAcX,EAA5C,EAA4CA,YAAaU,EAAzD,EAAyDA,aAAcE,EAAvE,EAAuEA,aAAcY,EAArF,EAAqFA,OAiB/EgK,EAAOC,KAAKC,MAAMhG,aAAaU,QAAQ,SAE7C,EAA4C2D,mBARrB,CACrByT,gBAAiB,GACjBC,gBAAiB,GACjBpd,MAAO,KAKT,mBAAOmf,EAAP,KAAuBC,EAAvB,KACA,EAA4B1V,oBAAS,GAArC,mBAAO7B,EAAP,KAAeC,EAAf,KACA,EAAsC4B,oBAAS,GAA/C,mBAAO2V,EAAP,KAAoBC,EAApB,KACA,EAAsC5V,mBAAS,MAA/C,mBAAO8P,EAAP,KAAoB+F,EAApB,KACA,EAAkD7V,mBAAS,CAAE5J,QAAS,GAAID,KAAM,IAAhF,mBAAO2f,EAAP,KAA0BC,EAA1B,KACAvV,qBAAU,WTOe,IAACtF,EAAM/B,ESN9BoC,GTMwBL,ESNH,CAAEkZ,MAAOqB,GTMAtc,ESNkB2c,ETMzB,uCAAkB,WAAOva,GAAP,eAAAC,EAAA,sEACzBkU,GAAYxU,EAAM/B,GADO,OAExB,OADbsD,EADqC,QAEnCxD,QACNsC,GAhCuBvD,EAgCIyE,EAAIvB,KA/B1B,CACL3C,KAAMxD,GACNiD,aA0ByC,iCA7BnB,IAACA,IA6BkB,OAAlB,0DSLtB,CAACuD,EAAUka,EAAgBK,IAE9B,IAAME,EAA4B,SAACtd,GACjC,MAAwBA,EAAE2H,OAAlBT,EAAR,EAAQA,KAAMU,EAAd,EAAcA,MACdoV,GAAkB,SAACnV,GAAD,mBAAC,eACdA,GADa,mBAEfX,EAAOU,QAIN2V,EAA0B,SAAC9f,GAC/B4f,EAAqB,2BAAKD,GAAN,IAAyB3f,WAazC+f,EAAuB,SAAC3Y,GAC5BhC,ETb0B,SAACgC,EAAIrC,EAAMib,GAAX,8CAAuB,WAAO5a,GAAP,eAAAC,EAAA,sEACjCoU,GAAcrS,GADmB,UAEhC,MAFgC,OAE3CtE,OAF2C,gCAG3ByW,GAAYxU,EAAMib,GAHS,OAG3Cze,EAH2C,OAIjD6D,GAjCyBvD,EAiCIN,EAAQwD,KAhChC,CACL3C,KAAMxD,GACNiD,aA+BA8E,KAAMkB,QAAQ,gCALmC,iCA7BzB,IAAChG,IA6BwB,OAAvB,sDSajBoe,CAAe7Y,EAAI,CAAE6W,MAAOqB,GAAkBK,KAGzD,OACE,iCACE,uBAAKrX,UAAU,8CAAf,UACE,qBAAIA,UAAU,2CAAd,sBACe,eAAdgD,EAAKJ,MACJ,uBAAK5C,UAAU,gBAAf,UACE,wBAAOA,UAAU,+BAAjB,mBACA,0BAAQA,UAAU,eAAemB,KAAK,QAAQc,SAAUsV,EAAxD,UACE,yBAAQ1V,MAAM,GAAGuB,UAAQ,EAAzB,iBAGCpK,GACCA,EAAOgB,KAAI,SAACC,GAAD,OACT,yBAAoB4H,MAAO5H,EAAET,IAA7B,SACGS,EAAEkH,MADQlH,EAAET,cAOzB,uBAAKwG,UAAS,gBAAd,UACE,wBAAOA,UAAU,+BAAjB,kBACA,uBAAKA,UAAU,gDAAf,UACE,wBAAOlG,KAAK,OAAOkG,UAAU,GAAGmB,KAAK,kBAAkBc,SAAUsV,IACjE,uBAAMvX,UAAU,0BAAhB,gBACA,wBAAOlG,KAAK,OAAOkG,UAAU,GAAGmB,KAAK,kBAAkBc,SAAUsV,aAKvE,uBAAKvX,UAAU,gDAAf,UACE,sBAAKA,UAAU,aAAf,SACE,sBAAKA,UAAU,6BAAf,SACE,sBAAKA,UAAU,aAAf,SACE,yBAAOA,UAAU,uCAAjB,UACE,iCACE,gCACE,uCACA,gDACA,sDAGJ,iCACG5H,GACCA,EAAa4B,KAAI,SAACC,GAAD,OACf,gCACE,qBAAI+F,UAAU,GAAd,SAAkB,IAAIkE,KAAKjK,EAAET,KAAKwc,iBAClC,qBAAIhW,UAAU,GAAd,SAAkB/F,EAAE9B,eACpB,qBAAI6H,UAAU,GAAd,SAAkB/F,EAAE4c,UAHb5c,EAAET,mBAWzB,uBAAKwG,UAAU,gBAAf,UACE,uBAAKA,UAAU,yCAAf,UACE,qBAAIA,UAAU,2CAAd,mBACA,iCACE,wBAAOA,UAAU,+BAAjB,6BACA,0BACEA,UAAU,eACV6B,MAAOwV,EAAkB1f,QACzBsK,SAAU,SAAChI,GAAD,OAAOqd,EAAqB,2BAAKD,GAAN,IAAyB1f,QAASsC,EAAE2H,OAAOC,UAHlF,UAKE,wCACA,yCACA,yCACA,yCACA,mDAIN,uBAAK7B,UAAU,0CAAf,UACE,uBAAKA,UAAU,qEAAf,UACE,sBAAKA,UAAU,oCAAf,SACE,uBAAKA,UAAU,2EAAf,UACE,iDACA,sCAAQ5E,KAAKoJ,MAAMrM,WAGvB,sBAAK6H,UAAU,qCAAf,SACE,uBAAKA,UAAU,4EAAf,UACE,iDACA,8BAAK9H,YAIX,uBAAK8H,UAAU,kBAAf,UACE,sBAAKA,UAAU,+BAAf,SACE,sBAAKA,UAAU,QAAf,SACE,yBAAOA,UAAU,uCAAjB,UACE,iCACE,gCACE,uCACA,uCACA,yCACA,+CAGJ,iCACG/H,GACCA,EAAS+B,KAAI,SAACC,GAAD,OACX,gCACE,qBAAI+F,UAAU,GAAd,SAAkB/F,EAAEkH,MAAQ,QAC5B,8BAAK,IAAI+C,KAAKjK,EAAEiO,WAAW8N,iBAC3B,sBAAIhW,UAAU,GAAd,gBAAqB/F,EAAEqX,UACvB,gCACE,yBAAQtR,UAAU,qBAAqBkC,QAAS,kBA1H1EkV,EA0HiGnd,QAzHjGkd,GAAe,IAyHW,SACE,eAACT,GAAA,EAAD,CAAS1W,UAAU,UAEL,gBAAX,OAAJgD,QAAI,IAAJA,OAAA,EAAAA,EAAMJ,OACL,uCACE,yBAAQ5C,UAAU,oBAAoBkC,QAAS,kBA1H7EkV,EA0HwGnd,QAzHxG0F,GAAU,IAyHoB,SACE,eAAC4F,GAAA,EAAD,CAAevF,UAAU,UAE3B,yBAAQA,UAAU,kBAAkBkC,QAAS,kBAAMuV,EAAqBxd,EAAET,MAA1E,SACE,eAAC8L,EAAA,EAAD,CAAWtF,UAAU,kBAdtB/F,EAAET,iBAyBtBvB,EAAS0C,OAAS,GACjB,sBAAKqF,UAAU,2BAAf,SACE,sBAAK,aAAW,0BAAhB,SACE,sBAAIA,UAAU,aAAd,UACE,qBACEA,UAAU,YACVkC,QAAS,kBAAsB,IAAhB1K,GAAqBggB,EAAwBhgB,EAAc,IAF5E,SAIE,yBAAQwI,UAAU,YAAlB,SACE,uBAAM,cAAY,OAAlB,sBAGHqU,MAAM9c,GACJ+c,OACAta,KAAI,SAACC,EAAGsK,GAAJ,OACH,qBAEEvE,UAAS,oBAAexI,IAAgB+M,EAAI,GAAK,UACjDrC,QAAS,kBAAMsV,EAAwBjT,EAAI,IAH7C,SAKE,yBAAQvE,UAAU,YAAY/C,KAAK,IAAnC,SACGsH,EAAI,KALFA,MASX,qBACEvE,UAAU,YACVkC,QAAS,kBAAM1K,EAAcD,GAAcigB,EAAwBhgB,EAAc,IAFnF,SAIE,yBAAQwI,UAAU,YAAlB,SACE,uBAAM,cAAY,OAAlB,yCAWpB,eAAC,GAAD,CAAiBN,OAAQA,EAAQC,UAAWA,EAAW0R,YAAaA,IACpE,eAAC,GAAD,CAAkB3R,OAAQwX,EAAavX,UAAWwX,EAAgB3F,eAAgBH,QC3MzEuG,GA3BgB,WAC7B,MAA4BrW,mBAAS,gBAArC,mBAAOsW,EAAP,KAAeC,EAAf,KACA,OACE,uBAAK9X,UAAU,gBAAf,UACE,uBAAKA,UAAU,uBAAf,UACE,yBACEA,UAAS,UACI,iBAAX6X,EAA4B,4CAA8C,6BADnE,4DAGT3V,QAAS,kBAAM4V,EAAU,iBAJ3B,0BAQA,yBACE9X,UAAS,UACI,aAAX6X,EAAwB,uDAAyD,4BAD1E,4DAGT3V,QAAS,kBAAM4V,EAAU,aAJ3B,yBASU,iBAAXD,EAA4B,eAAC,GAAD,IAAmB,eAAC,GAAD,QCZvCE,GATU,WACvB,OACE,uBAAK/X,UAAU,OAAf,UACE,eAAC,GAAD,IACA,eAAC,GAAD,QCNAgD,GAAOC,KAAKC,MAAMhG,aAAaU,QAAQ,SA+B9Boa,GA5BE,WAAX,OAAJhV,SAAI,IAAJA,QAAA,EAAAA,GAAMJ,MACF,CACE,CACEqV,KAAM,IACNC,OAAO,EACPC,UAAW3D,IAEb,CACEyD,KCdkB,gBDelBE,UAAWJ,KAGA,gBAAX,OAAJ/U,SAAI,IAAJA,QAAA,EAAAA,GAAMJ,MACN,CACE,CACEqV,KAAM,IACNC,OAAO,EACPC,UAAWJ,KAGf,CACE,CACEE,KAAM,IACNC,OAAO,EACPC,UAAW3D,KE4BN4D,GArDD,WACZ,IAAMtb,EAAWwE,cACAsD,cAOjB,OACE,sBAAK5E,UAAU,iEAAf,SACE,uBAAKA,UAAU,kBAAf,UACE,wBAAMqY,SARQ,SAACpe,GlDOK,IAACwC,EkDNzBxC,EAAEqe,iBACFxb,GlDKyBL,EkDLH,CAAE2E,MAAOnH,EAAE2H,OAAO,GAAGC,MAAOyB,SAAUrJ,EAAE2H,OAAO,GAAGC,OlDKhD,uCAAoB,WAAO/E,GAAP,mBAAAC,EAAA,sEAC5BP,GAAaC,GADe,OAE3B,OADbuB,EADwC,QAEtCxD,SACNrE,OAAO6G,SAASC,KAAO,IACjBU,EAAQK,EAAIvB,KAAJ,MACRuG,EAAOhF,EAAIvB,KAAJ,OACb4B,KAAMkB,QAAQ,yBACdzC,EAASF,MACTM,aAAaiL,QAAQ,QAASxK,GAC9BT,aAAaiL,QAAQ,OAAQlF,KAAKmF,UAAUpF,KATA,2CAApB,yDkDCShD,UAAU,iDAAvC,UACE,uBAAKA,UAAU,OAAf,UACE,wBAAOA,UAAU,6CAA6CuY,IAAI,WAAlE,sBAGA,wBACEvY,UAAU,6HACVlB,GAAG,WACHhF,KAAK,OACL0P,YAAY,gBAGhB,uBAAKxJ,UAAU,OAAf,UACE,wBAAOA,UAAU,6CAA6CuY,IAAI,WAAlE,sBAGA,wBACEvY,UAAU,kIACVlB,GAAG,WACHhF,KAAK,WACL0P,YAAY,0BAGhB,uBAAKxJ,UAAU,oCAAf,UACE,yBACEA,UAAU,+GACVlG,KAAK,SAFP,qBAMA,oBAAGkG,UAAU,kFAAkF/C,KAAK,IAApG,oCAKJ,oBAAG+C,UAAU,oCAAb,yDC7COwY,GAJG,WAChB,OAAO,eAAC,GAAD,KCmCMC,GArCA,WACb,OACE,qCACE,sBAAKzY,UAAU,UAAf,SACE,sBACE0Y,MAAM,6BACNC,MAAO,CAAEC,OAAQ,OAAQC,WAAY,OAAQC,QAAS,QAASC,eAAgB,QAC/EC,MAAM,QACNC,OAAO,QACPC,QAAQ,cACRC,oBAAoB,WANtB,SAQE,yBACEC,GAAG,KACHC,GAAG,KACHC,EAAE,KACFC,YAAY,IACZC,OAAO,UACPC,gBAAgB,sCAChBnF,KAAK,OACLoF,cAAc,QARhB,SAUE,mCACEC,cAAc,YACd7f,KAAK,SACL8f,YAAY,aACZC,IAAI,KACJC,SAAS,MACTC,OAAO,+BC4FNC,OA9Gf,WACE,IAAMrjB,EAAY+K,aAAY,SAAC9H,GAAD,OAAWA,EAAMjD,aACvCE,EAAiB6K,aAAY,SAAC9H,GACpC,MAAO,CAAE/C,aAAc+C,EAAM/C,aAAaA,iBADpCA,aAGFiB,EAAiB4J,aAAY,SAAC9H,GAAD,OAAWA,EAAM5C,SAASc,kBACvDgF,EAAWwE,cAWX2Y,EAAiB,uCAAG,8BAAAld,EAAA,yDACxBsP,QAAQC,IAAIzV,EAAc,SACpBqjB,EAAa,IAAIC,gBACfC,EAAWF,EAAXE,OAEHtjB,UAAUC,OALS,yCAKMD,UAAUC,QALhB,gCAQhBsjB,MAAM9jB,GAAU,CACpB+jB,OAAQ,MACRF,WAVoB,iCAYf,GAZe,kCActB/N,QAAQpO,MAAR,MAEAic,EAAWK,QAhBW,kCAkBjB,GAlBiB,0DAAH,qDAqBjBC,EAAY,WAEhB1d,EAAS,CAAEhD,KAAMxD,KACjB+H,KAAMkB,QAAQ,qCACd,IAAMlH,EAAS4K,KAAKC,MAAMhG,aAAaU,QAAQ,WAC/C,GAAIvF,EACF,IADW,IAAD,WACDkM,GACPzH,EAASwC,GAAajH,EAAOkM,KAAKpC,MAAK,SAACnE,GACnB,MAAfA,EAAIxD,QACF+J,IAAMlM,EAAOsC,OAAS,IACxBuC,aAAaC,WAAW,UACxBL,EAAS0C,MACT1C,EAASuJ,GAAYvO,IACrBgF,EAASwJ,WAPR/B,EAAI,EAAGA,EAAIlM,EAAOsC,OAAQ4J,IAAM,EAAhCA,IAgBPkW,EAAa,WACb5jB,IACFiG,EAAS,CAAEhD,KAAMxD,KACjB+H,KAAMqc,QAAQ,uCAIZC,EAAW,uCAAG,gCAAA5d,EAAA,sEACGkd,IADH,UACZrjB,EADY,QAEG,IAAjBC,IAAqC,IAAXD,EAFZ,gBAGhByV,QAAQC,IAAIzV,EAAc,UACpBoD,EAAI,IAAI2gB,MAAM,UACpBzkB,OAAO0kB,cAAc5gB,GALL,2BAMU,IAAjBpD,IAAoC,IAAXD,EANlB,iBAOVqD,EAAI,IAAI2gB,MAAM,WACpBzkB,OAAO0kB,cAAc5gB,GARL,iDAUT,GAVS,4CAAH,qDA8BjB,OAhBA8H,qBAAU,WACR5L,OAAO+S,iBAAiB,UAAWuR,GACnCtkB,OAAO+S,iBAAiB,SAAUsR,GAClC,IAAM1b,EAAKgc,YAAYH,EArEK,KA0E5B,OAAO,WACLxkB,OAAOgT,oBAAoB,UAAWsR,GACtCtkB,OAAOgT,oBAAoB,SAAUqR,GACrCO,cAAcjc,MAGf,CAACjI,IAGF,gBAAC,IAAD,WACGF,GAAa,eAAC,GAAD,IACd,gBAAC,IAAD,WACGqhB,GAAOhe,KAAI,SAACghB,EAAO5V,GAAR,OACV,eAAC,IAAD,CAAO6S,KAAM+C,EAAM/C,KAAMC,MAAO8C,EAAM9C,MAAmB+C,QAAS,eAACD,EAAM7C,UAAP,KAAhB/S,MAEpD,eAAC,IAAD,CAAO6S,KAAK,SAASgD,QAAS,eAAC,GAAD,aCxGvBC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBjZ,MAAK,YAAkD,IAA/CkZ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,kBCMdO,IAASC,OACP,eAAC,IAAMC,WAAP,UACE,eAAC,IAAD,CAAU/jB,MAAOA,GAAjB,SACE,gBAAC,KAAD,CAAagkB,QAAS,eAAC,GAAD,IAAYvf,UAAWA,GAA7C,UACE,eAAC,KAAD,CAAgBwf,SAAS,cACzB,eAACC,GAAD,WAINC,SAASC,eAAe,SAGtB,kBAAmBnlB,WACrBX,OAAO+S,iBAAiB,QAAQ,WAC9BpS,UAAUolB,cACPrH,SAAS,sBACT1S,MAAK,SAACga,GAAD,OAAS9P,QAAQC,IAAI,YAAa6P,EAAIC,UAC3CC,OAAM,SAACC,GAAD,OAASjQ,QAAQC,IAAI,YAAagQ,SAO/CpB,M","file":"static/js/main.693ec8ed.chunk.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\n\nwindow.React = React;\nwindow._ = _;\n","export const actionTypes = {\n  getProducts: 'GET_PRODUCTS',\n  getTags: 'GET_TAGS',\n  getProduct: 'GET_PRODUCT',\n  updateProductsQuantity: 'UPDATE_PRODUCT_QUANTITY',\n  getAllProduct: 'GET_ALL_PRODUCT',\n  createProduct: 'CREATE_PRODUCTS',\n  createTag: 'CREATE_TAG',\n  addCustomerDetails: 'ADD_CUSTOMER_DETAILS',\n  editProduct: 'EDIT_PRODUCTS',\n  createSize: 'CREATE_SIZE',\n  createCategory: 'CREATE_CATEGORY',\n  updateCategory: 'UPDATE_CATEGORY',\n  deleteCategory: 'DELETE_CATEGORY',\n  createStore: 'CREATE_STORE',\n  updateStore: 'UPDATE_STORE',\n  deleteStore: 'DELETE_STORE',\n  createCustomer: 'CREATE_CUSTOMER',\n  getCategories: 'GET_CATEGORIES',\n  getStores: 'GET_STORES',\n  getCustomers: 'GET_CUSTOMERS',\n  getSizes: 'GET_SIZE',\n  createColor: 'CREATE_COLOR',\n  getColors: 'GET_COLOR',\n  login: 'LOGIN_REQUEST',\n  logout: 'LOGOUT_REQUEST',\n  getOrders: 'GET_ORDERS',\n  getOrder: 'GET_ORDER',\n  confirmOrder: 'CONFIRM_ORDER',\n  updateOrder: 'UPDATE_ORDER',\n  createOrder: 'CREATE_ORDER',\n  deleteOrderItem: 'DELETE_ORDER_ITEM',\n  deleteAllOrderItems: 'DELETE__ALL_ORDER_ITEM',\n  filterProducts: 'FILTER_PRODUCTS',\n  filterStats: 'FILTER_STATS',\n  deleteCustomer: 'DELETE_CUSTOMER',\n  updateCustomer: 'UPDATE_CUSTOMER',\n  currentCustomer: 'CURRENT_CUSTOMER',\n  createUser: 'CREATE_USER',\n  createVendor: 'CREATE_VENDOR',\n  createExpense: 'CREATE_EXPENSE',\n  getUsers: 'GET_USERS',\n  getVendors: 'GET_VENDORS',\n  getExpenses: 'GET_EXPENSES',\n  deleteUser: 'DELETE_USER',\n  updateUser: 'UPDATE_USER',\n  deleteVendor: 'DELETE_VENDOR',\n  updateVendor: 'UPDATE_VENDOR',\n  deleteExpense: 'DELETE_EXPENSE',\n  updateExpense: 'UPDATE_EXPENSE',\n  getOnHold: 'ON_HOLD_ORDERS',\n  editOnHold: 'EDIT_ON_HOLD',\n  getProductsStats: 'GET_PRODUCTS_STATS',\n  updateOrderStatus: 'UPDATE_ORDER_STATUS',\n  startLoading: 'START_LOADING',\n  stopLoading: 'STOP_LOADING',\n  deleteCurrentOrderItem: 'DELETE_CURRENT_ORDER_ITEM',\n  setOnline: 'SET_ONLINE_STATUS',\n  setOffline: 'SET_OFFLINE_STATUS',\n};\n","// export const BASE_URL = 'http://localhost:8000/';\nexport const BASE_URL = 'https://konfor-backend.herokuapp.com/';\n","const initialState = {\n  auth: {\n    isSignedIn: false,\n  },\n  isLoading: false,\n  online: { onlineStatus: navigator.onLine },\n  products: {\n    product: {},\n    products: [],\n    allProducts: [],\n    productSizes: [],\n    productColors: [],\n    productsStats: {\n      stats: [],\n      totalPages: null,\n      currentPage: 1,\n      statsFilter: { page: 1, perPage: 10, keyword: '', store: '' },\n    },\n    productsFilter: { page: 1, per_page: 10, category_id: null, keyword: '' },\n    currentPage: 1,\n    totalPages: null,\n  },\n  expenses: {\n    expenses: [],\n    currentPage: 1,\n    totalPages: null,\n    noOfExpenses: 0,\n    totalExpense: 0,\n    expenseStats: [],\n  },\n  orders: {\n    orderStatus: 'CREATE_ORDER',\n    allOrders: [],\n    order: {},\n    onHold: [],\n    currentOrder: [],\n    currentPage: 1,\n    totalPages: null,\n    totalTransactions: 0,\n    totalSales: 0,\n    totalProfit: 0,\n    chartStats: [],\n  },\n  categories: [],\n  stores: [],\n  vendors: [],\n  users: [],\n  customers: {\n    allCustomers: [],\n    currentCustomer: {},\n  },\n};\n\nexport default initialState;\n","import initialState from './initialState';\nimport { actionTypes } from '../constants/actionTypes';\n\nconst updateProductsQuantity = (payload, products) => {\n  for (let product of products) {\n    if (product._id === payload._id) {\n      // for (let i = 0; i < product.skus.length; i++) {\n      //   if (product.skus[i].id === payload.skus.id) {\n      //     product.skus[i] = { ...product.skus[i], quantity: product.skus[i].quantity - payload.quantity };\n      //   }\n      // }\n      product = { ...product, quantity: product.quantity - payload.orderQuantity };\n    }\n  }\n  return products;\n};\n\nexport default (state = initialState.products, action) => {\n  switch (action.type) {\n    case actionTypes.getProducts: {\n      const { currentPage, products, totalPages } = action.payload;\n      return { ...state, products: products, currentPage, totalPages };\n    }\n    case actionTypes.getAllProduct: {\n      return { ...state, allProducts: action.payload };\n    }\n    case actionTypes.getProduct: {\n      return { ...state, product: action.payload };\n    }\n    case actionTypes.getProductsStats: {\n      const { stats, currentPage, totalPages } = action.payload;\n      return {\n        ...state,\n        productsStats: {\n          ...state.productsStats,\n          stats: stats,\n          currentPage: currentPage,\n          totalPages: totalPages,\n        },\n      };\n    }\n    case actionTypes.filterProducts: {\n      return { ...state, productsFilter: action.payload };\n    }\n    case actionTypes.filterStats: {\n      return { ...state, productsStats: { ...state.productsStats, statsFilter: action.payload } };\n    }\n    case actionTypes.createProduct: {\n      return { ...state, products: state.products.concat(action.payload) };\n    }\n    case actionTypes.editProduct: {\n      return {\n        ...state,\n        products: state.products.map((e) => (e._id === action.payload._id ? action.payload : e)),\n      };\n    }\n    case actionTypes.updateProductsQuantity: {\n      for (let items of action.payload) {\n        updateProductsQuantity(items, state.allProducts);\n      }\n      return { ...state, allProducts: state.allProducts };\n    }\n    case actionTypes.createSize: {\n      return { ...state, productSizes: state.productSizes.concat(action.payload) };\n    }\n    case actionTypes.getSizes: {\n      return { ...state, productSizes: action.payload.product_sizes };\n    }\n    case actionTypes.createColor: {\n      return { ...state, productColors: state.productColors.concat(action.payload) };\n    }\n    case actionTypes.getColors: {\n      return { ...state, productColors: action.payload.product_colors };\n    }\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport AuthReducer from './auth.reducer';\nimport ProductsReducer from './products.reducer';\nimport OrdersReducer from './orders.reducer';\nimport categoriesReducer from './categories.reducer';\nimport customersReducer from './customers.reducer';\nimport usersReducer from './users.reducer';\nimport vendorsReducer from './vendors.reducer';\nimport storeReducer from './storeReducer';\nimport loaderReducer from './loader.reducer';\nimport expensesReducer from './expenses.reducer';\nimport onlineReducer from './onlineReducer';\n\nexport default combineReducers({\n  isLoading: loaderReducer,\n  auth: AuthReducer,\n  products: ProductsReducer,\n  orders: OrdersReducer,\n  categories: categoriesReducer,\n  stores: storeReducer,\n  customers: customersReducer,\n  users: usersReducer,\n  vendors: vendorsReducer,\n  expenses: expensesReducer,\n  onlineStatus: onlineReducer,\n\n});\n","import initialState from './initialState';\nimport { actionTypes } from '../constants/actionTypes';\n\nexport default (state = initialState.isLoading, action) => {\n  switch (action.type) {\n    case actionTypes.startLoading: {\n      return (state = true);\n    }\n    case actionTypes.stopLoading: {\n      return (state = false);\n    }\n    default:\n      return state;\n  }\n};\n","import { actionTypes } from '../constants/actionTypes';\nimport initialState from './initialState';\n\nexport default (state = initialState.auth, action) => {\n  switch (action.type) {\n    case actionTypes.login: {\n      return { ...state, isSignedIn: true };\n    }\n    case actionTypes.logout: {\n      return { ...state, isSignedIn: false };\n    }\n    default:\n      return state;\n  }\n};\n","import initialState from './initialState';\nimport { actionTypes } from '../constants/actionTypes';\n\nexport default (state = initialState.orders, action) => {\n  switch (action.type) {\n    case actionTypes.getOrders: {\n      const { orders, currentPage, totalPages, totalTransactions, totalSales, totalProfit, chartStats } =\n        action.payload;\n\n      return {\n        ...state,\n        allOrders: orders,\n        currentPage,\n        totalPages,\n        totalTransactions,\n        totalSales,\n        totalProfit,\n        chartStats,\n      };\n    }\n    case actionTypes.confirmOrder: {\n      return { ...state, allOrders: state.allOrders.concat(action.payload) };\n    }\n    case actionTypes.getOrder: {\n      return { ...state, order: action.payload };\n    }\n    case actionTypes.getOnHold: {\n      return { ...state, onHold: action.payload };\n    }\n    case actionTypes.editOnHold: {\n      return { ...state, currentOrder: action.payload };\n    }\n    case actionTypes.createOrder: {\n      let alreadyExists;\n      let createNew;\n      let updateItem;\n      if (action.status === 'CREATE_ORDER') {\n        alreadyExists = state.currentOrder.find((e) => e._id === action.payload._id);\n        if (alreadyExists) {\n          updateItem =\n            alreadyExists &&\n            state.currentOrder.map((e) =>\n              e._id === action.payload._id ? { ...e, orderQuantity: action.payload.orderQuantity } : e\n            );\n        } else {\n          createNew = !alreadyExists && state.currentOrder.concat(action.payload);\n        }\n      } else {\n        alreadyExists = state.currentOrder.filter((e) => e._id === action.payload._id);\n        if (alreadyExists.length > 0) {\n          if (alreadyExists.length === 1) {\n            const previousDiscountedPrice =\n              (Number(alreadyExists[0].currentPrice) * Number(alreadyExists[0].currentDiscount)) / 100;\n            const currentDiscountedPrice = (Number(action.payload.price) * Number(action.payload.discount)) / 100;\n            if (\n              alreadyExists[0].currentPrice &&\n              alreadyExists[0].currentDiscount &&\n              previousDiscountedPrice !== currentDiscountedPrice\n            ) {\n              createNew = state.currentOrder.concat({\n                ...action.payload,\n                uuid: Math.random(),\n                orderQuantity:\n                  action.payload.orderQuantity > alreadyExists[0].previousQuantity\n                    ? action.payload.orderQuantity - alreadyExists[0].previousQuantity\n                    : alreadyExists[0].previousQuantity - action.payload.orderQuantity,\n              });\n            } else {\n              updateItem = state.currentOrder.map((e) =>\n                e._id === action.payload._id ? { ...e, orderQuantity: action.payload.orderQuantity } : e\n              );\n            }\n          } else {\n            updateItem = state.currentOrder.map((e) =>\n              e.uuid === alreadyExists[alreadyExists.length - 1].uuid\n                ? { ...e, orderQuantity: action.payload.orderQuantity, delete: undefined }\n                : e\n            );\n          }\n        } else {\n          createNew = state.currentOrder.concat({ ...action.payload, uuid: Math.random() });\n        }\n      }\n\n      return { ...state, currentOrder: updateItem ? updateItem : createNew };\n    }\n    case actionTypes.deleteOrderItem: {\n      return {\n        ...state,\n        currentOrder: state.currentOrder.map((e) =>\n          e._id === action.payload._id && e.uuid === action.payload.uuid ? { ...e, delete: true } : e\n        ),\n      };\n    }\n    case actionTypes.deleteCurrentOrderItem: {\n      return {\n        ...state,\n        currentOrder: state.currentOrder.filter((e) => e.uuid !== action.payload.uuid || e._id !== action.payload._id),\n      };\n    }\n    case actionTypes.deleteAllOrderItems: {\n      return { ...state, currentOrder: [] };\n    }\n    case actionTypes.updateOrder: {\n      return { ...state, allOrders: state.allOrders.map((e) => (e._id === action.payload._id ? action.payload : e)) };\n    }\n    case actionTypes.updateOrderStatus: {\n      return { ...state, orderStatus: action.payload };\n    }\n    default:\n      return state;\n  }\n};\n","import initialState from './initialState';\nimport { actionTypes } from '../constants/actionTypes';\n\nexport default (state = initialState.categories, action) => {\n  switch (action.type) {\n    case actionTypes.getCategories: {\n      return (state = action.payload);\n    }\n    case actionTypes.createCategory: {\n      return (state = state.concat(action.payload));\n    }\n    case actionTypes.updateCategory: {\n      return (state = state.map((e) => (e._id === action.payload._id ? action.payload : e)));\n    }\n    case actionTypes.deleteCategory: {\n      return (state = action.payload);\n    }\n    default:\n      return state;\n  }\n};\n","import initialState from './initialState';\nimport { actionTypes } from '../constants/actionTypes';\n\nexport default (state = initialState.stores, action) => {\n  switch (action.type) {\n    case actionTypes.getStores: {\n      return (state = action.payload);\n    }\n    case actionTypes.createStore: {\n      return (state = state.concat(action.payload));\n    }\n    case actionTypes.updateStore: {\n      return (state = state.map((e) => (e._id === action.payload._id ? action.payload : e)));\n    }\n    case actionTypes.deleteStore: {\n      return (state = action.payload);\n    }\n    default:\n      return state;\n  }\n};\n","import initialState from './initialState';\nimport { actionTypes } from '../constants/actionTypes';\n\nexport default (state = initialState.customers, action) => {\n  switch (action.type) {\n    case actionTypes.getCustomers: {\n      return { ...state, allCustomers: action.payload };\n    }\n    case actionTypes.currentCustomer: {\n      return { ...state, currentCustomer: action.payload };\n    }\n    case actionTypes.createCustomer: {\n      return { ...state, allCustomers: state.allCustomers.concat(action.payload), currentCustomer: action.payload };\n    }\n    case actionTypes.deleteCustomer: {\n      return { ...state, allCustomers: action.payload };\n    }\n    case actionTypes.updateCustomer: {\n      return { ...state, allCustomers: state.allCustomers.map((e) => (e._id === action.payload._id ? action.payload : e)) };\n    }\n    default:\n      return state;\n  }\n};\n","import initialState from './initialState';\nimport { actionTypes } from '../constants/actionTypes';\n\nexport default (state = initialState.users, action) => {\n  switch (action.type) {\n    case actionTypes.getUsers: {\n      return (state = action.payload);\n    }\n    case actionTypes.createUser: {\n      return (state = state.concat(action.payload));\n    }\n    case actionTypes.deleteUser: {\n      return (state = action.payload);\n    }\n    case actionTypes.updateUser: {\n      return (state = state.map((e) => (e._id === action.payload._id ? action.payload : e)));\n    }\n    default:\n      return state;\n  }\n};\n","import initialState from './initialState';\nimport { actionTypes } from '../constants/actionTypes';\n\nexport default (state = initialState.vendors, action) => {\n  switch (action.type) {\n    case actionTypes.getVendors: {\n      return (state = action.payload);\n    }\n    case actionTypes.createVendor: {\n      return (state = state.concat(action.payload));\n    }\n    case actionTypes.deleteVendor: {\n      return (state = action.payload);\n    }\n    case actionTypes.updateVendor: {\n      return (state = state.map((e) => (e._id === action.payload._id ? action.payload : e)));\n    }\n    default:\n      return state;\n  }\n};\n","import initialState from './initialState';\nimport { actionTypes } from '../constants/actionTypes';\n\nexport default (state = initialState.expenses, action) => {\n  switch (action.type) {\n    case actionTypes.getExpenses: {\n      const { expenses, currentPage, totalPages, noOfExpenses, totalExpense, expenseStats } = action.payload;\n      return { ...state, expenses, currentPage, totalPages, noOfExpenses, totalExpense, expenseStats };\n    }\n    case actionTypes.createExpense: {\n      return { ...state, expenses: state.expenses.concat(action.payload) };\n    }\n    case actionTypes.updateExpense: {\n      return { ...state, expenses: state.expenses.map((e) => (e._id === action.payload._id ? action.payload : e)) };\n    }\n    case actionTypes.deleteExpense: {\n      const { expenses, currentPage, totalPages, noOfExpenses, totalExpense, expenseStats } = action.payload;\n\n      return { ...state, expenses, currentPage, totalPages, noOfExpenses, totalExpense, expenseStats };\n    }\n    default:\n      return state;\n  }\n};\n","import initialState from './initialState';\nimport { actionTypes } from '../constants/actionTypes';\n\nexport default (state = initialState.online, action) => {\n  switch (action.type) {\n    case actionTypes.setOnline: {\n      return { ...state, onlineStatus: true };\n    }\n    case actionTypes.setOffline: {\n      return { ...state, onlineStatus: false };\n    }\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers/root.reducer';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst persistConfig = {\n  key: 'app',\n  storage: storage,\n  whitelist: ['products', 'customers', 'categories'],\n};\n\nconst pReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = createStore(pReducer, composeEnhancer(applyMiddleware(thunk)));\n\nconst persistor = persistStore(store);\n\nexport { persistor, store };\n","import instance from './request';\n\nexport function loginRequest(data) {\n  return instance.post(`/user/sign_in`, data);\n}\n","import { toast } from 'react-toastify';\nimport { loginRequest } from '../api/auth';\nimport { actionTypes } from '../constants/actionTypes';\n\nexport const loginAction = () => {\n  return {\n    type: actionTypes.login,\n  };\n};\n\nconst logoutAction = () => {\n  return {\n    type: actionTypes.logout,\n  };\n};\n\nexport const LoginRequest = (data, navigate) => async (dispatch) => {\n  const res = await loginRequest(data);\n  if (res.status === 200) {\n    window.location.href = '/';\n    const token = res.data['token'];\n    const user = res.data['result'];\n    toast.success('LoggedIn Successfully');\n    dispatch(loginAction());\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n  }\n};\n\nexport const LogoutRequest = () => async (dispatch) => {\n  window.location.href = '/login';\n  dispatch(logoutAction());\n  localStorage.removeItem('token');\n  localStorage.removeItem('user');\n};\n","import axios from 'axios';\nimport { BASE_URL } from '../constants/apiUrl';\nimport { store } from '../config/store';\nimport { loginAction, LogoutRequest } from '../actions/auth.actions';\nimport { toast } from 'react-toastify';\nimport { actionTypes } from '../constants/actionTypes';\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n});\n\ninstance.interceptors.request.use((req) => {\n  const token = localStorage.getItem('token');\n  req.headers.Accept = 'application/json';\n  req.headers['authorization'] = token;\n  req.headers['Content-Type'] = 'application/json';\n  store.dispatch({ type: actionTypes.startLoading });\n\n  return req;\n});\n\ninstance.interceptors.response.use(\n  (res) => {\n    store.dispatch(loginAction());\n    store.dispatch({ type: actionTypes.stopLoading });\n    return res;\n  },\n  (error) => {\n    if (!error.request?.responseURL?.includes('sign_in') && error.toString().includes(401)) {\n      store.dispatch(LogoutRequest());\n    }\n    store.dispatch({ type: actionTypes.stopLoading });\n    toast.error(error.response?.data.message);\n    return Promise.reject(error.response?.data);\n  }\n);\n\nexport default instance;\n","import instance from './request';\n\nexport function getOrders(data, filter) {\n  return instance.get(`/order?page=${filter.page}&&per_page=${filter.perPage}`, {\n    params: data,\n  });\n}\n\nexport function getOrder(id) {\n  return instance.get(`/order/${id}`);\n}\n\nexport function getOnHoldOrders() {\n  return instance.get(`/order/onHold`);\n}\n\nexport function createOrder(data) {\n  return instance.post('/order', data);\n}\n\nexport function updateOrder(data, id) {\n  return instance.patch(`/order/${id}`, data);\n}\n\nexport function deleteOrder(id) {\n  return instance.delete(`/order/${id}`);\n}\n\n","import { actionTypes } from '../constants/actionTypes';\nimport { createOrder, deleteOrder, getOnHoldOrders, getOrder, getOrders, updateOrder } from '../api/order';\nimport { toast } from 'react-toastify';\n\nexport const createOrderAction = (status, payload) => {\n  return {\n    type: actionTypes.createOrder,\n    payload,\n    status,\n  };\n};\n\nexport const updateOrderAction = (payload) => {\n  return {\n    type: actionTypes.updateOrder,\n    payload,\n  };\n};\n\nconst getOrdersAction = (payload) => {\n  return {\n    type: actionTypes.getOrders,\n    payload,\n  };\n};\n\nexport const getOrderAction = (payload) => {\n  return {\n    type: actionTypes.getOrder,\n    payload,\n  };\n};\n\nexport const deleteOrderItemAction = (payload) => {\n  return {\n    type: actionTypes.deleteOrderItem,\n    payload,\n  };\n};\n\nexport const deleteCurrentOrderItemAction = (payload) => {\n  return {\n    type: actionTypes.deleteCurrentOrderItem,\n    payload,\n  };\n};\n\nexport const deleteAllOrderItemsAction = () => {\n  return {\n    type: actionTypes.deleteAllOrderItems,\n  };\n};\n\nexport const updateOrderStatusAction = (payload) => {\n  return {\n    type: actionTypes.updateOrderStatus,\n    payload,\n  };\n};\n\nconst confirmOrderAction = (payload) => {\n  return {\n    type: actionTypes.confirmOrder,\n    payload,\n  };\n};\n\nconst getOnHoldOrdersAction = (payload) => {\n  return {\n    type: actionTypes.getOnHold,\n    payload,\n  };\n};\n\nexport const editOnHoldAction = (payload) => {\n  return {\n    type: actionTypes.editOnHold,\n    payload,\n  };\n};\n\nexport const ConfirmOrder = (data) => async (dispatch) => {\n  const res = await createOrder(data);\n  if (res.status === 201) {\n    dispatch(confirmOrderAction(res.data));\n    toast.success('Order Created Successfully');\n  }\n  return res;\n};\n\nexport const GetOnHold = (data) => async (dispatch) => {\n  const res = await getOnHoldOrders(data);\n  if (res.status === 200) {\n    dispatch(getOnHoldOrdersAction(res.data));\n  }\n  return res;\n};\n\nexport const UpdateOrder = (data, id) => async (dispatch) => {\n  const res = await updateOrder(data, id);\n  if (res.status === 200) {\n    dispatch(updateOrderAction(res.data));\n    toast.success('Order Updated Successfully');\n  }\n  return res;\n};\n\nexport const GetOrders = (data, filter) => async (dispatch) => {\n  const res = await getOrders(data, filter);\n  if (res.status === 200) {\n    dispatch(getOrdersAction(res.data));\n  }\n  return res;\n};\n\nexport const GetOrder = (id) => async (dispatch) => {\n  const res = await getOrder(id);\n  if (res.status === 200) {\n    dispatch(getOrderAction(res.data));\n  }\n  return res;\n};\n\nexport const DeleteOrder = (id) => async (dispatch) => {\n  const res = await deleteOrder(id);\n  if (res.status === 204) {\n    toast.success('Order Deleted Successfully');\n  }\n  return res;\n};\n","import { Dialog, Transition } from '@headlessui/react';\nimport React, { Fragment } from 'react';\nimport './style.scss';\n\nconst ModalTemplate = ({ isOpen, setIsOpen, children }) => {\n  return (\n    <Transition appear show={isOpen}>\n      <Dialog\n        as='div'\n        className={`fixed inset-0 z-10  ${isOpen && 'w-screen h-screen bg-black bg-opacity-40'} `}\n        onClose={() => setIsOpen(false)}\n      >\n        <div className='min-h-screen px-4 text-center'>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0'\n            enterTo='opacity-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100'\n            leaveTo='opacity-0'\n          >\n            <Dialog.Overlay className='fixed inset-0' />\n          </Transition.Child>\n\n          <span className='xl:inline-block inline h-screen align-middle' aria-hidden='true'>\n            &#8203;\n          </span>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0 scale-95'\n            enterTo='opacity-100 scale-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100 scale-100'\n            leaveTo='opacity-0 scale-95'\n          >\n            {children}\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n};\n\nexport default ModalTemplate;\n","import instance from './request';\n\nexport function createCustomer(data) {\n  return instance.post('/customers', data);\n}\n\nexport function getCustomers() {\n  return instance.get('/customers');\n}\n\nexport function deleteCustomer(id) {\n  return instance.delete(`/customers/${id}`);\n}\n\nexport function updateCustomer(id, data) {\n  return instance.patch(`/customers/${id}`, data);\n}\n","import { toast } from 'react-toastify';\nimport { createCustomer, deleteCustomer, getCustomers, updateCustomer } from '../api/customers';\nimport { actionTypes } from '../constants/actionTypes';\n\nconst createCustomerAction = (payload) => {\n  return {\n    type: actionTypes.createCustomer,\n    payload,\n  };\n};\n\nconst getCustomersAction = (payload) => {\n  return {\n    type: actionTypes.getCustomers,\n    payload,\n  };\n};\n\nconst deleteCustomerAction = (payload) => {\n  return {\n    type: actionTypes.deleteCustomer,\n    payload,\n  };\n};\n\nconst updateCustomerAction = (payload) => {\n  return {\n    type: actionTypes.updateCustomer,\n    payload,\n  };\n};\n\nexport const currentCustomerAction = (payload) => {\n  return {\n    type: actionTypes.currentCustomer,\n    payload,\n  };\n};\n\nexport const CreateCustomer = (data) => async (dispatch) => {\n  const res = await createCustomer(data);\n  if (res.status === 201) {\n    dispatch(createCustomerAction(res.data));\n    toast.success('Customer Created Successfully');\n  }\n  return res;\n};\n\nexport const GetCustomers = () => async (dispatch) => {\n  const res = await getCustomers();\n  if (res.status === 200) {\n    dispatch(getCustomersAction(res.data));\n  }\n  return res;\n};\n\nexport const DeleteCustomer = (id) => async (dispatch) => {\n  const res = await deleteCustomer(id);\n  if (res.status === 200) {\n    const customers = await getCustomers();\n    dispatch(deleteCustomerAction(customers.data));\n    toast.success('Customer Deleted Successfully');\n  }\n};\n\nexport const UpdateCustomer = (id, data) => async (dispatch) => {\n  const res = await updateCustomer(id, data);\n  if (res.status === 200) {\n    dispatch(updateCustomerAction(res.data));\n    toast.success('Customer Updated Successfully');\n  }\n};\n","import { Dialog } from '@headlessui/react';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ModalTemplate from '.';\nimport { CreateCustomer, currentCustomerAction, UpdateCustomer } from '../../actions/customers.actions';\n\nconst CustomerModal = ({ isOpen, setIsOpen, customerData }) => {\n  const initState = {\n    name: '',\n    email: '',\n    phoneNo: '',\n  };\n  const dispatch = useDispatch();\n  const [customerDetails, setCustomerDetails] = useState(initState);\n  const onlineStatus = useSelector((state) => state.onlineStatus.onlineStatus);\n\n  const handleCustomerFields = (e) => {\n    const { name, value } = e.target;\n    setCustomerDetails((pre) => ({\n      ...pre,\n      [name]: value,\n    }));\n  };\n\n  useEffect(() => {\n    if (customerData) {\n      setCustomerDetails(customerData);\n    }\n  }, [customerData]);\n\n  const handleCreateCustomer = () => {\n    if (onlineStatus) {\n      if (customerData) {\n        const { _id, name, email, phoneNo } = customerDetails;\n        dispatch(UpdateCustomer(_id, { name, email, phoneNo })).then(() => {\n          setIsOpen(false);\n          setCustomerDetails(initState);\n        });\n      } else {\n        dispatch(CreateCustomer(customerDetails)).then(() => {\n          setIsOpen(false);\n          setCustomerDetails(initState);\n        });\n      }\n    } else {\n      dispatch(currentCustomerAction(customerDetails));\n      setIsOpen(false);\n      setCustomerDetails(initState);\n    }\n  };\n\n  return (\n    <div>\n      <ModalTemplate isOpen={isOpen} setIsOpen={setIsOpen}>\n        <div className='inline-block w-96 my-8 overflow-hidden text-left align-middle transition-all transform bg-white shadow-2xl rounded-2xl p-6'>\n          <Dialog.Title as='h3' className='text-lg font-medium leading-6 text-gray-900 border-b pb-2'>\n            {customerData ? 'Update' : 'Add'} Customer\n          </Dialog.Title>\n          <div className='mt-10'>\n            <div className='flex flex-col my-2'>\n              <label className='mb-1 text-gray-500 font-bold'>Customer Name</label>\n              <input\n                className='input-field'\n                type='text'\n                name='name'\n                onChange={handleCustomerFields}\n                value={customerDetails.name}\n              />\n            </div>\n            <div className='flex flex-col my-2'>\n              <label className='mb-1 text-gray-500 font-bold'>Customer Email</label>\n              <input\n                className='input-field'\n                name='email'\n                type='email'\n                onChange={handleCustomerFields}\n                value={customerDetails.email}\n              />\n            </div>\n            <div className='flex flex-col my-2'>\n              <label className='mb-1 text-gray-500 font-bold'>Customer Phone number</label>\n              <input\n                className='input-field'\n                name='phone_no'\n                type='text'\n                onChange={handleCustomerFields}\n                value={customerDetails.phoneNo}\n              />\n            </div>\n          </div>\n\n          <div className='mt-4'>\n            <button\n              type='button'\n              onClick={handleCreateCustomer}\n              className='inline-flex justify-center px-4 py-2 text-sm font-medium text-blue-900 bg-blue-100 border border-transparent rounded-md hover:bg-blue-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500'\n            >\n              Submit\n            </button>\n            <button\n              type='button'\n              className='inline-flex justify-center px-4 py-2 text-sm font-medium text-red-900 bg-red-100 border border-transparent rounded-md hover:bg-red-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500 ml-3'\n              onClick={() => setIsOpen(false)}\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </ModalTemplate>\n    </div>\n  );\n};\n\nexport default CustomerModal;\n","import instance from './request';\n\nexport function createUser(data) {\n  return instance.post('/user/add', data);\n}\n\nexport function getUsers() {\n  return instance.get('/user');\n}\n\nexport function deleteUser(id) {\n  return instance.delete(`/user/delete/${id}`);\n}\n\nexport function updateUser(id, data) {\n  return instance.put(`/user/update/${id}`, data);\n}\n","import { toast } from 'react-toastify';\nimport { createUser, deleteUser, getUsers, updateUser } from '../api/user';\nimport { actionTypes } from '../constants/actionTypes';\n\nconst createUserAction = (payload) => {\n  return {\n    type: actionTypes.createUser,\n    payload,\n  };\n};\n\nconst getUsersAction = (payload) => {\n  return {\n    type: actionTypes.getUsers,\n    payload,\n  };\n};\n\nconst deleteUserAction = (payload) => {\n  return {\n    type: actionTypes.deleteUser,\n    payload,\n  };\n};\n\nconst updateUserAction = (payload) => {\n  return {\n    type: actionTypes.updateUser,\n    payload,\n  };\n};\n\nexport const CreateUser = (data) => async (dispatch) => {\n  const res = await createUser(data);\n  if (res.status === 200) {\n    dispatch(createUserAction(res.data));\n    toast.success('User Created Successfully');\n  }\n  return res;\n};\n\nexport const GetUsers = () => async (dispatch) => {\n  const res = await getUsers();\n  if (res.status === 200) {\n    dispatch(getUsersAction(res.data));\n  }\n  return res;\n};\n\nexport const DeleteUser = (id) => async (dispatch) => {\n  const res = await deleteUser(id);\n  if (res.status === 200) {\n    const users = await getUsers();\n    dispatch(deleteUserAction(users.data));\n    toast.success('User Deleted Successfully');\n  }\n};\n\nexport const UpdateUser = (id, data) => async (dispatch) => {\n  const res = await updateUser(id, data);\n  if (res.status === 200) {\n    dispatch(updateUserAction(res.data));\n    toast.success('User Updated Successfully');\n  }\n};\n","import { Dialog } from '@headlessui/react';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ModalTemplate from '.';\nimport { CreateUser, UpdateUser } from '../../actions/users.actions';\n\nconst AddUserModal = ({ isOpen, setIsOpen, userData }) => {\n  const initState = {\n    name: '',\n    email: '',\n    store: null,\n    role: '',\n    phone_no: '',\n  };\n  const dispatch = useDispatch();\n  const [userDetails, setUserDetails] = useState(initState);\n  const stores = useSelector((state) => state.stores);\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  const handleUserFields = (e) => {\n    const { name, value } = e.target;\n    setUserDetails((pre) => ({\n      ...pre,\n      [name]: value,\n    }));\n  };\n\n  useEffect(() => {\n    if (userData) {\n      setUserDetails(userData);\n    }\n  }, [userData]);\n\n  const handleCreateUser = () => {\n    if (userData) {\n      const { id, name, email, role, password, store } = userDetails;\n      dispatch(UpdateUser(id, { name, email, password, role, store })).then(() => {\n        setIsOpen(false);\n        setUserDetails(initState);\n      });\n    } else {\n      dispatch(CreateUser(userDetails)).then(() => {\n        setIsOpen(false);\n        setUserDetails(initState);\n      });\n    }\n  };\n\n  return (\n    <div>\n      <ModalTemplate isOpen={isOpen} setIsOpen={setIsOpen}>\n        <div className='inline-block w-96 my-8 overflow-hidden text-left align-middle transition-all transform bg-white shadow-2xl rounded-2xl p-6'>\n          <Dialog.Title as='h3' className='text-lg font-medium leading-6 text-gray-900 border-b pb-2'>\n            {userData ? 'Update' : 'Add'} User\n          </Dialog.Title>\n          <div className='mt-10'>\n            {user?.role === 'superAdmin' && (\n              <div className='flex flex-col my-2'>\n                <label className='mb-1 text-gray-500 font-bold'>Stores</label>\n                <select className='input-select' name='store' onChange={handleUserFields} value={userDetails.store}>\n                  <option value='' selected disabled>\n                    Select user store\n                  </option>\n                  {stores &&\n                    stores.map((e) => (\n                      <option key={e._id} value={e._id}>\n                        {e.name}\n                      </option>\n                    ))}\n                </select>\n              </div>\n            )}\n            <div className='flex flex-col my-2'>\n              <label className='mb-1 text-gray-500 font-bold'>Name</label>\n              <input\n                className='input-field'\n                type='text'\n                name='name'\n                onChange={handleUserFields}\n                value={userDetails.name}\n              />\n            </div>\n            <div className='flex flex-col my-2'>\n              <label className='mb-1 text-gray-500 font-bold'>Email</label>\n              <input\n                className='input-field'\n                name='email'\n                type='email'\n                onChange={handleUserFields}\n                value={userDetails.email}\n              />\n            </div>\n            {!userData && (\n              <div className='flex flex-col my-2'>\n                <label className='mb-1 text-gray-500 font-bold'>Password</label>\n                <input\n                  className='input-field'\n                  name='password'\n                  type='password'\n                  onChange={handleUserFields}\n                  value={userDetails.password}\n                />\n              </div>\n            )}\n            <div className='flex flex-col my-2'>\n              <label className='mb-1 text-gray-500 font-bold'>Role</label>\n              <select className='input-select' name='role' onChange={handleUserFields} value={userDetails.role}>\n                <option value='' selected disabled>\n                  Select user role\n                </option>\n                <option value='admin'>Admin</option>\n                <option value='cashier'>Cashier</option>\n                <option value='salesman'>Sales Man</option>\n              </select>\n            </div>\n          </div>\n          <div className='mt-4'>\n            <button\n              type='button'\n              onClick={handleCreateUser}\n              className='inline-flex justify-center px-4 py-2 text-sm font-medium text-blue-900 bg-blue-100 border border-transparent rounded-md hover:bg-blue-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500'\n            >\n              Submit\n            </button>\n            <button\n              type='button'\n              className='inline-flex justify-center px-4 py-2 text-sm font-medium text-red-900 bg-red-100 border border-transparent rounded-md hover:bg-red-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500 ml-3'\n              onClick={() => setIsOpen(false)}\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </ModalTemplate>\n    </div>\n  );\n};\n\nexport default AddUserModal;\n","import { Dialog } from '@headlessui/react';\nimport ModalTemplate from '.';\nimport { useReactToPrint } from 'react-to-print';\nimport React, { useRef } from 'react';\nimport './style.scss';\n\nconst InvoiceModal = ({ isOpen, setIsOpen, invoiceData }) => {\n  const invoiceRef = useRef();\n\n  const printOrder = useReactToPrint({\n    content: () => invoiceRef.current,\n    copyStyles: true,\n  });\n\n  return (\n    <div>\n      <ModalTemplate isOpen={isOpen} setIsOpen={setIsOpen}>\n        <div className='inline-block w-auto p-6 my-8 text-left align-middle transition-all transform bg-white shadow-2xl rounded-2xl overflow-y-auto'>\n          <Dialog.Title as='h3' className='text-lg font-medium leading-6 text-gray-900 border-b pb-2'>\n            Invoice\n          </Dialog.Title>\n          <div className='h-50v overflow-y-auto main'>\n            <div className='ticket bg-white border-2 border-dotted text-sm' ref={invoiceRef}>\n              <h1 className='text-center font-extrabold text-3xl mt-2'>Konfor</h1>\n              <div className='flex px-3 my-2'>\n                <div>\n                  <div>\n                    <address className='text-sm'>\n                      <span className='font-bold'> Order Date : </span>\n                      {new Date().toLocaleDateString()}\n                    </address>\n                  </div>\n                  <div>\n                    <address className='text-sm'>\n                      <span className='font-bold'> Invoice# : </span>\n                      {invoiceData?.invoiceNo || 'N/A'}\n                    </address>\n                  </div>\n                </div>\n                <div>\n                  <div>\n                    <address className='text-sm'>\n                      <span className='font-bold'>Customer Name : </span>\n                      {invoiceData?.customer?.name ? invoiceData.customer.name : 'N/A'}\n                    </address>\n                  </div>\n                  <div>\n                    <address className='text-sm'>\n                      <span className='font-bold'>Customer Phone : </span>\n                      {invoiceData?.customer?.phone_no ? invoiceData.customer.phone_no : 'N/A'}\n                    </address>\n                  </div>\n                </div>\n              </div>\n              <table className='mx-auto text-sm w-full invoice-table'>\n                <thead>\n                  <tr className=''>\n                    <th className='py-1 text-left'>Name</th>\n                    <th className='py-1 text-left'>Qty</th>\n                    <th className='py-1 text-left'>$$</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {invoiceData.orderItems &&\n                    invoiceData.orderItems.map((e, i) => (\n                      <tr className='text-gray-600 invoice-data' key={e.id}>\n                        <td className='py-1 text-left'>{e.name}</td>\n                        <td className='py-1 text-left'>{e.orderQuantity}</td>\n                        <td className='py-1 text-left'>\n                          {Math.round((e.price - (e.price * e.discount) / 100) * e.orderQuantity)}\n                        </td>\n                      </tr>\n                    ))}\n                  <tr className='mx-auto invoice-total'>\n                    <td></td>\n                    <td>TOTAL</td>\n                    <td>{Math.round(invoiceData.total)}</td>\n                  </tr>\n                </tbody>\n              </table>\n              <p className='text-center mb-20'>Thanks for your purchase!</p>\n            </div>\n          </div>\n\n          <div className='mt-4'>\n            <button\n              type='button'\n              onClick={printOrder}\n              className='inline-flex justify-center px-4 py-2 text-sm font-medium text-blue-900 bg-blue-100 border border-transparent rounded-md hover:bg-blue-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500'\n            >\n              Print\n            </button>\n            <button\n              type='button'\n              className='inline-flex justify-center px-4 py-2 text-sm font-medium text-red-900 bg-red-100 border border-transparent rounded-md hover:bg-red-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500 ml-3'\n              onClick={() => setIsOpen(false)}\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </ModalTemplate>\n    </div>\n  );\n};\n\nexport default InvoiceModal;\n","import { Dialog } from '@headlessui/react';\nimport { PencilAltIcon, TrashIcon } from '@heroicons/react/solid';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport ModalTemplate from '.';\nimport { currentCustomerAction } from '../../actions/customers.actions';\nimport {\n  DeleteOrder,\n  editOnHoldAction,\n  GetOnHold,\n  getOrderAction,\n  updateOrderStatusAction,\n} from '../../actions/order.actions';\n\nconst OnHoldOrdersModal = ({ isOpen, setIsOpen }) => {\n  const dispatch = useDispatch();\n  const { orders } = useSelector((state) => ({\n    vendors: state.vendors,\n    orders: state.orders.onHold,\n  }));\n  const navigate = useNavigate();\n\n  const manipulateProducts = (data) => {\n    const result = data.map((e) => ({\n      ...e.product,\n      uuid: Math.random(),\n      currentDiscount: e.currentDiscount,\n      currentPrice: e.currentPrice,\n      orderQuantity: e.quantity,\n      previousQuantity: e.quantity,\n      previousPaid: e.paidPrice,\n    }));\n    return result;\n  };\n  const OrderUpdateHandler = (data) => {\n    dispatch(getOrderAction(data));\n    dispatch(editOnHoldAction(manipulateProducts(data.orderItems)));\n    dispatch(currentCustomerAction(data?.customer));\n    dispatch(updateOrderStatusAction('UPDATE_ORDER'));\n    navigate('/', { state: { salesman: data?.salesman._id } });\n  };\n\n  useEffect(() => {\n    dispatch(GetOnHold());\n  }, [dispatch]);\n\n  const orderDeleteHandler = (id) => {\n    dispatch(DeleteOrder(id)).then(() => {\n      dispatch(GetOnHold());\n    });\n  };\n\n  return (\n    <div>\n      <ModalTemplate isOpen={isOpen} setIsOpen={setIsOpen}>\n        <div className='inline-block w-auto p-6 my-8 text-left align-middle transition-all transform bg-white shadow-2xl rounded-2xl'>\n          <Dialog.Title as='h3' className='text-lg font-medium leading-6 text-gray-900 border-b pb-2'>\n            OnHold Orders\n          </Dialog.Title>\n          <div className='mt-10 h-30v overflow-y-auto'>\n            <table className='table-fixed product-table border-2'>\n              <thead className='sticky top-0 z-10 bg-white'>\n                <tr>\n                  <th>Item</th>\n                  <th>Customer Name</th>\n                  <th>Total</th>\n                  <th>Cashier</th>\n                  <th>Salesman</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {orders &&\n                  orders.map((e, index) => (\n                    <tr key={e._id}>\n                      <td>{index + 1}</td>\n                      <td>{e?.customer?.name || 'N/A'}</td>\n                      <td>{e.total}</td>\n                      <td>{e.cashier?.name ? e.cashier?.name : 'N/A'}</td>\n                      <td>{e.salesman?.name ? e.salesman.name : 'N/A'}</td>\n                      <td className='flex justify-center items-center'>\n                        <button className='btn-sm-red' onClick={() => orderDeleteHandler(e._id)}>\n                          <TrashIcon className='h-4' />\n                        </button>\n                        <button className='btn-sm-yellow ml-3' onClick={() => OrderUpdateHandler(e)}>\n                          <PencilAltIcon className='h-4' />\n                        </button>\n                      </td>\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n          </div>\n\n          <div className='mt-4 flex items-end h-auto'>\n            <button\n              type='button'\n              className='inline-flex justify-center px-4 py-2 text-sm font-medium text-blue-900 bg-blue-100 border border-transparent rounded-md hover:bg-blue-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500'\n              onClick={() => setIsOpen(false)}\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </ModalTemplate>\n    </div>\n  );\n};\n\nexport default OnHoldOrdersModal;\n","import { Dialog } from '@headlessui/react';\nimport { useState } from 'react';\nimport ModalTemplate from '.';\n\nconst PaymentModal = ({ isOpen, setIsOpen, totalPrice, confirmOrder }) => {\n  const [payment, setPayment] = useState('');\n  return (\n    <div>\n      <ModalTemplate isOpen={isOpen} setIsOpen={setIsOpen}>\n        <div className='inline-block w-auto p-6 my-8 text-left align-middle transition-all transform bg-white shadow-2xl rounded-2xl'>\n          <Dialog.Title as='h3' className='text-lg font-medium leading-6 text-gray-900 border-b pb-2'>\n            Payment\n          </Dialog.Title>\n          <div className='mt-10 h-30v overflow-y-auto'>\n            <div className='flex flex-col my-2'>\n              <label className='mb-1 text-gray-500 font-bold'>Total</label>\n              <input className='input-field' type='text' disabled value={totalPrice} />\n            </div>\n            <div className='flex flex-col my-2'>\n              <label className='mb-1 text-gray-500 font-bold'>Payment</label>\n              <input className='input-field' type='text' onChange={(e) => setPayment(e.target.value)} value={payment} />\n            </div>\n            {Number(payment) > totalPrice && (\n              <div className='w-full p-2 text-center text-2xl text-green-900 bg-green-100 rounded mt-10'>\n                Change Rs {Math.round(totalPrice - Number(payment))}\n              </div>\n            )}\n          </div>\n          <div className='mt-4 space-x-2 flex items-end h-auto'>\n            {Number(payment) >= totalPrice && (\n              <button\n                type='button'\n                onClick={() => {\n                  confirmOrder(Math.round(totalPrice - Number(payment)));\n                  setPayment('');\n                }}\n                className='inline-flex justify-center px-4 py-2 text-sm font-medium text-blue-900 bg-blue-100 border border-transparent rounded-md hover:bg-blue-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500'\n              >\n                Confirm Order\n              </button>\n            )}\n            <button\n              type='button'\n              className='inline-flex justify-center px-4 py-2 text-sm font-medium text-red-900 bg-red-100 border border-transparent rounded-md hover:bg-red-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500'\n              onClick={() => setIsOpen(false)}\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </ModalTemplate>\n    </div>\n  );\n};\n\nexport default PaymentModal;\n","import instance from './request';\n\nexport function getProducts(data) {\n  return instance.get(\n    `/products?page=${data.page}&&category_id=${data.category_id}&&search_keyword=${data.keyword}&&per_page=${data.per_page}`\n  );\n}\n\nexport function getAllProducts() {\n  return instance.get(`/products/all`);\n}\n\nexport function getProduct(id) {\n  return instance.get(`/api/products/${id}`);\n}\n\nexport function getProductsStats(data) {\n  return instance.get(\n    `/productsStats?search_keyword=${data.keyword}&&page=${data.page}&&per_page=${data.perPage}&&store=${data.store}`\n  );\n}\n\nexport function createProduct(data) {\n  return instance.post('/products', data);\n}\n\nexport function deleteProduct(id) {\n  return instance.delete(`/products/${id}`);\n}\n\nexport function updateProduct(id, body) {\n  return instance.patch(`/products/${id}`, body);\n}\n","import { toast } from 'react-toastify';\nimport {\n  createProduct,\n  deleteProduct,\n  getAllProducts,\n  getProduct,\n  getProducts,\n  getProductsStats,\n  updateProduct,\n} from '../api/products';\nimport { actionTypes } from '../constants/actionTypes';\n\nconst getProductsAction = (payload) => {\n  return {\n    type: actionTypes.getProducts,\n    payload,\n  };\n};\n\nconst getAllProductsAction = (payload) => {\n  return {\n    type: actionTypes.getAllProduct,\n    payload,\n  };\n};\n\nconst getProductsStatsAction = (payload) => {\n  return {\n    type: actionTypes.getProductsStats,\n    payload,\n  };\n};\n\nconst getProductAction = (payload) => {\n  return {\n    type: actionTypes.getProduct,\n    payload,\n  };\n};\n\nconst createProductAction = (payload) => {\n  return {\n    type: actionTypes.createProduct,\n    payload,\n  };\n};\n\nconst editProductAction = (payload) => {\n  return {\n    type: actionTypes.editProduct,\n    payload,\n  };\n};\n\nexport const filterProductsAction = (payload) => {\n  return {\n    type: actionTypes.filterProducts,\n    payload,\n  };\n};\n\nexport const filterProductsStatsAction = (payload) => {\n  return {\n    type: actionTypes.filterStats,\n    payload,\n  };\n};\n\nexport const updateProductsQuantityAction = (payload) => {\n  return {\n    type: actionTypes.updateProductsQuantity,\n    payload,\n  };\n};\n\nexport const GetProducts = (data) => async (dispatch) => {\n  const res = await getProducts(data);\n  if (res.status === 200) {\n    dispatch(getProductsAction(res?.data));\n  }\n};\n\nexport const GetProductsStats = (data) => async (dispatch) => {\n  const res = await getProductsStats(data);\n  if (res.status === 200) {\n    dispatch(getProductsStatsAction(res.data));\n  }\n};\n\nexport const GetProduct = (id) => async (dispatch) => {\n  const res = await getProduct(id);\n  if (res.status === 200) {\n    dispatch(getProductAction(res.data));\n  }\n};\n\nexport const GetAllProducts = (data) => async (dispatch) => {\n  const res = await getAllProducts(data);\n  if (res.status === 200) {\n    dispatch(getAllProductsAction(res.data));\n  }\n\n  return res;\n};\n\nexport const CreateProduct = (data) => async (dispatch) => {\n  const res = await createProduct(data);\n  if (res.status === 201) {\n    dispatch(createProductAction(res.data));\n    toast.success('Product Created Successfully');\n  }\n  return res;\n};\n\nexport const DeleteProduct = (id) => async (dispatch) => {\n  const res = await deleteProduct(id);\n  if (res.status === 204) {\n    toast.success('Product Deleted Successfully');\n  }\n  return res;\n};\n\nexport const EditProduct = (id, data) => async (dispatch) => {\n  const res = await updateProduct(id, data);\n  if (res.status === 200) {\n    dispatch(editProductAction(res.data));\n    toast.success('Product Updated Successfully');\n  }\n  return res;\n};\n","import React from 'react';\n\nconst OrderInvoice = React.forwardRef(({ invoiceData }, ref) => {\n  return (\n    <div className='h-50v overflow-y-auto main'>\n      <div className='ticket bg-white border-2 border-dotted text-sm' ref={ref}>\n        <h1 className='text-center font-extrabold text-3xl mt-2'>Konfor</h1>\n        <div className='flex px-3 my-2'>\n          <div>\n            <div>\n              <address className='text-sm'>\n                <span className='font-bold'> Order Date : </span>\n                {new Date().toLocaleDateString()}\n              </address>\n            </div>\n            <div>\n              <address className='text-sm'>\n                <span className='font-bold'> Invoice# : </span>\n                {invoiceData?.invoiceNo || 'N/A'}\n              </address>\n            </div>\n          </div>\n          <div>\n            <div>\n              <address className='text-sm'>\n                <span className='font-bold'>Customer Name : </span>\n                {invoiceData?.customer?.name ? invoiceData.customer.name : 'N/A'}\n              </address>\n            </div>\n            <div>\n              <address className='text-sm'>\n                <span className='font-bold'>Customer Phone : </span>\n                {invoiceData?.customer?.phone_no ? invoiceData.customer.phone_no : 'N/A'}\n              </address>\n            </div>\n          </div>\n        </div>\n        <table className='mx-auto text-sm w-full invoice-table'>\n          <thead>\n            <tr className=''>\n              <th className='py-1 text-left'>Name</th>\n              <th className='py-1 text-left'>Qty</th>\n              <th className='py-1 text-left'>$$</th>\n            </tr>\n          </thead>\n          <tbody>\n            {invoiceData.orderItems &&\n              invoiceData.orderItems.map((e, i) => (\n                <tr className='text-gray-600 invoice-data' key={e.id}>\n                  <td className='py-1 text-left'>{e.name}</td>\n                  <td className='py-1 text-left'>{e.orderQuantity}</td>\n                  <td className='py-1 text-left'>\n                    {Math.round((e.price - (e.price * e.discount) / 100) * e.orderQuantity)}\n                  </td>\n                </tr>\n              ))}\n            <tr className='mx-auto invoice-total'>\n              <td></td>\n              <td>TOTAL</td>\n              <td>{Math.round(invoiceData.total)}</td>\n            </tr>\n          </tbody>\n        </table>\n        <p className='text-center mb-20'>Thanks for your purchase!</p>\n      </div>\n    </div>\n  );\n});\n\nexport default OrderInvoice;\n","import React, { useEffect, useRef, useState } from 'react';\nimport {\n  CheckIcon,\n  PlusIcon,\n  XIcon,\n  BanIcon,\n  HandIcon,\n  CashIcon,\n  PrinterIcon,\n  TrashIcon,\n  ViewBoardsIcon,\n  ArrowSmLeftIcon,\n  ArrowSmRightIcon,\n} from '@heroicons/react/solid';\nimport { useSelector } from 'react-redux';\nimport {\n  ConfirmOrder,\n  createOrderAction,\n  deleteAllOrderItemsAction,\n  deleteCurrentOrderItemAction,\n  deleteOrderItemAction,\n  editOnHoldAction,\n  getOrderAction,\n  UpdateOrder,\n  updateOrderStatusAction,\n} from '../../actions/order.actions';\nimport { useDispatch } from 'react-redux';\nimport CustomerModal from '../Modals/AddCustomerModal';\nimport { GetCustomers, currentCustomerAction } from '../../actions/customers.actions';\nimport AddUserModal from '../Modals/AddUser';\nimport InvoiceModal from '../Modals/InvoiceModal';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport OnHoldOrdersModal from '../Modals/OnholdModal';\nimport PaymentModal from '../Modals/PaymentModal';\nimport Select from 'react-select';\nimport { GetProducts, updateProductsQuantityAction } from '../../actions/products.actions';\nimport { useReactToPrint } from 'react-to-print';\nimport OrderInvoice from './Invoice';\n\nconst CreateOrder = () => {\n  const dispatch = useDispatch();\n  const {\n    currentOrder,\n    currentCustomer,\n    customers,\n    users,\n    order,\n    orderStatus,\n    productsFilter,\n    onHold,\n    products,\n    onlineStatus,\n  } = useSelector((state) => ({\n    currentOrder: state.orders.currentOrder,\n    order: state.orders.order,\n    orderStatus: state.orders.orderStatus,\n    currentCustomer: state.customers.currentCustomer,\n    customers: state.customers.allCustomers,\n    users: state.users.filter((e) => e.role === 'salesman'),\n    productsFilter: state.products.productsFilter,\n    products: state.products.products,\n    onHold: state.orders.onHold,\n    onlineStatus: state.onlineStatus.onlineStatus,\n  }));\n  const [currentSalesman, setCurrentSalesman] = useState('');\n  const [openOnHold, setOpenOnHold] = useState(false);\n  const [openPaymentModal, setOpenPaymentModal] = useState(false);\n  const [invoiceNo, setInvoiceNo] = useState(null);\n  const [holdIndex, setHoldIndex] = useState(null);\n  const { state } = useLocation();\n  const leftBtnRef = useRef();\n  const rightBtnRef = useRef();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    dispatch(GetCustomers());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (state?.salesman) {\n      setCurrentSalesman(state.salesman);\n    }\n  }, [state]);\n\n  const totalPrice =\n    currentOrder &&\n    currentOrder\n      .filter((e) => !e.delete)\n      .reduce((pre, next) => {\n        const previousDiscountedPrice = (Number(next.currentPrice) * Number(next.currentDiscount)) / 100;\n        const currentDiscountedPrice = (Number(next.price) * Number(next.discount)) / 100;\n        if (next.currentPrice && next.currentDiscount && previousDiscountedPrice !== currentDiscountedPrice) {\n          return (\n            pre +\n            (Number(next.currentPrice) - (Number(next.currentPrice) * Number(next.currentDiscount)) / 100) *\n              Number(next.orderQuantity)\n          );\n        }\n        return (\n          pre + (Number(next.price) - (Number(next.price) * Number(next.discount)) / 100) * Number(next.orderQuantity)\n        );\n      }, 0);\n  const totalRetailPrice =\n    currentOrder &&\n    currentOrder\n      .filter((e) => !e.delete)\n      .reduce((pre, next) => {\n        return pre + Number(next.retailPrice) * Number(next.orderQuantity);\n      }, 0);\n\n  const handleAfterOrder = () => {\n    if (orderStatus === 'UPDATE_ORDER') {\n      dispatch(updateOrderStatusAction('CREATE_ORDER'));\n    }\n    dispatch(deleteAllOrderItemsAction());\n    if (onlineStatus) {\n      dispatch(GetProducts(productsFilter));\n    }\n    dispatch(currentCustomerAction({}));\n    setOpenPaymentModal(false);\n    setCurrentSalesman('');\n    if (state && state?.salesman) {\n      navigate('/');\n    }\n  };\n\n  const invoiceRef = useRef();\n\n  const printOrder = useReactToPrint({\n    content: () => invoiceRef.current,\n    copyStyles: true,\n  });\n\n  const handleOrderCreate = (status, change) => {\n    const invoice = Math.random();\n    setInvoiceNo(invoice);\n    if (orderStatus === 'UPDATE_ORDER') {\n      dispatch(\n        UpdateOrder(\n          {\n            status: status,\n            salesman: currentSalesman || undefined,\n            customer: currentCustomer?._id || undefined,\n            change: change ? change : undefined,\n            orderItems: currentOrder.map((e) => {\n              const previousDiscountedPrice = (Number(e.currentPrice) * Number(e.currentDiscount)) / 100;\n              const currentDiscountedPrice = (Number(e.price) * Number(e.discount)) / 100;\n\n              return {\n                id: e?.orderItemId ? e.orderItemId : undefined,\n                product: e._id,\n                quantity: e.orderQuantity,\n                previousQuantity: e.previousQuantity,\n                previousPaid: e.previousPaid,\n                paidPrice:\n                  e.currentPrice && e.currentDiscount && previousDiscountedPrice !== currentDiscountedPrice\n                    ? Math.round(\n                        (Number(e.currentPrice) - (Number(e.currentPrice) * Number(e.currentDiscount)) / 100) *\n                          Number(e.orderQuantity)\n                      )\n                    : Math.round((e.price - (e.price * e.discount) / 100) * e.orderQuantity),\n                currentPrice: e?.currentPrice ? e.currentPrice : e.price,\n                currentDiscount: e.currentDiscount ? e.currentDiscount : e.discount,\n                delete: e?.delete ? true : undefined,\n              };\n            }),\n            total: totalPrice,\n            totalRetailPrice,\n          },\n          order._id\n        )\n      ).then((res) => {\n        if (res.status === 200) {\n          setInvoiceNo(res.data.invoiceNo);\n          printOrder();\n          handleAfterOrder();\n        }\n      });\n    } else {\n      if (onlineStatus) {\n        dispatch(\n          ConfirmOrder({\n            status: status,\n            salesman: currentSalesman || undefined,\n            customer: currentCustomer?._id || undefined,\n            change: change ? change : undefined,\n            orderItems: currentOrder.map((e) => ({\n              id: e?.orderItemId ? e.orderItemId : undefined,\n              product: e._id,\n              quantity: e.orderQuantity,\n              currentDiscount: e.discount,\n              paidPrice: Math.round((e.price - (e.price * e.discount) / 100) * e.orderQuantity),\n              currentPrice: e.price,\n            })),\n            total: totalPrice,\n            totalRetailPrice,\n          })\n        ).then((res) => {\n          if (res.status === 201) {\n            setInvoiceNo(res.data.invoiceNo);\n            printOrder();\n            handleAfterOrder();\n          }\n        });\n      } else {\n        dispatch(updateProductsQuantityAction(currentOrder));\n        const existing = localStorage.getItem('orders');\n        const data = existing\n          ? [\n              ...JSON.parse(existing),\n              {\n                status: status,\n                salesman: currentSalesman || undefined,\n                customer: currentCustomer?._id || undefined,\n                customerAttributes: !onlineStatus ? currentCustomer : undefined,\n                change: change ? change : undefined,\n                createdAt: new Date(),\n                orderItems: currentOrder.map((e) => ({\n                  id: e?.orderItemId ? e.orderItemId : undefined,\n                  product: e._id,\n                  quantity: e.orderQuantity,\n                  currentDiscount: e.discount,\n                  paidPrice: Math.round((e.price - (e.price * e.discount) / 100) * e.orderQuantity),\n                  currentPrice: e.price,\n                })),\n                total: totalPrice,\n                totalRetailPrice,\n              },\n            ]\n          : [\n              {\n                status: status,\n                salesman: currentSalesman || undefined,\n                customer: currentCustomer?._id || undefined,\n                customerAttributes: !onlineStatus ? currentCustomer : undefined,\n                createdAt: new Date(),\n                change: change ? change : undefined,\n                orderItems: currentOrder.map((e) => ({\n                  id: e?.orderItemId ? e.orderItemId : undefined,\n                  product: e._id,\n                  quantity: e.orderQuantity,\n                  currentDiscount: e.discount,\n                  paidPrice: Math.round((e.price - (e.price * e.discount) / 100) * e.orderQuantity),\n                  currentPrice: e.price,\n                })),\n                total: totalPrice,\n                totalRetailPrice,\n              },\n            ];\n        localStorage.setItem('orders', JSON.stringify(data));\n        handleAfterOrder();\n      }\n    }\n  };\n\n  const handleOrderConfirmation = (change) => {\n    handleOrderCreate('paid', change);\n  };\n  const [openCustomerModal, setOpenCustomerModal] = useState(false);\n  const [openUserModal, setOpenUserModal] = useState(false);\n  const [openInvoiceModal, setOpenInvoiceModal] = useState(false);\n\n  const handleQuantityChange = (item, e) => {\n    const { value } = e.target;\n    dispatch(createOrderAction(orderStatus, { ...item, orderQuantity: Number(value) }));\n  };\n\n  const handleCustomerChange = (e) => {\n    if (e?.value) {\n      const { value } = e;\n      const customer = customers.find((e) => e._id === value);\n      dispatch(currentCustomerAction(customer));\n    } else {\n      dispatch(currentCustomerAction({}));\n    }\n  };\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  const handleOnHoldOrders = () => {\n    handleOrderCreate('onHold');\n  };\n\n  const customerOptions = customers.map((e) => ({ label: e.name, value: e._id }));\n  const salesmanOptions = users.map((e) => ({ label: e.name, value: e._id }));\n\n  const manipulateProducts = (data) => {\n    const result = data.map((e) => ({\n      ...e.product,\n      uuid: Math.random(),\n      currentDiscount: e.currentDiscount,\n      currentPrice: e.currentPrice,\n      orderQuantity: e.quantity,\n      previousQuantity: e.quantity,\n      previousPaid: e.paidPrice,\n    }));\n    return result;\n  };\n\n  const OrderUpdateHandler = (data) => {\n    dispatch(getOrderAction(data));\n    dispatch(editOnHoldAction(manipulateProducts(data.orderItems)));\n    dispatch(currentCustomerAction(data?.customer));\n    dispatch(updateOrderStatusAction('UPDATE_ORDER'));\n    navigate('/', { state: { salesman: data?.salesman._id } });\n  };\n\n  const handleKeyBindings = (event) => {\n    const key = event.key;\n    if (event.ctrlKey && key === 'ArrowRight') {\n      rightBtnRef.current.click();\n    } else if (event.ctrlKey && key === 'ArrowLeft') {\n      leftBtnRef.current.click();\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', (e) => handleKeyBindings(e));\n\n    return () => {\n      window.removeEventListener('keydown', (e) => handleKeyBindings(e));\n    };\n  }, []);\n\n  const preHold = () => {\n    if (onHold.length !== 0 && holdIndex !== 0 && holdIndex !== null) {\n      const index = (holdIndex - 1) % onHold.length;\n      setHoldIndex(index);\n      OrderUpdateHandler(onHold[index]);\n    } else {\n      const index = onHold.length - 1;\n      setHoldIndex(onHold.length - 1);\n      OrderUpdateHandler(onHold[index]);\n    }\n  };\n\n  const nextHold = () => {\n    if (onHold.length !== 0 && holdIndex !== null) {\n      const index = (holdIndex + 1) % onHold.length;\n      setHoldIndex(index);\n      OrderUpdateHandler(onHold[index]);\n    } else {\n      setHoldIndex(0);\n      OrderUpdateHandler(onHold[0]);\n    }\n  };\n\n  const handleProductsSearch = (e) => {\n    const { value } = e.target;\n\n    const product = products.find((s) => s.barcode === value);\n\n    if (product?._id) {\n      const alreadyExists = currentOrder.filter((e) => e._id === product._id);\n      if (alreadyExists.length > 0) {\n        dispatch(\n          createOrderAction(orderStatus, {\n            ...product,\n            orderQuantity:\n              Number(alreadyExists[alreadyExists.length - 1].orderQuantity) < Number(product.quantity)\n                ? alreadyExists[alreadyExists.length - 1].orderQuantity + 1\n                : alreadyExists[alreadyExists.length - 1].orderQuantity,\n          })\n        );\n      } else {\n        dispatch(createOrderAction(orderStatus, { ...product, orderQuantity: 1 }));\n      }\n      setTimeout(() => (e.target.value = ''), 1000);\n    }\n  };\n\n  return (\n    <div className='bg-white rounded-sm mt-6'>\n      <div className='p-10 flex flex-col'>\n        <div className='flex mb-2 space-x-2'>\n          <button\n            className='flex align-middle btn-sm-blue'\n            disabled={!onHold?.length}\n            onClick={preHold}\n            ref={leftBtnRef}\n          >\n            <ArrowSmLeftIcon className='mr-2 h-6' />\n          </button>\n          <button className='flex align-middle btn-blue' onClick={() => setOpenOnHold(true)}>\n            <ViewBoardsIcon className='mr-2 h-6' />\n            OnHold Orders\n          </button>\n          <button\n            className='flex align-middle btn-sm-blue'\n            disabled={!onHold?.length}\n            onClick={nextHold}\n            ref={rightBtnRef}\n          >\n            <ArrowSmRightIcon className='mr-2 h-6' />\n          </button>\n        </div>\n        <div className='flex mb-2'>\n          <Select\n            options={customerOptions}\n            placeholder='Select Customer...'\n            value={currentCustomer?._id ? customerOptions.find((e) => e.value === currentCustomer._id) : null}\n            isClearable\n            onChange={handleCustomerChange}\n          />\n          <button className='btn-sm-green mx-4' onClick={() => setOpenCustomerModal(true)}>\n            <PlusIcon className='h-6' />\n          </button>\n        </div>\n        <div className='flex mb-4'>\n          <Select\n            options={salesmanOptions}\n            placeholder='Select Salesman...'\n            isClearable\n            value={currentSalesman !== '' ? salesmanOptions.find((e) => e.value === currentSalesman) : null}\n            onChange={(e) => (e?.value ? setCurrentSalesman(e.value) : setCurrentSalesman(''))}\n          />\n          {(user?.role === 'superAdmin' || user?.role === 'admin') && (\n            <button className='btn-sm-green mx-4' onClick={() => setOpenUserModal(true)}>\n              <PlusIcon className='h-6' />\n            </button>\n          )}\n        </div>\n        <div className='flex align-middle'>\n          <input\n            type='search'\n            placeholder='Scan barcode or type the number then hit enter'\n            className='input-field w-11/12'\n            onChange={handleProductsSearch}\n          />\n          <button className='btn-sm-gray'>\n            <CheckIcon className='h-6' />\n          </button>\n        </div>\n        <div className='h-60v overflow-y-auto my-6'>\n          <div className='my-4 h-4/6'>\n            <table className='table-fixed  order-table'>\n              <thead>\n                <tr>\n                  <th className='w-1/2'>#</th>\n                  <th className='w-1/3'>Item</th>\n                  <th className='w-1/2'>Qty</th>\n                  <th className='w-1/2'>Price</th>\n                  <th className='w-1/2'>\n                    <button className='btn-sm-red' onClick={() => dispatch(deleteAllOrderItemsAction())}>\n                      <XIcon className='h-4' />\n                    </button>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {currentOrder &&\n                  currentOrder\n                    .filter((e) => !e.delete)\n                    .map((e, index) => (\n                      <tr key={e.id}>\n                        <td className=''>{index + 1}</td>\n                        <td className=''>{e.name}</td>\n                        <td className=''>\n                          <input\n                            type='number'\n                            className='input-field w-20'\n                            min='1'\n                            max={e.quantity}\n                            value={e.orderQuantity}\n                            onChange={(value) => handleQuantityChange(e, value)}\n                          />\n                        </td>\n                        <td className=''>{e?.currentPrice || e.price}</td>\n                        <td className=''>\n                          <button\n                            className='btn-sm-red'\n                            onClick={() =>\n                              orderStatus === 'UPDATE_ORDER' && e.currentPrice\n                                ? dispatch(deleteOrderItemAction(e))\n                                : dispatch(deleteCurrentOrderItemAction(e))\n                            }\n                          >\n                            <TrashIcon className='h-4' />\n                          </button>\n                        </td>\n                      </tr>\n                    ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        <div className='w-full bg-green-100 p-3 text-center rounded-sm'>\n          <h1 className='text-green-900 font-extrabold'>Grand Total : Rs {Math.round(totalPrice)}</h1>\n        </div>\n        <div className='flex justify-between my-4'>\n          <button className='btn-blue' onClick={() => setOpenInvoiceModal(true)} disabled={currentOrder.length === 0}>\n            <PrinterIcon className='h-6' />\n          </button>\n          <button className='btn-red flex' onClick={handleAfterOrder}>\n            <BanIcon className='h-6 mr-2' />\n            Cancel\n          </button>\n          <button className='btn-parrot flex' onClick={handleOnHoldOrders}>\n            <HandIcon className='h-6 mr-2' />\n            Hold\n          </button>\n          <button\n            className='btn-green flex'\n            disabled={currentOrder.length === 0}\n            onClick={() => setOpenPaymentModal(true)}\n          >\n            <CashIcon className='h-6 mr-2' />\n            Pay\n          </button>\n        </div>\n      </div>\n      <div className='hidden'>\n        <OrderInvoice\n          ref={invoiceRef}\n          invoiceData={{\n            orderItems: currentOrder.filter((e) => !e.delete),\n            customer: currentCustomer,\n            total: totalPrice,\n            invoiceNo: invoiceNo,\n          }}\n        />\n      </div>\n      <CustomerModal isOpen={openCustomerModal} setIsOpen={setOpenCustomerModal} />\n      <AddUserModal isOpen={openUserModal} setIsOpen={setOpenUserModal} />\n      <OnHoldOrdersModal isOpen={openOnHold} setIsOpen={setOpenOnHold} />\n      <InvoiceModal\n        isOpen={openInvoiceModal}\n        setIsOpen={setOpenInvoiceModal}\n        invoiceData={{\n          orderItems: currentOrder.filter((e) => !e.delete),\n          customer: currentCustomer,\n          total: totalPrice,\n          invoiceNo: invoiceNo,\n        }}\n      />\n      <PaymentModal\n        isOpen={openPaymentModal}\n        setIsOpen={setOpenPaymentModal}\n        confirmOrder={handleOrderConfirmation}\n        totalPrice={totalPrice}\n      />\n    </div>\n  );\n};\n\nexport default CreateOrder;\n","export const appConstants = {\n  TIME_OUT: 1000,\n};\n","import instance from './request';\n\nexport function createCategory(data) {\n  return instance.post('/categories', data);\n}\n\nexport function getCategories() {\n  return instance.get('/categories');\n}\n\nexport function updateCategory(id, data) {\n  return instance.patch(`/categories/${id}`, data);\n}\n\nexport function deleteCategory(id) {\n  return instance.delete(`/categories/${id}`);\n}\n","import { toast } from 'react-toastify';\nimport { createCategory, deleteCategory, getCategories, updateCategory } from '../api/category';\nimport { actionTypes } from '../constants/actionTypes';\n\nconst createCategoryAction = (payload) => {\n  return {\n    type: actionTypes.createCategory,\n    payload,\n  };\n};\n\nconst updateCategoryAction = (payload) => {\n  return {\n    type: actionTypes.updateCategory,\n    payload,\n  };\n};\n\nconst deleteCategoryAction = (payload) => {\n  return {\n    type: actionTypes.deleteCategory,\n    payload,\n  };\n};\n\nconst getCategoriesAction = (payload) => {\n  return {\n    type: actionTypes.getCategories,\n    payload,\n  };\n};\n\nexport const CreateCategory = (data) => async (dispatch) => {\n  const res = await createCategory(data);\n  if (res.status === 200) {\n    dispatch(createCategoryAction(res.data));\n    toast.success('Category Created Successfully');\n  }\n};\n\nexport const GetCategories = () => async (dispatch) => {\n  const res = await getCategories();\n  if (res.status === 200) {\n    dispatch(getCategoriesAction(res?.data));\n  }\n};\n\nexport const DeleteCategory = (id) => async (dispatch) => {\n  const res = await deleteCategory(id);\n  if (res.status === 200) {\n    const categories = await getCategories();\n    dispatch(deleteCategoryAction(categories.data));\n    toast.success('Category Deleted Successfully');\n  }\n};\n\nexport const UpdateCategory = (id, data) => async (dispatch) => {\n  const res = await updateCategory(id, data);\n  if (res.status === 200) {\n    dispatch(updateCategoryAction(res.data));\n    toast.success('Category Updated Successfully');\n  }\n};\n","import { Dialog } from '@headlessui/react';\nimport { useEffect, useRef } from 'react';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport ModalTemplate from '.';\nimport { CreateProduct, EditProduct } from '../../actions/products.actions';\nimport { GetCategories } from '../../actions/categories.actions';\n\nconst AddProducts = ({ isOpen, setIsOpen, productData }) => {\n  const initState = {\n    imgUrl: null,\n    category_id: null,\n    barcode: '',\n    store: '',\n    vendor_id: null,\n    discount: null,\n    name: '',\n    size: '',\n    color: '',\n    price: '',\n    retailPrice: '',\n  };\n  const [productDetails, setProductDetails] = useState(initState);\n\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  const fileInputRef = useRef(null);\n  const dispatch = useDispatch();\n  const { categories, vendors, stores } = useSelector((state) => ({\n    categories: state.categories,\n    vendors: state.vendors,\n    stores: state.stores,\n  }));\n\n  useEffect(() => {\n    if (productData && productData._id) {\n      const {\n        imgUrl,\n        name,\n        category_id,\n        vendor_id,\n        discount,\n        store,\n        size,\n        color,\n        price,\n        quantity,\n        retailPrice,\n        barcode,\n      } = productData;\n\n      setProductDetails({\n        ...initState,\n        imgUrl,\n        name,\n        category_id,\n        vendor_id,\n        store: store?._id ? store._id : '',\n        discount,\n        size,\n        color,\n        quantity,\n        retailPrice,\n        barcode,\n        price,\n      });\n    }\n  }, [productData]);\n\n  const handleAddProduct = (e) => {\n    const { name, value } = e.target;\n    if (['price', 'quantity', 'discount'].includes(name)) {\n      setProductDetails((preState) => ({\n        ...preState,\n        [name]: parseInt(value),\n      }));\n    } else {\n      setProductDetails((preState) => ({ ...preState, [name]: value }));\n    }\n  };\n\n  const handleProductImage = (e) => {\n    var reader = new FileReader();\n    reader.readAsDataURL(e.target.files[0]);\n    reader.onload = function () {\n      setProductDetails((pre) => ({ ...pre, imgUrl: reader.result }));\n    };\n    reader.onerror = function (error) {\n      console.log('Error: ', error);\n    };\n  };\n\n  useEffect(() => {\n    dispatch(GetCategories());\n  }, [dispatch]);\n\n  const createProductHandler = () => {\n    if (productData?._id) {\n      dispatch(EditProduct(productData._id, productDetails)).then(() => {\n        setIsOpen(false);\n        setProductDetails(initState);\n      });\n    } else {\n      dispatch(CreateProduct(productDetails)).then((res) => {\n        setIsOpen(false);\n        setProductDetails(initState);\n      });\n    }\n  };\n\n  const btnStyle = (color) => {\n    return `inline-flex justify-center px-4 py-2 text-sm font-medium text-${color}-900 bg-${color}-100 border border-transparent rounded-md hover:bg-${color}-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-${color}-500 ml-3`;\n  };\n\n  return (\n    <div>\n      <ModalTemplate isOpen={isOpen} setIsOpen={setIsOpen}>\n        <div className='inline-block w-96 my-8 text-left align-middle transition-all transform bg-white shadow-2xl rounded-2xl p-6'>\n          <Dialog.Title as='h3' className='text-lg font-medium leading-6 text-gray-900 border-b pb-2'>\n            {productData ? 'Update' : 'Add'} Product\n          </Dialog.Title>\n          <div className='mt-10 h-70v overflow-y-auto productsAdd'>\n            {user?.role === 'superAdmin' && (\n              <div className='flex flex-col my-2'>\n                <label className='mb-1 text-gray-500 font-bold'>Stores</label>\n                <select className='input-select' name='store' onChange={handleAddProduct} value={productDetails.store}>\n                  <option value='' selected disabled>\n                    Select user store\n                  </option>\n                  {stores &&\n                    stores.map((e) => (\n                      <option key={e._id} value={e._id}>\n                        {e.name}\n                      </option>\n                    ))}\n                </select>\n              </div>\n            )}\n            <div\n              className='w-32 h-32 border-2 rounded-full flex text-center items-center mx-auto cursor-pointer'\n              onClick={() => fileInputRef.current.click()}\n            >\n              <input type='file' className='hidden' accept='image/*' ref={fileInputRef} onChange={handleProductImage} />\n              {productDetails.imgUrl ? (\n                <img src={productDetails.imgUrl} alt='product' className='w-full h-full object-cover rounded-full' />\n              ) : (\n                <p className='p-2 text-sm text-gray-500'>Select Product Image</p>\n              )}\n            </div>\n            <div>\n              <div className='flex flex-col my-2'>\n                <label className='mb-1 text-gray-500 font-bold'>Category</label>\n                <select\n                  className='input-select w-full'\n                  name='category_id'\n                  onChange={handleAddProduct}\n                  value={productDetails.category_id}\n                >\n                  <option value='' selected disabled>\n                    Select Category\n                  </option>\n                  {categories.length > 0 && categories.map((e) => <option key={e._id}>{e.name}</option>)}\n                </select>\n              </div>\n              <div className='flex flex-col my-2'>\n                <label className='mb-1 text-gray-500 font-bold'>Vendors</label>\n                <select\n                  className='input-select w-full'\n                  name='vendor_id'\n                  onChange={handleAddProduct}\n                  value={productDetails.vendor_id}\n                >\n                  <option value='' selected disabled>\n                    Select Vendor\n                  </option>\n                  {vendors &&\n                    vendors.map((e) => (\n                      <option key={e._id} data-value={e._id}>\n                        {e.name}\n                      </option>\n                    ))}\n                </select>\n              </div>\n              <div className='flex flex-col my-2'>\n                <label className='mb-1 text-gray-500 font-bold'>Product Name</label>\n                <input\n                  className='input-field'\n                  type='text'\n                  name='name'\n                  value={productDetails.name}\n                  onChange={handleAddProduct}\n                />\n              </div>\n              <div className='flex flex-col my-2'>\n                <label className='mb-1 text-gray-500 font-bold'>Barcode</label>\n                <input\n                  className='input-field'\n                  type='text'\n                  name='barcode'\n                  value={productDetails.barcode}\n                  onChange={handleAddProduct}\n                />\n              </div>\n              <div className='flex flex-col my-2'>\n                <label className='mb-1 text-gray-500 font-bold'>Discount</label>\n                <input\n                  className='input-field'\n                  name='discount'\n                  type='number'\n                  value={productDetails.discount}\n                  onChange={handleAddProduct}\n                />\n              </div>\n            </div>\n            <hr></hr>\n            <div className='flex flex-col my-2'>\n              <label className='mb-1 text-gray-500 font-bold'>Price</label>\n              <input\n                className='input-field'\n                name='price'\n                type='number'\n                value={productDetails.price}\n                onChange={handleAddProduct}\n              />\n            </div>\n            <div className='flex flex-col my-2'>\n              <label className='mb-1 text-gray-500 font-bold'>Retail Price</label>\n              <input\n                className='input-field'\n                name='retailPrice'\n                type='number'\n                value={productDetails.retailPrice}\n                onChange={handleAddProduct}\n              />\n            </div>\n            <div className='flex flex-col my-2'>\n              <label className='mb-1 text-gray-500 font-bold'>Quantity</label>\n              <input\n                className='input-field'\n                name='quantity'\n                type='number'\n                value={productDetails.quantity}\n                onChange={handleAddProduct}\n              />\n            </div>\n            <div className='flex flex-col my-2'>\n              <label className='mb-1 text-gray-500 font-bold'>Size</label>\n              <input className='input-field' name='size' value={productDetails.size} onChange={handleAddProduct} />\n            </div>\n            <div className='flex flex-col my-2'>\n              <label className='mb-1 text-gray-500 font-bold'>Color</label>\n              <input className='input-field' name='color' value={productDetails.color} onChange={handleAddProduct} />\n            </div>\n          </div>\n          <div className='mt-4'>\n            <button type='button' className={btnStyle('blue')} onClick={createProductHandler}>\n              Submit\n            </button>\n            <button type='button' className={btnStyle('red')} onClick={() => setIsOpen(false)}>\n              Close\n            </button>\n          </div>\n        </div>\n      </ModalTemplate>\n    </div>\n  );\n};\n\nexport default AddProducts;\n","import { Dialog } from '@headlessui/react';\nimport { PencilAltIcon, TrashIcon } from '@heroicons/react/solid';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ModalTemplate from '.';\nimport { DeleteProduct, GetAllProducts, GetProduct, GetProducts } from '../../actions/products.actions';\nimport { appConstants } from '../../constants/appConstants';\nimport AddProducts from './AddProductModal';\nimport Barcode from 'react-barcode';\n\nconst ProductsModal = ({ isOpen, setIsOpen }) => {\n  const dispatch = useDispatch();\n  const { product, categories, productsFilter, vendors, allProducts } = useSelector((state) => ({\n    product: state.products.allProducts,\n    productsFilter: state.products.productsFilter,\n    categories: state.categories,\n    vendors: state.vendors,\n  }));\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  const [openAddProduct, setOpenAddProduct] = useState(false);\n  const [currentProduct, setCurrentProduct] = useState({});\n  const { products } = useSelector((state) => ({\n    products: state.products.allProducts,\n  }));\n  useEffect(() => {\n    dispatch(GetProducts(productsFilter));\n    dispatch(GetAllProducts());\n  }, [dispatch, productsFilter]);\n\n  const productDeleteHandler = (id) => {\n    dispatch(DeleteProduct(id)).then(() => {\n      dispatch(GetProducts(productsFilter));\n    });\n  };\n\n  const productUpdateHandler = (data) => {\n    setCurrentProduct(data);\n    setIsOpen(false);\n    setTimeout(() => {\n      setOpenAddProduct(true);\n    }, appConstants.TIME_OUT);\n  };\n\n  const getCategory = (id) => {\n    const category = categories && categories.find((e) => e.id === id);\n\n    return category ? category.name : 'N/A';\n  };\n\n  const getVendor = (id) => {\n    const vendor = vendors && vendors.find((e) => e.id === id);\n\n    return vendor ? vendor.name : 'N/A';\n  };\n\n  return (\n    <div>\n      <ModalTemplate isOpen={isOpen} setIsOpen={setIsOpen}>\n        <div className='xl:inline-block w-auto p-6 my-8 text-left align-middle transition-all transform bg-white shadow-2xl rounded-2xl'>\n          <Dialog.Title as='h3' className='text-lg font-medium leading-6 text-gray-900 border-b pb-2'>\n            Products\n          </Dialog.Title>\n          <div className='mt-10 h-30v overflow-y-auto'>\n            <table className='table-fixed product-table border-2'>\n              <thead className='sticky top-0 z-10 bg-white'>\n                <tr>\n                  <th>Barcode</th>\n                  <th>Item</th>\n                  <th>Name</th>\n                  <th>Category</th>\n                  <th>Vendor</th>\n                  {(user?.role === 'superAdmin' || user?.role === 'admin') && <th className='h-full'>Action</th>}\n                </tr>\n              </thead>\n              <tbody>\n                {products &&\n                  products.map((e, index) => (\n                    <tr key={e._id}>\n                      <td className=''>{e.barcode && <Barcode value={e.barcode} />}</td>\n                      <td>{index + 1}</td>\n                      <td>{e.name}</td>\n                      <td>{getCategory(e.category_id)}</td>\n                      <td>{getVendor(e.vendor_id)}</td>\n                      {(user?.role === 'superAdmin' || user?.role === 'admin') && (\n                        <td>\n                          <button className='btn-sm-red h-full' onClick={() => productDeleteHandler(e._id)}>\n                            <TrashIcon className='h-4' />\n                          </button>\n                          <button className='btn-sm-yellow ml-3 h-full' onClick={() => productUpdateHandler(e)}>\n                            <PencilAltIcon className='h-4' />\n                          </button>\n                        </td>\n                      )}\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n          </div>\n\n          <div className='mt-4 flex items-end h-auto'>\n            <button\n              type='button'\n              className='inline-flex justify-center px-4 py-2 text-sm font-medium text-blue-900 bg-blue-100 border border-transparent rounded-md hover:bg-blue-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500'\n              onClick={() => setIsOpen(false)}\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </ModalTemplate>\n      <AddProducts isOpen={openAddProduct} setIsOpen={setOpenAddProduct} productData={currentProduct} />\n    </div>\n  );\n};\n\nexport default ProductsModal;\n","import { Dialog } from '@headlessui/react';\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport ModalTemplate from '.';\nimport { CreateCategory, UpdateCategory } from '../../actions/categories.actions';\n\nconst AddCategory = ({ isOpen, setIsOpen, categoryData }) => {\n  const initState = { name: '', description: '' };\n  const [categoryDetails, setCategoryDetails] = useState(initState);\n  const dispatch = useDispatch();\n\n  const handleCategory = (e) => {\n    const { name, value } = e.target;\n    setCategoryDetails((pre) => ({\n      ...pre,\n      [name]: value,\n    }));\n  };\n\n  useEffect(() => {\n    if (categoryData) {\n      setCategoryDetails(categoryData);\n    }\n  }, [categoryData]);\n\n  const submitCategory = () => {\n    const { name, description } = categoryDetails;\n    if (name.length) {\n      if (categoryData) {\n        const { _id } = categoryDetails;\n        dispatch(UpdateCategory(_id, { name, description })).then(() => {\n          setIsOpen(false);\n          setCategoryDetails(initState);\n        });\n      } else {\n        dispatch(CreateCategory(categoryDetails)).then(() => {\n          setIsOpen(false);\n          setCategoryDetails(initState);\n        });\n      }\n    }\n  };\n  return (\n    <div>\n      <ModalTemplate isOpen={isOpen} setIsOpen={setIsOpen}>\n        <div className='inline-block w-full max-w-md p-6 my-8 overflow-hidden text-left align-middle transition-all transform bg-white shadow-2xl rounded-2xl'>\n          <Dialog.Title as='h3' className='text-lg font-medium leading-6 text-gray-900'>\n            {categoryData ? 'Update' : 'Add'} Category\n          </Dialog.Title>\n          <div className='mt-10'>\n            <div className='flex flex-col my-2'>\n              <label className='mb-1 text-gray-500 font-bold'>Name</label>\n              <input className='input-field' name='name' onChange={handleCategory} value={categoryDetails.name} />\n            </div>\n            <div className='flex flex-col my-2'>\n              <label className='mb-1 text-gray-500 font-bold'>Description</label>\n              <textarea\n                className='input-field'\n                type=''\n                name='description'\n                onChange={handleCategory}\n                value={categoryDetails.description}\n              />\n            </div>\n          </div>\n          <div className='mt-4'>\n            <button\n              type='button'\n              className='inline-flex justify-center px-4 py-2 text-sm font-medium text-blue-900 bg-blue-100 border border-transparent rounded-md hover:bg-blue-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500'\n              onClick={submitCategory}\n            >\n              Submit\n            </button>\n            <button\n              type='button'\n              className='inline-flex justify-center px-4 py-2 text-sm font-medium text-red-900 bg-red-100 border border-transparent rounded-md hover:bg-red-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500 ml-3'\n              onClick={() => setIsOpen(false)}\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </ModalTemplate>\n    </div>\n  );\n};\n\nexport default AddCategory;\n","import { Dialog } from '@headlessui/react';\nimport { PencilAltIcon, TrashIcon } from '@heroicons/react/solid';\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ModalTemplate from '.';\nimport { DeleteCustomer } from '../../actions/customers.actions';\nimport CustomerModal from './AddCustomerModal';\nimport { appConstants } from '../../constants/appConstants';\n\nconst CustomersModal = ({ isOpen, setIsOpen }) => {\n  const dispatch = useDispatch();\n  const { customers } = useSelector((state) => ({\n    customers: state.customers.allCustomers,\n  }));\n  const initState = {\n    id: null,\n    name: '',\n    email: '',\n    phoneNo: '',\n  };\n  const [openAddCustomer, setOpenAddCustomer] = useState(false);\n  const [customerData, setCustomerData] = useState(initState);\n\n  const handleUserDelete = (id) => {\n    dispatch(DeleteCustomer(id));\n  };\n\n  const handleCustomerEdit = (data) => {\n    const { _id, name, email, phoneNo } = data;\n    setCustomerData({ _id, name, email, phoneNo });\n    setIsOpen(false);\n    setTimeout(() => {\n      setOpenAddCustomer(true);\n    }, appConstants.TIME_OUT);\n  };\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  return (\n    <div>\n      <ModalTemplate isOpen={isOpen} setIsOpen={setIsOpen}>\n        <div className='inline-block w-auto p-6 my-8 text-left align-middle transition-all transform bg-white shadow-2xl rounded-2xl overflow-y-auto'>\n          <Dialog.Title as='h3' className='text-lg font-medium leading-6 text-gray-900 border-b pb-2'>\n            Customers\n          </Dialog.Title>\n          <div className='mt-10 h-30v overflow-y-auto'>\n            <table className='table-fixed product-table border-2'>\n              <thead className='sticky top-0 z-10 bg-white'>\n                <tr>\n                  <th>Name</th>\n                  <th>Email</th>\n                  <th>Phone No</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {customers &&\n                  customers.map((e) => (\n                    <tr key={e._id}>\n                      <td>{e.name}</td>\n                      <td>{e.email}</td>\n                      <td>{e.phoneNo}</td>\n                      <td>\n                        {(user?.role === 'superAdmin' || user?.role === 'admin') && (\n                          <>\n                            <button className='btn-sm-red' onClick={() => handleUserDelete(e._id)}>\n                              <TrashIcon className='h-4' />\n                            </button>\n                            <button className='btn-sm-yellow ml-3' onClick={() => handleCustomerEdit(e)}>\n                              <PencilAltIcon className='h-4' />\n                            </button>\n                          </>\n                        )}\n                      </td>\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n          </div>\n\n          <div className='mt-4'>\n            <button\n              type='button'\n              className='inline-flex justify-center px-4 py-2 text-sm font-medium text-blue-900 bg-blue-100 border border-transparent rounded-md hover:bg-blue-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500'\n              onClick={() => setIsOpen(false)}\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </ModalTemplate>\n      <CustomerModal isOpen={openAddCustomer} setIsOpen={setOpenAddCustomer} customerData={customerData} />\n    </div>\n  );\n};\n\nexport default CustomersModal;\n","import { Dialog } from '@headlessui/react';\nimport { PencilAltIcon, TrashIcon } from '@heroicons/react/solid';\nimport { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ModalTemplate from '.';\nimport { DeleteUser, GetUsers } from '../../actions/users.actions';\nimport { appConstants } from '../../constants/appConstants';\nimport AddUserModal from './AddUser';\n\nconst UsersModal = ({ isOpen, setIsOpen }) => {\n  const dispatch = useDispatch();\n  const { users } = useSelector((state) => ({\n    users: state.users,\n  }));\n  const initState = {\n    id: null,\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  useEffect(() => {\n    dispatch(GetUsers());\n  }, [dispatch]);\n\n  const [openAddUser, setOpenAddUser] = useState(false);\n  const [userData, setUserData] = useState(initState);\n\n  const handleUserDelete = (id) => {\n    dispatch(DeleteUser(id));\n  };\n\n  const handleUserEdit = (data) => {\n    const { _id, name, role, email, store } = data;\n    setUserData({ id: _id, name, role, email, store });\n    setIsOpen(false);\n    setTimeout(() => {\n      setOpenAddUser(true);\n    }, appConstants.TIME_OUT);\n  };\n  const user = JSON.parse(localStorage.getItem('user'));\n\n\n  return (\n    <div>\n      <ModalTemplate isOpen={isOpen} setIsOpen={setIsOpen}>\n        <div className='inline-block w-auto p-6 my-8 text-left align-middle transition-all transform bg-white shadow-2xl rounded-2xl overflow-y-auto'>\n          <Dialog.Title as='h3' className='text-lg font-medium leading-6 text-gray-900 border-b pb-2'>\n            Users\n          </Dialog.Title>\n          <div className='mt-10 h-30v overflow-y-auto'>\n            <table className='table-fixed product-table border-2'>\n              <thead className='sticky top-0 z-10 bg-white'>\n                <tr>\n                  <th>Name</th>\n                  <th>Email</th>\n                  <th>Role</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {users &&\n                  users.map((e) => (\n                    <tr key={e._id}>\n                      <td>{e.name}</td>\n                      <td>{e.email}</td>\n                      <td>{e.role}</td>\n                      <td>\n                        {e.role !== 'admin' && (\n                          <button className='btn-sm-red' onClick={() => handleUserDelete(e._id)}>\n                            <TrashIcon className='h-4' />\n                          </button>\n                        )}\n                        <button className='btn-sm-yellow ml-3' onClick={() => handleUserEdit(e)}>\n                          <PencilAltIcon className='h-4' />\n                        </button>\n                      </td>\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n          </div>\n\n          <div className='mt-4'>\n            <button\n              type='button'\n              className='inline-flex justify-center px-4 py-2 text-sm font-medium text-blue-900 bg-blue-100 border border-transparent rounded-md hover:bg-blue-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500'\n              onClick={() => setIsOpen(false)}\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </ModalTemplate>\n      <AddUserModal isOpen={openAddUser} setIsOpen={setOpenAddUser} userData={userData} />\n    </div>\n  );\n};\n\nexport default UsersModal;\n","import instance from './request';\n\nexport function createVendor(data) {\n  return instance.post('/vendors', data);\n}\n\nexport function getVendors() {\n  return instance.get('/vendors');\n}\n\nexport function deleteVendor(id) {\n  return instance.delete(`/vendors/${id}`);\n}\n\nexport function updateVendor(id, data) {\n  return instance.patch(`/vendors/${id}`, data);\n}\n","import { toast } from 'react-toastify';\nimport { createVendor, deleteVendor, getVendors, updateVendor } from '../api/vendors';\nimport { actionTypes } from '../constants/actionTypes';\n\nconst createVendorAction = (payload) => {\n  return {\n    type: actionTypes.createVendor,\n    payload,\n  };\n};\n\nconst getVendorsAction = (payload) => {\n  return {\n    type: actionTypes.getVendors,\n    payload,\n  };\n};\n\nconst deleteVendorAction = (payload) => {\n  return {\n    type: actionTypes.deleteVendor,\n    payload,\n  };\n};\n\nconst updateVendorAction = (payload) => {\n  return {\n    type: actionTypes.updateVendor,\n    payload,\n  };\n};\n\nexport const CreateVendor = (data) => async (dispatch) => {\n  const res = await createVendor(data);\n  if (res.status === 200) {\n    dispatch(createVendorAction(res.data));\n    toast.success('Vendor Created Successfully');\n  }\n};\n\nexport const GetVendors = () => async (dispatch) => {\n  const res = await getVendors();\n  if (res.status === 200) {\n    dispatch(getVendorsAction(res.data));\n  }\n};\n\nexport const DeleteVendor = (id) => async (dispatch) => {\n  const res = await deleteVendor(id);\n  if (res.status === 200) {\n    const vendors = await getVendors();\n    dispatch(deleteVendorAction(vendors.data));\n    toast.success('Vendor Deleted Successfully');\n  }\n};\n\nexport const UpdateVendor = (id, data) => async (dispatch) => {\n  const res = await updateVendor(id, data);\n  if (res.status === 200) {\n    dispatch(updateVendorAction(res.data));\n    toast.success('Vendor Updated Successfully');\n  }\n};\n","import { Dialog } from '@headlessui/react';\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport ModalTemplate from '.';\nimport { CreateVendor, UpdateVendor } from '../../actions/vendors.action';\n\nconst AddVendorsModal = ({ isOpen, setIsOpen, vendorData }) => {\n  const initState = {\n    name: '',\n    description: '',\n  };\n  const dispatch = useDispatch();\n  const [vendorDetails, setVendorDetails] = useState(initState);\n\n  const handleVendorFields = (e) => {\n    const { name, value } = e.target;\n    setVendorDetails((pre) => ({\n      ...pre,\n      [name]: value,\n    }));\n  };\n\n  useEffect(() => {\n    if (vendorData) {\n      setVendorDetails(vendorData);\n    }\n  }, [vendorData]);\n\n  const handleCreateCustomer = () => {\n    if (vendorData) {\n      const { id, name, description } = vendorDetails;\n      dispatch(UpdateVendor(id, { name, description })).then(() => {\n        setIsOpen(false);\n        setVendorDetails(initState);\n      });\n    } else {\n      const { name, description } = vendorDetails;\n      dispatch(CreateVendor({ name, description })).then(() => {\n        setIsOpen(false);\n        setVendorDetails(initState);\n      });\n    }\n  };\n\n  return (\n    <div>\n      <ModalTemplate isOpen={isOpen} setIsOpen={setIsOpen}>\n        <div className='inline-block w-96 my-8 overflow-hidden text-left align-middle transition-all transform bg-white shadow-2xl rounded-2xl p-6'>\n          <Dialog.Title as='h3' className='text-lg font-medium leading-6 text-gray-900 border-b pb-2'>\n            {vendorData ? 'Update' : 'Add'} Vendor\n          </Dialog.Title>\n          <div className='mt-10'>\n            <div className='flex flex-col my-2'>\n              <label className='mb-1 text-gray-500 font-bold'>Name</label>\n              <input\n                className='input-field'\n                type='text'\n                name='name'\n                onChange={handleVendorFields}\n                value={vendorDetails.name}\n              />\n            </div>\n            <div className='flex flex-col my-2'>\n              <label className='mb-1 text-gray-500 font-bold'>Description</label>\n              <textarea\n                className='input-field'\n                name='description'\n                onChange={handleVendorFields}\n                value={vendorDetails.description}\n              />\n            </div>\n          </div>\n\n          <div className='mt-4'>\n            <button\n              type='button'\n              onClick={handleCreateCustomer}\n              className='inline-flex justify-center px-4 py-2 text-sm font-medium text-blue-900 bg-blue-100 border border-transparent rounded-md hover:bg-blue-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500'\n            >\n              Submit\n            </button>\n            <button\n              type='button'\n              className='inline-flex justify-center px-4 py-2 text-sm font-medium text-red-900 bg-red-100 border border-transparent rounded-md hover:bg-red-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500 ml-3'\n              onClick={() => setIsOpen(false)}\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </ModalTemplate>\n    </div>\n  );\n};\n\nexport default AddVendorsModal;\n","import { Dialog } from '@headlessui/react';\nimport { PencilAltIcon, TrashIcon } from '@heroicons/react/solid';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ModalTemplate from '.';\nimport { DeleteVendor, GetVendors } from '../../actions/vendors.action';\nimport { appConstants } from '../../constants/appConstants';\nimport AddVendorsModal from './AddVendorsModal';\n\nconst VendorsModal = ({ isOpen, setIsOpen }) => {\n  const dispatch = useDispatch();\n  const { vendors } = useSelector((state) => ({\n    vendors: state.vendors,\n  }));\n  const [vendorData, setVendorData] = useState({ id: null, name: '', description: '' });\n  const [openAddVendor, setOpenAddVendor] = useState(false);\n\n  useEffect(() => {\n    dispatch(GetVendors());\n  }, [dispatch]);\n\n  const handleVenderDelete = (id) => {\n    dispatch(DeleteVendor(id));\n  };\n\n  const handleVendorEdit = (data) => {\n    const { _id, name, description } = data;\n    setVendorData({ id: _id, name, description });\n    setIsOpen(false);\n    setTimeout(() => {\n      setOpenAddVendor(true);\n    }, appConstants.TIME_OUT);\n  };\n\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  return (\n    <div>\n      <ModalTemplate isOpen={isOpen} setIsOpen={setIsOpen}>\n        <div className='inline-block w-auto p-6 my-8 text-left align-middle transition-all transform bg-white shadow-2xl rounded-2xl overflow-y-auto'>\n          <Dialog.Title as='h3' className='text-lg font-medium leading-6 text-gray-900 border-b pb-2'>\n            Vendors\n          </Dialog.Title>\n          {vendors.length ? (\n            <div className='mt-10 h-30v overflow-y-auto'>\n              <table className='table-fixed product-table border-2'>\n                <thead className='sticky top-0 z-10 bg-white'>\n                  <tr>\n                    <th>Name</th>\n                    <th>Description</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {vendors.map((e) => (\n                    <tr key={e._id}>\n                      <td>{e.name}</td>\n                      <td>{e.description ? e.description : 'N/A'}</td>\n                      <td>\n                        {(user?.role === 'superAdmin' || user?.role === 'admin') && (\n                          <>\n                            <button className='btn-sm-red' onClick={() => handleVenderDelete(e._id)}>\n                              <TrashIcon className='h-4' />\n                            </button>\n                            <button className='btn-sm-yellow ml-3' onClick={() => handleVendorEdit(e)}>\n                              <PencilAltIcon className='h-4' />\n                            </button>\n                          </>\n                        )}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          ) : (\n            <h1 className='p-4'>No Vendors available</h1>\n          )}\n          <div className='mt-4'>\n            <button\n              type='button'\n              className='inline-flex justify-center px-4 py-2 text-sm font-medium text-blue-900 bg-blue-100 border border-transparent rounded-md hover:bg-blue-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500'\n              onClick={() => setIsOpen(false)}\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </ModalTemplate>\n      <AddVendorsModal isOpen={openAddVendor} setIsOpen={setOpenAddVendor} vendorData={vendorData} />\n    </div>\n  );\n};\n\nexport default VendorsModal;\n","import { Dialog } from '@headlessui/react';\nimport { PencilAltIcon, TrashIcon } from '@heroicons/react/solid';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ModalTemplate from '.';\nimport { DeleteCategory, GetCategories } from '../../actions/categories.actions';\nimport { appConstants } from '../../constants/appConstants';\nimport AddCategory from './AddCategory';\n\nconst CategoriesModal = ({ isOpen, setIsOpen }) => {\n  const dispatch = useDispatch();\n  const { categories } = useSelector((state) => ({\n    categories: state.categories,\n  }));\n  const [categoryData, setCategoryData] = useState({ id: null, name: '', description: '' });\n  const [openAddCategory, setOpenAddCategory] = useState(false);\n\n  useEffect(() => {\n    dispatch(GetCategories());\n  }, [dispatch]);\n\n  const handleVenderDelete = (id) => {\n    dispatch(DeleteCategory(id));\n  };\n\n  const handleVendorEdit = (data) => {\n    const { _id, name, description } = data;\n    setCategoryData({ _id, name, description });\n    setIsOpen(false);\n    setTimeout(() => {\n      setOpenAddCategory(true);\n    }, appConstants.TIME_OUT);\n  };\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  return (\n    <div>\n      <ModalTemplate isOpen={isOpen} setIsOpen={setIsOpen}>\n        <div className='inline-block w-auto p-6 my-8 text-left align-middle transition-all transform bg-white shadow-2xl rounded-2xl overflow-y-auto'>\n          <Dialog.Title as='h3' className='text-lg font-medium leading-6 text-gray-900 border-b pb-2'>\n            Categories\n          </Dialog.Title>\n          {categories.length > 0 ? (\n            <div className='mt-10 h-30v overflow-y-auto'>\n              <table className='table-fixed product-table border-2'>\n                <thead className='sticky top-0 z-10 bg-white'>\n                  <tr>\n                    <th>Name</th>\n                    <th>Description</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {categories.map((e) => (\n                    <tr key={e._id}>\n                      <td>{e.name}</td>\n                      <td>{e.description ? e.description : 'N/A'}</td>\n                      <td>\n                        {(user?.role === 'superAdmin' || user?.role === 'admin') && (\n                          <>\n                            <button className='btn-sm-red' onClick={() => handleVenderDelete(e._id)}>\n                              <TrashIcon className='h-4' />\n                            </button>\n                            <button className='btn-sm-yellow ml-3' onClick={() => handleVendorEdit(e)}>\n                              <PencilAltIcon className='h-4' />\n                            </button>\n                          </>\n                        )}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          ) : (\n            <h1 className='p-4'>No Categories available</h1>\n          )}\n          <div className='mt-4'>\n            <button\n              type='button'\n              className='inline-flex justify-center px-4 py-2 text-sm font-medium text-blue-900 bg-blue-100 border border-transparent rounded-md hover:bg-blue-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500'\n              onClick={() => setIsOpen(false)}\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </ModalTemplate>\n      <AddCategory isOpen={openAddCategory} setIsOpen={setOpenAddCategory} categoryData={categoryData} />\n    </div>\n  );\n};\n\nexport default CategoriesModal;\n","import instance from './request';\n\nexport function createStore(data) {\n  return instance.post('/store', data);\n}\n\nexport function getStores() {\n  return instance.get('/store');\n}\n\nexport function updateStore(id, data) {\n  return instance.patch(`/store/${id}`, data);\n}\n\nexport function deleteStore(id) {\n  return instance.delete(`/store/${id}`);\n}\n","import { toast } from 'react-toastify';\nimport { createStore, deleteStore, getStores, updateStore } from '../api/store';\nimport { actionTypes } from '../constants/actionTypes';\n\nconst createStoreAction = (payload) => {\n  return {\n    type: actionTypes.createStore,\n    payload,\n  };\n};\n\nconst updateStoreAction = (payload) => {\n  return {\n    type: actionTypes.updateStore,\n    payload,\n  };\n};\n\nconst deleteStoreAction = (payload) => {\n  return {\n    type: actionTypes.deleteStore,\n    payload,\n  };\n};\n\nconst getStoresAction = (payload) => {\n  return {\n    type: actionTypes.getStores,\n    payload,\n  };\n};\n\nexport const CreateStore = (data) => async (dispatch) => {\n  const res = await createStore(data);\n  if (res.status === 200) {\n    dispatch(createStoreAction(res.data));\n    toast.success('Store Created Successfully');\n  }\n};\n\nexport const GetStores = (data) => async (dispatch) => {\n  const res = await getStores(data);\n  if (res.status === 200) {\n    dispatch(getStoresAction(res.data));\n  }\n};\n\nexport const DeleteStore = (id) => async (dispatch) => {\n  const res = await deleteStore(id);\n  if (res.status === 200) {\n    const stores = await getStores();\n    dispatch(deleteStoreAction(stores.data));\n    toast.success('Store Deleted Successfully');\n  }\n};\n\nexport const UpdateStore = (id, data) => async (dispatch) => {\n  const res = await updateStore(id, data);\n  if (res.status === 200) {\n    dispatch(updateStoreAction(res.data));\n    toast.success('Store Updated Successfully');\n  }\n};\n","import { Dialog } from '@headlessui/react';\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport ModalTemplate from '.';\nimport { CreateStore, UpdateStore } from '../../actions/stores.actions';\n\nconst AddStore = ({ isOpen, setIsOpen, storeData }) => {\n  const initState = { name: '', address: '' };\n  const [storeDetails, setStoreDetails] = useState(initState);\n  const dispatch = useDispatch();\n\n  const handleStore = (e) => {\n    const { name, value } = e.target;\n    setStoreDetails((pre) => ({\n      ...pre,\n      [name]: value,\n    }));\n  };\n\n  useEffect(() => {\n    if (storeData) {\n      setStoreDetails(storeData);\n    }\n  }, [storeData]);\n\n  const submitStore = () => {\n    const { name, address } = storeDetails;\n    if (name.length) {\n      if (storeData) {\n        const { _id } = storeDetails;\n        dispatch(UpdateStore(_id, { name, address })).then(() => {\n          setIsOpen(false);\n          setStoreDetails(initState);\n        });\n      } else {\n        dispatch(CreateStore(storeDetails)).then(() => {\n          setIsOpen(false);\n          setStoreDetails(initState);\n        });\n      }\n    }\n  };\n  return (\n    <div>\n      <ModalTemplate isOpen={isOpen} setIsOpen={setIsOpen}>\n        <div className='inline-block w-full max-w-md p-6 my-8 overflow-hidden text-left align-middle transition-all transform bg-white shadow-2xl rounded-2xl'>\n          <Dialog.Title as='h3' className='text-lg font-medium leading-6 text-gray-900'>\n            {storeData ? 'Update' : 'Add'} Store\n          </Dialog.Title>\n          <div className='mt-10'>\n            <div className='flex flex-col my-2'>\n              <label className='mb-1 text-gray-500 font-bold'>Name</label>\n              <input className='input-field' name='name' onChange={handleStore} value={storeDetails.name} />\n            </div>\n            <div className='flex flex-col my-2'>\n              <label className='mb-1 text-gray-500 font-bold'>Address</label>\n              <textarea\n                className='input-field'\n                type=''\n                name='address'\n                onChange={handleStore}\n                value={storeDetails.address}\n              />\n            </div>\n          </div>\n          <div className='mt-4'>\n            <button\n              type='button'\n              className='inline-flex justify-center px-4 py-2 text-sm font-medium text-blue-900 bg-blue-100 border border-transparent rounded-md hover:bg-blue-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500'\n              onClick={submitStore}\n            >\n              Submit\n            </button>\n            <button\n              type='button'\n              className='inline-flex justify-center px-4 py-2 text-sm font-medium text-red-900 bg-red-100 border border-transparent rounded-md hover:bg-red-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500 ml-3'\n              onClick={() => setIsOpen(false)}\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </ModalTemplate>\n    </div>\n  );\n};\n\nexport default AddStore;\n","import { Dialog } from '@headlessui/react';\nimport { PencilAltIcon, TrashIcon } from '@heroicons/react/solid';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ModalTemplate from '.';\nimport { DeleteStore, GetStores } from '../../actions/stores.actions';\nimport { appConstants } from '../../constants/appConstants';\nimport AddStore from './AddStore';\n\nconst StoresModal = ({ isOpen, setIsOpen }) => {\n  const dispatch = useDispatch();\n  const { stores } = useSelector((state) => ({\n    stores: state.stores,\n  }));\n  const [storeData, setStoreData] = useState({ id: null, name: '', address: '' });\n  const [openAddStore, setOpenAddStore] = useState(false);\n\n  useEffect(() => {\n    dispatch(GetStores());\n  }, [dispatch]);\n\n  const handleStoreDelete = (id) => {\n    dispatch(DeleteStore(id));\n  };\n\n  const handleStoreEdit = (data) => {\n    const { _id, name, address } = data;\n    setStoreData({ _id, name, address });\n    setIsOpen(false);\n    setTimeout(() => {\n      setOpenAddStore(true);\n    }, appConstants.TIME_OUT);\n  };\n\n  return (\n    <div>\n      <ModalTemplate isOpen={isOpen} setIsOpen={setIsOpen}>\n        <div className='inline-block w-auto p-6 my-8 text-left align-middle transition-all transform bg-white shadow-2xl rounded-2xl overflow-y-auto'>\n          <Dialog.Title as='h3' className='text-lg font-medium leading-6 text-gray-900 border-b pb-2'>\n            Stores\n          </Dialog.Title>\n          {stores.length ? (\n            <div className='mt-10 h-30v overflow-y-auto'>\n              <table className='table-fixed product-table border-2'>\n                <thead className='sticky top-0 z-10 bg-white'>\n                  <tr>\n                    <th>Name</th>\n                    <th>Address</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {stores.map((e) => (\n                    <tr key={e._id}>\n                      <td>{e.name}</td>\n                      <td>{e.address ? e.address : 'N/A'}</td>\n                      <td>\n                        <button className='btn-sm-red' onClick={() => handleStoreDelete(e._id)}>\n                          <TrashIcon className='h-4' />\n                        </button>\n                        <button className='btn-sm-yellow ml-3' onClick={() => handleStoreEdit(e)}>\n                          <PencilAltIcon className='h-4' />\n                        </button>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          ) : (\n            <h1 className='p-4'>No Stores available</h1>\n          )}\n          <div className='mt-4'>\n            <button\n              type='button'\n              className='inline-flex justify-center px-4 py-2 text-sm font-medium text-blue-900 bg-blue-100 border border-transparent rounded-md hover:bg-blue-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500'\n              onClick={() => setIsOpen(false)}\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </ModalTemplate>\n      <AddStore isOpen={openAddStore} setIsOpen={setOpenAddStore} storeData={storeData} />\n    </div>\n  );\n};\n\nexport default StoresModal;\n","import instance from './request';\n\nexport function createExpense(data) {\n  return instance.post(`/expenses`, data);\n}\n\nexport function getExpenses(data, filter) {\n  return instance.get(`/expenses?page=${filter.page}&&per_page=${filter.perPage}`, { params: data });\n}\n\nexport function updateExpense(id, data) {\n  return instance.patch(`/expenses/${id}`, data);\n}\n\nexport function deleteExpense(id) {\n  return instance.delete(`/expenses/${id}`);\n}\n","import { toast } from 'react-toastify';\nimport { createExpense, deleteExpense, getExpenses, updateExpense } from '../api/expenses';\nimport { actionTypes } from '../constants/actionTypes';\n\nconst createExpenseAction = (payload) => {\n  return {\n    type: actionTypes.createExpense,\n    payload,\n  };\n};\n\nconst getExpensesAction = (payload) => {\n  return {\n    type: actionTypes.getExpenses,\n    payload,\n  };\n};\n\nconst deleteExpenseAction = (payload) => {\n  return {\n    type: actionTypes.deleteExpense,\n    payload,\n  };\n};\n\nconst updateExpenseAction = (payload) => {\n  return {\n    type: actionTypes.updateExpense,\n    payload,\n  };\n};\n\nexport const CreateExpense = (data) => async (dispatch) => {\n  const res = await createExpense(data);\n  if (res.status === 200) {\n    dispatch(createExpenseAction(res.data));\n    toast.success('Expense Created Successfully');\n  }\n};\n\nexport const GetExpenses = (data, filter) => async (dispatch) => {\n  const res = await getExpenses(data, filter);\n  if (res.status === 200) {\n    dispatch(getExpensesAction(res.data));\n  }\n};\n\nexport const DeleteExpenses = (id, data, filters) => async (dispatch) => {\n  const res = await deleteExpense(id);\n  if (res.status === 200) {\n    const vendors = await getExpenses(data, filters);\n    dispatch(deleteExpenseAction(vendors.data));\n    toast.success('Expense Deleted Successfully');\n  }\n};\n\nexport const UpdateExpense = (id, data) => async (dispatch) => {\n  const res = await updateExpense(id, data);\n  if (res.status === 200) {\n    dispatch(updateExpenseAction(res.data));\n    toast.success('Expense Updated Successfully');\n  }\n};\n","import { Dialog } from '@headlessui/react';\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport ModalTemplate from '.';\nimport { CreateExpense, UpdateExpense } from '../../actions/expenses.actions';\n\nconst AddExpenseModal = ({ isOpen, setIsOpen, expenseData }) => {\n  const initState = { name: '', amount: '', details: '' };\n  const [expenseDetails, setExpenseDetails] = useState(initState);\n  const dispatch = useDispatch();\n\n  const handleStore = (e) => {\n    const { name, value } = e.target;\n    setExpenseDetails((pre) => ({\n      ...pre,\n      [name]: value,\n    }));\n  };\n\n  useEffect(() => {\n    if (expenseData) {\n      setExpenseDetails(expenseData);\n    }\n  }, [expenseData]);\n\n  const submitExpense = () => {\n    const { name, amount, details } = expenseDetails;\n    if (expenseData?._id) {\n      const { _id } = expenseDetails;\n      dispatch(UpdateExpense(_id, { name, amount, details })).then(() => {\n        setIsOpen(false);\n        setExpenseDetails(initState);\n      });\n    } else {\n      dispatch(CreateExpense(expenseDetails)).then(() => {\n        setIsOpen(false);\n        setExpenseDetails(initState);\n      });\n    }\n  };\n  return (\n    <div>\n      <ModalTemplate isOpen={isOpen} setIsOpen={setIsOpen}>\n        <div className='inline-block w-full max-w-md p-6 my-8 overflow-hidden text-left align-middle transition-all transform bg-white shadow-2xl rounded-2xl'>\n          <Dialog.Title as='h3' className='text-lg font-medium leading-6 text-gray-900'>\n            {expenseData ? 'Update' : 'Add'} Expense\n          </Dialog.Title>\n          <div className='mt-10'>\n            <div className='flex flex-col my-2'>\n              <label className='mb-1 text-gray-500 font-bold'>Name</label>\n              <input className='input-field' name='name' onChange={handleStore} value={expenseDetails.name} />\n            </div>\n            <div className='flex flex-col my-2'>\n              <label className='mb-1 text-gray-500 font-bold'>Amount</label>\n              <input\n                className='input-field'\n                name='amount'\n                type='number'\n                onChange={handleStore}\n                value={expenseDetails.amount}\n              />\n            </div>\n            <div className='flex flex-col my-2'>\n              <label className='mb-1 text-gray-500 font-bold'>Details</label>\n              <textarea\n                className='input-field'\n                type=''\n                name='details'\n                onChange={handleStore}\n                value={expenseDetails.details}\n              />\n            </div>\n          </div>\n          <div className='mt-4'>\n            <button\n              type='button'\n              className='inline-flex justify-center px-4 py-2 text-sm font-medium text-blue-900 bg-blue-100 border border-transparent rounded-md hover:bg-blue-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500'\n              onClick={submitExpense}\n            >\n              Submit\n            </button>\n            <button\n              type='button'\n              className='inline-flex justify-center px-4 py-2 text-sm font-medium text-red-900 bg-red-100 border border-transparent rounded-md hover:bg-red-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500 ml-3'\n              onClick={() => setIsOpen(false)}\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </ModalTemplate>\n    </div>\n  );\n};\n\nexport default AddExpenseModal;\n","import React, { useState } from 'react';\nimport {\n  ViewGridAddIcon,\n  FolderAddIcon,\n  UserIcon,\n  CreditCardIcon,\n  PlusIcon,\n  CogIcon,\n  ShoppingBagIcon,\n  DocumentTextIcon,\n} from '@heroicons/react/solid';\n\nimport { LogoutIcon } from '@heroicons/react/outline';\nimport { Link, useLocation } from 'react-router-dom';\nimport ProductsModal from '../Modals/ProductsModal';\nimport AddProducts from '../Modals/AddProductModal';\nimport AddCategory from '../Modals/AddCategory';\nimport CustomersModal from '../Modals/customersModal';\nimport AddUserModal from '../Modals/AddUser';\nimport UsersModal from '../Modals/usersModal';\nimport AddVendorsModal from '../Modals/AddVendorsModal';\nimport VendorsModal from '../Modals/VendorsModal';\nimport { LogoutRequest } from '../../actions/auth.actions';\nimport { useDispatch } from 'react-redux';\nimport CategoriesModal from '../Modals/CategoriesModal';\nimport StoresModal from '../Modals/StoresModal';\nimport AddStore from '../Modals/AddStore';\nimport AddExpenseModal from '../Modals/AddExpenseModal';\n\nconst Header = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [openAddProduct, setOpenAddProduct] = useState(false);\n  const [openAddCategory, setOpenAddCategory] = useState(false);\n  const [openCustomers, setOpenCustomers] = useState(false);\n  const [openAddUser, setOpenAddUser] = useState(false);\n  const [openUsers, setOpenUsers] = useState(false);\n  const [openVendors, setOpenVendors] = useState(false);\n  const [openCategories, setOpenCategories] = useState(false);\n  const [openStores, setOpenStores] = useState(false);\n  const [openAddVendors, setOpenAddVendors] = useState(false);\n  const [openAddStores, setOpenAddStores] = useState(false);\n  const [openAddExpense, setOpenAddExpense] = useState(false);\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  return (\n    <div>\n      <div className='grid xl:grid-cols-2 sm:grid-cols-1 space-x-3 sm:space-y-4 xl:space-y-0'>\n        <div className='flex space-x-2'>\n          <div className='flex'>\n            <button className='flex align-middle btn-green' onClick={() => setIsOpen(true)}>\n              <FolderAddIcon className='mr-2 h-6' />\n              Products\n            </button>\n            {(user?.role === 'superAdmin' || user?.role === 'admin') && (\n              <button className='btn-sm-yellow' onClick={() => setOpenAddProduct(true)}>\n                <PlusIcon className='h-6' />\n              </button>\n            )}\n          </div>\n          <div className='flex'>\n            <button className='flex align-middle btn-green' onClick={() => setOpenCategories(true)}>\n              <ViewGridAddIcon className='mr-2 h-6' />\n              Categories\n            </button>\n            {(user?.role === 'superAdmin' || user?.role === 'admin') && (\n              <button className='btn-sm-yellow' onClick={() => setOpenAddCategory(true)}>\n                <PlusIcon className='h-6' />\n              </button>\n            )}\n          </div>\n          {user?.role === 'superAdmin' && (\n            <div className='flex'>\n              <button className='flex align-middle btn-green' onClick={() => setOpenStores(true)}>\n                <ShoppingBagIcon className='mr-2 h-6' />\n                Store\n              </button>\n              <button className='btn-sm-yellow' onClick={() => setOpenAddStores(true)}>\n                <PlusIcon className='h-6' />\n              </button>\n            </div>\n          )}\n          <button className='flex align-middle btn-blue' onClick={() => setOpenCustomers(true)}>\n            <UserIcon className='mr-2 h-6' />\n            Customers\n          </button>\n          {user?.role !== 'superAdmin' && (\n            <button className='flex align-middle btn-blue' onClick={() => setOpenAddExpense(true)}>\n              <DocumentTextIcon className='mr-2 h-6' />\n              Add Expense\n            </button>\n          )}\n        </div>\n        <div className='flex space-x-2 xl:justify-end'>\n          {user?.role === 'admin' &&\n            (!location.pathname.includes('/transactions') ? (\n              <Link to='/transactions'>\n                <button className='flex align-middle btn-green'>\n                  <CreditCardIcon className='mr-2 h-6' />\n                  Transactions\n                </button>\n              </Link>\n            ) : (\n              <Link to='/'>\n                <button className='flex align-middle btn-green'>\n                  <CreditCardIcon className='mr-2 h-6' />\n                  Point of Sale\n                </button>\n              </Link>\n            ))}\n          <div className='flex'>\n            <button className='flex align-middle btn-green' onClick={() => setOpenVendors(true)}>\n              <UserIcon className='mr-2 h-6' />\n              Vendors\n            </button>\n            {(user?.role === 'superAdmin' || user?.role === 'admin') && (\n              <button className='btn-sm-gray' onClick={() => setOpenAddVendors(true)}>\n                <PlusIcon className='h-6' />\n              </button>\n            )}\n          </div>\n          {(user?.role === 'superAdmin' || user?.role === 'admin') && (\n            <>\n              <div className='flex'>\n                <button className='flex align-middle btn-green' onClick={() => setOpenUsers(true)}>\n                  <UserIcon className='mr-2 h-6' />\n                  Users\n                </button>\n                <button className='btn-sm-gray' onClick={() => setOpenAddUser(true)}>\n                  <PlusIcon className='h-6' />\n                </button>\n              </div>\n            </>\n          )}\n\n          <button className='btn-sm-yellow' onClick={() => dispatch(LogoutRequest())} title='Logout'>\n            <LogoutIcon className='h-6' />\n          </button>\n        </div>\n      </div>\n      <ProductsModal isOpen={isOpen} setIsOpen={setIsOpen} />\n      <AddProducts isOpen={openAddProduct} setIsOpen={setOpenAddProduct} />\n      <AddCategory isOpen={openAddCategory} setIsOpen={setOpenAddCategory} />\n      <UsersModal isOpen={openUsers} setIsOpen={setOpenUsers} />\n      <AddUserModal isOpen={openAddUser} setIsOpen={setOpenAddUser} />\n      <CustomersModal isOpen={openCustomers} setIsOpen={setOpenCustomers} />\n      <AddVendorsModal isOpen={openAddVendors} setIsOpen={setOpenAddVendors} />\n      <VendorsModal isOpen={openVendors} setIsOpen={setOpenVendors} />\n      <CategoriesModal isOpen={openCategories} setIsOpen={setOpenCategories} />\n      <StoresModal isOpen={openStores} setIsOpen={setOpenStores} />\n      <AddStore isOpen={openAddStores} setIsOpen={setOpenAddStores} />\n      <AddExpenseModal isOpen={openAddExpense} setIsOpen={setOpenAddExpense} />\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createOrderAction } from '../../actions/order.actions';\nimport { filterProductsAction } from '../../actions/products.actions';\n\nconst Products = () => {\n  const dispatch = useDispatch();\n  const {\n    products,\n    productsFilter,\n    categories,\n    currentPage,\n    totalPages,\n    currentOrder,\n    orderStatus,\n    onlineStatus,\n    allProducts,\n  } = useSelector((state) => ({\n    products: state.products.products,\n    productsFilter: state.products.productsFilter,\n    categories: state.categories,\n    currentPage: state.products.currentPage,\n    totalPages: state.products.totalPages,\n    currentOrder: state.orders.currentOrder,\n    orderStatus: state.orders.orderStatus,\n    onlineStatus: state.onlineStatus.onlineStatus,\n    allProducts: state.products.allProducts,\n  }));\n  const [offlineFilters, setOfflineFilters] = useState({ category_id: null, name: '' });\n\n  const handleCategoryChange = (e) => {\n    const { value } = e.target;\n\n    if (onlineStatus) {\n      dispatch(filterProductsAction({ ...productsFilter, category_id: value }));\n    } else {\n      setOfflineFilters((pre) => ({ ...pre, category_id: value === '' ? null : Number(value) }));\n    }\n  };\n\n  function debounce(func, timeout = 2000) {\n    let timer;\n    return (...args) => {\n      clearTimeout(timer);\n      timer = setTimeout(() => {\n        func.apply(this, args);\n      }, timeout);\n    };\n  }\n\n  const handleKeywordChange = (e) => {\n    const { value } = e.target;\n    dispatch(filterProductsAction({ ...productsFilter, keyword: value }));\n\n    if (onlineStatus) {\n      dispatch(filterProductsAction({ ...productsFilter, keyword: value }));\n    } else {\n      setOfflineFilters((pre) => ({ ...pre, name: value }));\n    }\n  };\n\n  const optimizedSearch = debounce(handleKeywordChange);\n\n  const handlePageChange = (page) => {\n    dispatch(filterProductsAction({ ...productsFilter, page }));\n  };\n\n  const handlePerPageChange = (e) => {\n    const { value } = e.target;\n    dispatch(filterProductsAction({ ...productsFilter, per_page: value }));\n  };\n\n  const handleCreateOrder = (item) => {\n    const alreadyExists = currentOrder.filter((e) => e._id === item._id);\n    if (alreadyExists.length > 0) {\n      dispatch(\n        createOrderAction(orderStatus, {\n          ...item,\n          orderQuantity:\n            Number(alreadyExists[alreadyExists.length - 1].orderQuantity) < Number(item.quantity)\n              ? alreadyExists[alreadyExists.length - 1].orderQuantity + 1\n              : alreadyExists[alreadyExists.length - 1].orderQuantity,\n        })\n      );\n    } else {\n      dispatch(createOrderAction(orderStatus, { ...item, orderQuantity: 1 }));\n    }\n  };\n\n  const productsData = onlineStatus\n    ? products\n    : allProducts\n        .filter((e) => e.name.toLowerCase().includes(offlineFilters.name.toLowerCase()))\n        .filter((e) => (offlineFilters.category_id ? e.category_id === offlineFilters.category_id : true));\n\n  return (\n    <div className='p-10 bg-white ml-4 mt-6 lg:col-span-2'>\n      <div className='grid xl:grid-cols-3   sm:grid-cols-1'>\n        <div className=''>\n          <input\n            type='text'\n            className='input-field sm:w-full xl:w-auto'\n            placeholder='Search Product by name or sku'\n            onChange={optimizedSearch}\n          />\n        </div>\n        <div className='space-x-2'>\n          <select\n            className='input-select w-full'\n            name='category_id'\n            onChange={handleCategoryChange}\n            value={onlineStatus ? productsFilter.category_id : offlineFilters.category_id}\n          >\n            <option value='' selected disabled>\n              Select Category\n            </option>\n            <option value=''>All</option>\n            {categories &&\n              categories.map((e) => (\n                <option key={e._id} value={e._id}>\n                  {e.name}\n                </option>\n              ))}\n          </select>\n        </div>\n        {onlineStatus && (\n          <div className='space-x-2 flex justify-end'>\n            <select\n              className='input-select xl:w-2/4 sm:w-full'\n              name='per_page'\n              onChange={handlePerPageChange}\n              value={productsFilter.per_page}\n            >\n              <option value='' selected disabled>\n                Per Page\n              </option>\n              <option>5</option>\n              <option>10</option>\n              <option>15</option>\n              <option>20</option>\n            </select>\n          </div>\n        )}\n      </div>\n      <div className='grid xl:grid-cols-5 sm:grid-cols-1'>\n        {productsData &&\n          productsData.map((e) => (\n            <div\n              key={e._id}\n              className='flex flex-col justify-center border mt-6 p-4 w-full cursor-pointer shadow-md rounded-sm'\n              onClick={() => handleCreateOrder(e)}\n            >\n              <div className='space-y-2 border-b p-2'>\n                <img\n                  src={e.imgUrl || 'https://mrcodpakistan.com/wp-content/uploads/2018/09/noImg_2.jpg'}\n                  alt='product'\n                  className='h-56 mx-auto object-contain'\n                />\n                <p className='text-center text-gray-400 font-bold'>{e.name}</p>\n              </div>\n              <div className='mt-3 mx-auto'>\n                <p className='text-center text-red-400 font-extrabold'>Available: {e.quantity}</p>\n                <p className='text-center text-green-400 font-mono font-extrabold'>Rs {e.price}</p>\n              </div>\n            </div>\n          ))}\n      </div>\n      {products.length > 0 && onlineStatus && (\n        <div className='flex my-3 justify-center'>\n          <nav aria-label='Page navigation example'>\n            <ul className='pagination'>\n              <li className='page-item' onClick={() => currentPage !== 1 && handlePageChange(productsFilter.page - 1)}>\n                <button className='page-link'>\n                  <span aria-hidden='true'>&laquo;</span>\n                </button>\n              </li>\n              {Array(totalPages)\n                .fill()\n                .map((e, i) => (\n                  <li\n                    key={i}\n                    className={`page-item ${currentPage === i + 1 && 'active'}`}\n                    onClick={() => handlePageChange(i + 1)}\n                  >\n                    <button className='page-link' href='.'>\n                      {i + 1}\n                    </button>\n                  </li>\n                ))}\n              <li\n                className='page-item'\n                onClick={() => currentPage < totalPages && handlePageChange(productsFilter.page + 1)}\n              >\n                <button className='page-link'>\n                  <span aria-hidden='true'>&raquo;</span>\n                </button>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Products;\n","import React from 'react';\nimport CreateOrder from '../createOrder/CreateOrder';\nimport Header from '../Header/Header';\nimport Products from '../products/Products';\n\nconst POS = () => {\n  return (\n    <div className='p-10'>\n      <Header />\n      <div className=\"grid xl:grid-cols-3 sm:grid-cols-1  h-auto\">\n        <CreateOrder />\n        <Products />\n      </div>\n    </div>\n  );\n};\n\nexport default POS;\n","import React, { useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport POS from '../components/POS/POS';\n\nconst PosPage = () => {\n  const user = JSON.parse(localStorage.getItem('user'));\n  const { state } = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (user.role === 'superAdmin') {\n      window.location.href = '/transactions';\n    }\n  }, []);\n\n  useEffect(() => {\n    if (state && state?.salesman) {\n      navigate('/');\n    }\n  }, []);\n\n  return <POS />;\n};\n\nexport default PosPage;\n","import { Dialog } from '@headlessui/react';\nimport { PencilAltIcon } from '@heroicons/react/solid';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport ModalTemplate from '.';\nimport { currentCustomerAction } from '../../actions/customers.actions';\nimport { createOrderAction, updateOrderStatusAction } from '../../actions/order.actions';\n\nconst ViewOrdersModal = ({ isOpen, setIsOpen, orderDetails }) => {\n  const dispatch = useDispatch();\n  const { categories, vendors, order } = useSelector((state) => ({\n    productsFilter: state.products.productsFilter,\n    categories: state.categories,\n    vendors: state.vendors,\n    order: state.orders.order,\n  }));\n  const navigate = useNavigate();\n\n  const OrderUpdateHandler = (data) => {\n    dispatch(createOrderAction(data));\n    dispatch(currentCustomerAction(order?.customer));\n    dispatch(updateOrderStatusAction('UPDATE_ORDER'));\n    navigate('/', { state: { salesman: order.salesman_id } });\n  };\n\n  const getCategory = (id) => {\n    const category = categories && categories.find((e) => e._id === id);\n\n    return category ? category.name : 'N/A';\n  };\n\n  const getVendor = (id) => {\n    const vendor = vendors && vendors.find((e) => e._id === id);\n\n    return vendor ? vendor.name : 'N/A';\n  };\n\n\n  return (\n    <div>\n      <ModalTemplate isOpen={isOpen} setIsOpen={setIsOpen}>\n        <div className='inline-block w-auto p-6 my-8 text-left align-middle transition-all transform bg-white shadow-2xl rounded-2xl'>\n          <Dialog.Title as='h3' className='text-lg font-medium leading-6 text-gray-900 border-b pb-2'>\n            Order Items\n          </Dialog.Title>\n          <div className='mt-10 h-30v overflow-y-auto'>\n            <table className='table-fixed product-table border-2'>\n              <thead className='sticky top-0 z-10 bg-white'>\n                <tr>\n                  <th>Barcode</th>\n                  <th>Item</th>\n                  <th>Name</th>\n                  <th>Price</th>\n                  <th>Quantity</th>\n                  <th>Category</th>\n                  <th>Vendor</th>\n                  <th>Subtotal</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {orderDetails &&\n                  orderDetails.map((e, index) => (\n                    <tr key={e._id}>\n                      <td></td>\n                      <td>{index + 1}</td>\n                      <td>{e.product.name}</td>\n                      <td>{e.currentPrice}</td>\n                      <td>{e.quantity}</td>\n                      <td>{getCategory(e.category)}</td>\n                      <td>{getVendor(e.vendor)}</td>\n                      <td>{e.paidPrice}</td>\n                      <td>\n                        <button className='btn-sm-yellow ml-3' onClick={() => OrderUpdateHandler(e)}>\n                          <PencilAltIcon className='h-4' />\n                        </button>\n                      </td>\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n          </div>\n\n          <div className='mt-4 flex items-end h-auto'>\n            <button\n              type='button'\n              className='inline-flex justify-center px-4 py-2 text-sm font-medium text-blue-900 bg-blue-100 border border-transparent rounded-md hover:bg-blue-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500'\n              onClick={() => setIsOpen(false)}\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </ModalTemplate>\n    </div>\n  );\n};\n\nexport default ViewOrdersModal;\n","import { EyeIcon, PencilAltIcon } from '@heroicons/react/solid';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { currentCustomerAction } from '../../actions/customers.actions';\nimport { createOrderAction, getOrderAction, GetOrders, updateOrderStatusAction } from '../../actions/order.actions';\nimport { filterProductsStatsAction, GetProductsStats } from '../../actions/products.actions';\nimport ViewOrdersModal from '../Modals/ViewOrderModal';\nimport { Doughnut } from 'react-chartjs-2';\nimport { Chart, registerables } from 'chart.js';\n\nChart.register(...registerables);\n\nconst Transactions = () => {\n  const dispatch = useDispatch();\n  const {\n    orders,\n    users,\n    productsStats,\n    salesman,\n    orderStatus,\n    totalTransactions,\n    totalProfit,\n    totalSales,\n    chartStats,\n    stores,\n  } = useSelector((state) => ({\n    orders: state.orders,\n    users: state.users,\n    productsStats: state.products.productsStats,\n    salesman: state.users.filter((e) => e.role === 'salesman'),\n    orderStatus: state.orders.orderStatus,\n    totalTransactions: state.orders.totalTransactions,\n    totalSales: state.orders.totalSales,\n    totalProfit: state.orders.totalProfit,\n    chartStats: state.orders.chartStats,\n    stores: state.stores,\n  }));\n  const initialFilters = {\n    created_at_gteq: '',\n    created_at_lteq: '',\n    status_in: '',\n    cashier_id_eq: '',\n    salesman_id_eq: '',\n    store: '',\n    invoiceNo: '',\n  };\n\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  const navigate = useNavigate();\n  const [ordersFilter, setOrdersFilter] = useState(initialFilters);\n  const [isOpen, setIsOpen] = useState(false);\n  const [ordersData, setOrdersData] = useState(null);\n  const [ordersPagination, setOrdersPagination] = useState({ perPage: 10, page: 1, keyword: '' });\n  useEffect(() => {\n    dispatch(GetOrders({ query: ordersFilter }, ordersPagination));\n  }, [dispatch, ordersFilter, ordersPagination]);\n\n  useEffect(() => {\n    dispatch(GetProductsStats(productsStats.statsFilter));\n  }, [dispatch, productsStats.statsFilter]);\n\n  const handleOrdersFilterChange = (e) => {\n    const { name, value } = e.target;\n    setOrdersFilter((pre) => ({\n      ...pre,\n      [name]: value,\n    }));\n    if (name === 'store') {\n      const { statsFilter } = productsStats;\n      dispatch(filterProductsStatsAction({ ...statsFilter, store: value }));\n    }\n  };\n\n  const handlePageChange = (page) => {\n    const { statsFilter } = productsStats;\n    dispatch(filterProductsStatsAction({ ...statsFilter, page }));\n  };\n\n  const handleOrdersPageChange = (page) => {\n    setOrdersPagination({ ...ordersPagination, page });\n  };\n\n  function debounce(func, timeout = 2000) {\n    let timer;\n    return (...args) => {\n      clearTimeout(timer);\n      timer = setTimeout(() => {\n        func.apply(this, args);\n      }, timeout);\n    };\n  }\n\n  const handleProductsSearch = (e) => {\n    const { statsFilter } = productsStats;\n    const { value } = e.target;\n    dispatch(filterProductsStatsAction({ ...statsFilter, keyword: value }));\n  };\n\n  const handleOrdersSearch = (e) => {\n    const { value } = e.target;\n    setOrdersFilter({ ...ordersFilter, invoiceNo: value });\n  };\n\n  const optimizedSearch = debounce(handleProductsSearch);\n  const optimizedInvoiceSearch = debounce(handleOrdersSearch);\n\n  const handleProductsPerPageChange = (e) => {\n    const { statsFilter } = productsStats;\n    const { value } = e.target;\n    dispatch(filterProductsStatsAction({ ...statsFilter, perPage: value }));\n  };\n\n  const handleOrdersView = (order) => {\n    setOrdersData(order.orderItems);\n    setIsOpen(true);\n  };\n\n  const manipulateProducts = (data) => {\n    const result = data.map((e) => ({\n      ...e.product,\n      uuid: Math.random(),\n      currentDiscount: e.currentDiscount,\n      currentPrice: e.currentPrice,\n      orderQuantity: e.quantity,\n      previousQuantity: e.quantity,\n      previousPaid: e.paidPrice,\n    }));\n    return result;\n  };\n\n  const OrderUpdateHandler = (data) => {\n    dispatch(getOrderAction(data));\n    dispatch(createOrderAction(orderStatus, manipulateProducts(data.orderItems)));\n    dispatch(currentCustomerAction(data?.customer));\n    dispatch(updateOrderStatusAction('UPDATE_ORDER'));\n    navigate('/', { state: { salesman: data?.salesman } });\n  };\n\n  const labels = chartStats.length > 0 && chartStats.map((e) => new Date(e._id).toDateString());\n  const chartData = chartStats.length > 0 && chartStats.map((e) => e.totalSaleAmount);\n\n  const state = {\n    labels: labels,\n    datasets: [\n      {\n        backgroundColor: [\n          'rgba(255, 99, 132, 0.2)',\n          'rgba(255, 159, 64, 0.2)',\n          'rgba(255, 205, 86, 0.2)',\n          'rgba(75, 192, 192, 0.2)',\n          'rgba(54, 162, 235, 0.2)',\n          'rgba(153, 102, 255, 0.2)',\n          'rgba(201, 203, 207, 0.2)',\n        ],\n        borderColor: [\n          'rgb(255, 99, 132)',\n          'rgb(255, 159, 64)',\n          'rgb(255, 205, 86)',\n          'rgb(75, 192, 192)',\n          'rgb(54, 162, 235)',\n          'rgb(153, 102, 255)',\n          'rgb(201, 203, 207)',\n        ],\n        borderWidth: 1,\n        data: chartData,\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <div className={`grid xl:grid-cols-${user.role === 'superAdmin' ? 7 : 6} sm:grid-cols-2 gap-4 p-5 border-b`}>\n        <h1 className='text-2xl text-gray-600 flex items-center'>Transactions</h1>\n        {user.role === 'superAdmin' && (\n          <div className='flex flex-col'>\n            <label className='mb-1 text-gray-500 font-bold'>Store</label>\n            <select className='input-select' name='store' onChange={handleOrdersFilterChange}>\n              <option value='' selected>\n                All\n              </option>\n              {stores &&\n                stores.map((e) => (\n                  <option key={e._id} value={e._id}>\n                    {e.name}\n                  </option>\n                ))}\n            </select>\n          </div>\n        )}\n        <div className='flex flex-col'>\n          <label className='mb-1 text-gray-500 font-bold'>Salesman</label>\n          <select className='input-select' name='salesman_id_eq' onChange={handleOrdersFilterChange}>\n            <option value=''>All</option>\n            {salesman &&\n              salesman.map((e) => (\n                <option key={e._id} value={e._id}>\n                  {e.name}\n                </option>\n              ))}\n          </select>\n        </div>\n        <div className='flex flex-col'>\n          <label className='mb-1 text-gray-500 font-bold'>Cashier</label>\n          <select className='input-select' name='cashier_id_eq' onChange={handleOrdersFilterChange}>\n            <option value='' selected>\n              All\n            </option>\n            {users &&\n              users.map((e) => (\n                <option key={e._id} value={e._id}>\n                  {e.name}\n                </option>\n              ))}\n          </select>\n        </div>\n\n        <div className='flex flex-col'>\n          <label className='mb-1 text-gray-500 font-bold'>Status</label>\n          <select className='input-select' name='status_in' onChange={handleOrdersFilterChange}>\n            <option value='' selected>\n              All\n            </option>\n            <option value='paid'>Paid</option>\n            <option value='onHold'>OnHold</option>\n          </select>\n        </div>\n        <div className='flex flex-col col-span-2'>\n          <label className='mb-1 text-gray-500 font-bold'>Date</label>\n          <div className='flex border bg-white rounded-lg p-2 space-x-3 w-9/12'>\n            <input type='date' className='' name='created_at_gteq' onChange={handleOrdersFilterChange} />\n            <span className='text-gray-500 font-bold'>To</span>\n            <input type='date' className='' name='created_at_lteq' onChange={handleOrdersFilterChange} />\n          </div>\n        </div>\n      </div>\n\n      <div className='my-5 grid xl:grid-cols-3 sm:grid-cols-1 gap-4'>\n        <div className='border p-3'>\n          <div className='flex justify-between mt-3'>\n            <h1 className='text-2xl text-gray-600 flex items-center'>Products</h1>\n            <div>\n              <label className='mr-1 text-gray-500 font-bold'>Display</label>\n              <select\n                className='input-select'\n                onChange={handleProductsPerPageChange}\n                value={productsStats.statsFilter.perPage}\n              >\n                <option>10</option>\n                <option>20</option>\n                <option>50</option>\n                <option>100</option>\n              </select>\n            </div>\n            <div>\n              <input\n                type='text'\n                className='input-field w-40'\n                placeholder='Search Products...'\n                onChange={optimizedSearch}\n              />\n            </div>\n          </div>\n          <div className='h-60v overflow-y-auto my-6'>\n            <div className='my-4 h-4/6'>\n              <table className='whitespace-nowrap order-table w-full'>\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Sold</th>\n                    <th>Available</th>\n                    <th>Sales</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {productsStats.stats &&\n                    productsStats.stats.map((e) => (\n                      <tr key={e._id}>\n                        <td className=''>{e.product.name}</td>\n                        <td className=''>{e.sold}</td>\n                        <td className=''>{e.available}</td>\n                        <td className=''>Rs {e.sales}</td>\n                      </tr>\n                    ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n          {productsStats.stats.length > 0 && (\n            <div className='flex my-3 justify-center'>\n              <nav aria-label='Page navigation example'>\n                <ul className='pagination'>\n                  <li\n                    className='page-item'\n                    onClick={() => productsStats.currentPage !== 1 && handlePageChange(productsStats.currentPage - 1)}\n                  >\n                    <button className='page-link'>\n                      <span aria-hidden='true'>&laquo;</span>\n                    </button>\n                  </li>\n                  {Array(productsStats.totalPages)\n                    .fill()\n                    .map((e, i) => (\n                      <li\n                        key={i}\n                        className={`page-item ${productsStats.currentPage === i + 1 && 'active'}`}\n                        onClick={() => handlePageChange(i + 1)}\n                      >\n                        <button className='page-link' href='.'>\n                          {i + 1}\n                        </button>\n                      </li>\n                    ))}\n                  <li\n                    className='page-item'\n                    onClick={() =>\n                      productsStats.currentPage < productsStats.totalPages &&\n                      handlePageChange(productsStats.currentPage + 1)\n                    }\n                  >\n                    <button className='page-link'>\n                      <span aria-hidden='true'>&raquo;</span>\n                    </button>\n                  </li>\n                </ul>\n              </nav>\n            </div>\n          )}\n        </div>\n        <div className='xl:col-span-2'>\n          <div className='border-b pb-2 flex justify-between p-2'>\n            <h1 className='text-2xl text-gray-600 flex items-center'>Total</h1>\n            <div>\n              <input\n                type='text'\n                className='input-field'\n                placeholder='Search with invoice#...'\n                onChange={optimizedInvoiceSearch}\n              />\n            </div>\n            <div>\n              <label className='mr-1 text-gray-500 font-bold'>Display records</label>\n              <select\n                className='input-select'\n                value={ordersPagination.perPage}\n                onChange={(e) => setOrdersPagination({ ...ordersPagination, perPage: e.target.value })}\n              >\n                <option>5</option>\n                <option>10</option>\n                <option>20</option>\n                <option>50</option>\n                <option>100</option>\n              </select>\n            </div>\n          </div>\n          <div className='grid xl:grid-cols-4 sm:grid-cols-1 mt-3'>\n            <div className='space-y-3 text-sm font-medium sm:grid sm:grid-cols-2 xl:block my-3'>\n              <div className='w-56 h-40 bg-green-100 rounded-md'>\n                <div className='text-2xl text-green-900 flex flex-col h-full items-center justify-center'>\n                  <h1>Sales</h1>\n                  <h1>Rs {Math.round(totalSales)}</h1>\n                </div>\n              </div>\n              <div className='w-56 h-40 bg-yellow-100 rounded-md'>\n                <div className='text-2xl text-yellow-900 flex flex-col h-full items-center justify-center'>\n                  <h1>Transactions</h1>\n                  <h1>{totalTransactions}</h1>\n                </div>\n              </div>\n              <div className='w-56 h-40 bg-blue-100 rounded-md'>\n                <div className='text-2xl text-blue-900 flex flex-col h-full items-center justify-center'>\n                  <h1>Profit</h1>\n                  <h1>Rs {totalProfit}</h1>\n                </div>\n              </div>\n            </div>\n            <div className='col-span-3 my-3'>\n              <div className='h-60v overflow-y-auto border'>\n                <div className='h-4/6'>\n                  <table className='whitespace-nowrap order-table'>\n                    <thead>\n                      <tr>\n                        <th>Invoice</th>\n                        <th>Customer</th>\n                        <th>Date</th>\n                        <th>Total</th>\n                        <th>Paid</th>\n                        <th>Change</th>\n                        <th>Method</th>\n                        <th>Status</th>\n                        <th>Cashier</th>\n                        <th>Salesman</th>\n                        <th>View</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {orders.allOrders &&\n                        orders.allOrders.map((e) => (\n                          <tr key={e._id}>\n                            <td className=''>{e?.invoiceNo || 'N/A'}</td>\n                            <td>{e?.customer?.name || 'N/A'}</td>\n                            <td className=''>{new Date(e.createdAt).toDateString()}</td>\n                            <td className=''>Rs: {Math.round(e.total)}</td>\n                            <td className=''>Rs: {Math.round(e.total)}</td>\n                            <td>Rs: {e?.change ? e.change : 0}</td>\n                            <td>Cash</td>\n                            <td>\n                              <p\n                                className={`rounded-full text-sm font-medium px-3 py-2 ${\n                                  e.status === 'paid' ? 'bg-green-100 text-green-900' : 'bg-yellow-100 text-yellow-900'\n                                }`}\n                              >\n                                {e.status.toUpperCase()}\n                              </p>\n                            </td>\n                            <td>{e.cashier?.name}</td>\n                            <td>{e?.salesman?.name || 'N/A'}</td>\n                            <td>\n                              <button className='btn-sm-yellow ml-3' onClick={() => handleOrdersView(e)}>\n                                <EyeIcon className='h-4' />\n                              </button>\n                              <button className='btn-sm-green ml-3' onClick={() => OrderUpdateHandler(e)}>\n                                <PencilAltIcon className='h-4' />\n                              </button>\n                            </td>\n                          </tr>\n                        ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n              {productsStats.stats.length > 0 && (\n                <div className='flex my-3 justify-center'>\n                  <nav aria-label='Page navigation example'>\n                    <ul className='pagination'>\n                      <li\n                        className='page-item'\n                        onClick={() => orders.currentPage !== 1 && handleOrdersPageChange(orders.currentPage - 1)}\n                      >\n                        <button className='page-link'>\n                          <span aria-hidden='true'>&laquo;</span>\n                        </button>\n                      </li>\n                      {Array(orders.totalPages)\n                        .fill()\n                        .map((e, i) => (\n                          <li\n                            key={i}\n                            className={`page-item ${orders.currentPage === i + 1 && 'active'}`}\n                            onClick={() => handleOrdersPageChange(i + 1)}\n                          >\n                            <button className='page-link' href='.'>\n                              {i + 1}\n                            </button>\n                          </li>\n                        ))}\n                      <li\n                        className='page-item'\n                        onClick={() =>\n                          orders.currentPage < orders.totalPages && handleOrdersPageChange(orders.currentPage + 1)\n                        }\n                      >\n                        <button className='page-link'>\n                          <span aria-hidden='true'>&raquo;</span>\n                        </button>\n                      </li>\n                    </ul>\n                  </nav>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      <h1 className='text-center text-4xl font-extrabold text-gray-600'>Total Sales Chart</h1>\n      <div className='my-5 grid xl:grid-cols-2 sm:grid-cols-1 gap-2'>\n        <div className='h-3/5 w-3/5'>\n          <Doughnut\n            data={state}\n            options={{\n              responsive: true,\n              maintainAspectRatio: true,\n            }}\n          />\n        </div>\n        <div className='border p-3'>\n          <div className='h-60v overflow-y-auto my-6'>\n            <div className='my-4 h-4/6'>\n              <table className='whitespace-nowrap order-table w-full'>\n                <thead>\n                  <tr>\n                    <th>Date</th>\n                    <th>Total Sale</th>\n                    <th>Total Transactions</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {chartStats &&\n                    chartStats.map((e) => (\n                      <tr key={e._id}>\n                        <td className=''>{new Date(e._id).toDateString()}</td>\n                        <td className=''>RS {e.totalSaleAmount}</td>\n                        <td className=''>{e.count}</td>\n                      </tr>\n                    ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ViewOrdersModal isOpen={isOpen} setIsOpen={setIsOpen} orderDetails={ordersData} />\n    </div>\n  );\n};\n\nexport default Transactions;\n","import { Dialog } from '@headlessui/react';\nimport ModalTemplate from '.';\n\nconst ViewExpenseModal = ({ isOpen, setIsOpen, expenseDetails }) => {\n  return (\n    <div>\n      <ModalTemplate isOpen={isOpen} setIsOpen={setIsOpen}>\n        <div className='inline-block w-auto p-6 my-8 text-left align-middle transition-all transform bg-white shadow-2xl rounded-2xl overflow-y-auto'>\n          <Dialog.Title as='h3' className='text-lg font-medium leading-6 text-gray-900 border-b pb-2'>\n            Expense Details\n          </Dialog.Title>\n          <div className='mt-10 h-auto overflow-y-auto'>\n            <h1>{expenseDetails?.details}</h1>\n          </div>\n\n          <div className='mt-4'>\n            <button\n              type='button'\n              className='inline-flex justify-center px-4 py-2 text-sm font-medium text-blue-900 bg-blue-100 border border-transparent rounded-md hover:bg-blue-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500'\n              onClick={() => setIsOpen(false)}\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </ModalTemplate>\n    </div>\n  );\n};\n\nexport default ViewExpenseModal;\n","import { EyeIcon, PencilAltIcon, TrashIcon } from '@heroicons/react/solid';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { DeleteExpenses, GetExpenses } from '../../actions/expenses.actions';\nimport AddExpenseModal from '../Modals/AddExpenseModal';\nimport ViewExpenseModal from '../Modals/viewExpense';\n\nconst Expenses = () => {\n  const dispatch = useDispatch();\n  const { expenses, totalPages, totalExpense, currentPage, noOfExpenses, expenseStats, stores } = useSelector(\n    (state) => ({\n      expenses: state.expenses.expenses,\n      totalPages: state.expenses.totalPages,\n      totalExpense: state.expenses.totalExpense,\n      currentPage: state.expenses.currentPage,\n      noOfExpenses: state.expenses.noOfExpenses,\n      expenseStats: state.expenses.expenseStats,\n      stores: state.stores,\n    })\n  );\n  const initialFilters = {\n    created_at_gteq: '',\n    created_at_lteq: '',\n    store: '',\n  };\n\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  const [expensesFilter, setExpensesFilter] = useState(initialFilters);\n  const [isOpen, setIsOpen] = useState(false);\n  const [viewExpense, setViewExpense] = useState(false);\n  const [expenseData, setExpenseData] = useState(null);\n  const [expensePagination, setExpensePagination] = useState({ perPage: 10, page: 1 });\n  useEffect(() => {\n    dispatch(GetExpenses({ query: expensesFilter }, expensePagination));\n  }, [dispatch, expensesFilter, expensePagination]);\n\n  const handleExpenseFilterChange = (e) => {\n    const { name, value } = e.target;\n    setExpensesFilter((pre) => ({\n      ...pre,\n      [name]: value,\n    }));\n  };\n\n  const handleExpensePageChange = (page) => {\n    setExpensePagination({ ...expensePagination, page });\n  };\n\n  const handleOrdersView = (data) => {\n    setExpenseData(data);\n    setViewExpense(true);\n  };\n\n  const ExpenseUpdateHandler = (data) => {\n    setExpenseData(data);\n    setIsOpen(true);\n  };\n\n  const ExpenseDeleteHandler = (id) => {\n    dispatch(DeleteExpenses(id, { query: expensesFilter }, expensePagination));\n  };\n\n  return (\n    <div>\n      <div className='p-5 border-b flex justify-between flex-wrap'>\n        <h1 className='text-2xl text-gray-600 flex items-center'>Expenses</h1>\n        {user.role === 'superAdmin' && (\n          <div className='flex flex-col'>\n            <label className='mb-1 text-gray-500 font-bold'>Store</label>\n            <select className='input-select' name='store' onChange={handleExpenseFilterChange}>\n              <option value='' selected>\n                All\n              </option>\n              {stores &&\n                stores.map((e) => (\n                  <option key={e._id} value={e._id}>\n                    {e.name}\n                  </option>\n                ))}\n            </select>\n          </div>\n        )}\n        <div className={`flex flex-col`}>\n          <label className='mb-1 text-gray-500 font-bold'>Date</label>\n          <div className='flex border bg-white rounded-lg p-2 space-x-3'>\n            <input type='date' className='' name='created_at_gteq' onChange={handleExpenseFilterChange} />\n            <span className='text-gray-500 font-bold'>To</span>\n            <input type='date' className='' name='created_at_lteq' onChange={handleExpenseFilterChange} />\n          </div>\n        </div>\n      </div>\n\n      <div className='my-5 grid xl:grid-cols-3 sm:grid-cols-1 gap-4'>\n        <div className='border p-3'>\n          <div className='h-60v overflow-y-auto my-6'>\n            <div className='my-4 h-4/6'>\n              <table className='whitespace-nowrap order-table w-full'>\n                <thead>\n                  <tr>\n                    <th>Date</th>\n                    <th>Total Expense</th>\n                    <th>No Of Expenses</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {expenseStats &&\n                    expenseStats.map((e) => (\n                      <tr key={e._id}>\n                        <td className=''>{new Date(e._id).toDateString()}</td>\n                        <td className=''>{e.totalExpense}</td>\n                        <td className=''>{e.count}</td>\n                      </tr>\n                    ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n        <div className='xl:col-span-2'>\n          <div className='border-b pb-2 flex justify-between p-2'>\n            <h1 className='text-2xl text-gray-600 flex items-center'>Total</h1>\n            <div>\n              <label className='mr-1 text-gray-500 font-bold'>Display records</label>\n              <select\n                className='input-select'\n                value={expensePagination.perPage}\n                onChange={(e) => setExpensePagination({ ...expensePagination, perPage: e.target.value })}\n              >\n                <option>5</option>\n                <option>10</option>\n                <option>20</option>\n                <option>50</option>\n                <option>100</option>\n              </select>\n            </div>\n          </div>\n          <div className='grid xl:grid-cols-4 sm:grid-cols-1 mt-3'>\n            <div className='space-y-3 text-sm font-medium sm:grid sm:grid-cols-2 xl:block my-3'>\n              <div className='w-56 h-40 bg-green-100 rounded-md'>\n                <div className='text-2xl text-green-900 flex flex-col h-full items-center justify-center'>\n                  <h1>Total Expenses</h1>\n                  <h1>Rs {Math.round(totalExpense)}</h1>\n                </div>\n              </div>\n              <div className='w-56 h-40 bg-yellow-100 rounded-md'>\n                <div className='text-2xl text-yellow-900 flex flex-col h-full items-center justify-center'>\n                  <h1>No of Expenses</h1>\n                  <h1>{noOfExpenses}</h1>\n                </div>\n              </div>\n            </div>\n            <div className='col-span-3 my-3'>\n              <div className='h-60v overflow-y-auto border'>\n                <div className='h-4/6'>\n                  <table className='whitespace-nowrap order-table w-full'>\n                    <thead>\n                      <tr>\n                        <th>Name</th>\n                        <th>Date</th>\n                        <th>Amount</th>\n                        <th>Actions</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {expenses &&\n                        expenses.map((e) => (\n                          <tr key={e._id}>\n                            <td className=''>{e.name || 'N/A'}</td>\n                            <td>{new Date(e.createdAt).toDateString()}</td>\n                            <td className=''>Rs {e.amount}</td>\n                            <td>\n                              <button className='btn-sm-yellow ml-3' onClick={() => handleOrdersView(e)}>\n                                <EyeIcon className='h-4' />\n                              </button>\n                              {user?.role !== 'superAdmin' && (\n                                <>\n                                  <button className='btn-sm-green ml-3' onClick={() => ExpenseUpdateHandler(e)}>\n                                    <PencilAltIcon className='h-4' />\n                                  </button>\n                                  <button className='btn-sm-red ml-3' onClick={() => ExpenseDeleteHandler(e._id)}>\n                                    <TrashIcon className='h-4' />\n                                  </button>\n                                </>\n                              )}\n                            </td>\n                          </tr>\n                        ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n              {expenses.length > 0 && (\n                <div className='flex my-3 justify-center'>\n                  <nav aria-label='Page navigation example'>\n                    <ul className='pagination'>\n                      <li\n                        className='page-item'\n                        onClick={() => currentPage !== 1 && handleExpensePageChange(currentPage - 1)}\n                      >\n                        <button className='page-link'>\n                          <span aria-hidden='true'>&laquo;</span>\n                        </button>\n                      </li>\n                      {Array(totalPages)\n                        .fill()\n                        .map((e, i) => (\n                          <li\n                            key={i}\n                            className={`page-item ${currentPage === i + 1 && 'active'}`}\n                            onClick={() => handleExpensePageChange(i + 1)}\n                          >\n                            <button className='page-link' href='.'>\n                              {i + 1}\n                            </button>\n                          </li>\n                        ))}\n                      <li\n                        className='page-item'\n                        onClick={() => currentPage < totalPages && handleExpensePageChange(currentPage + 1)}\n                      >\n                        <button className='page-link'>\n                          <span aria-hidden='true'>&raquo;</span>\n                        </button>\n                      </li>\n                    </ul>\n                  </nav>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      <AddExpenseModal isOpen={isOpen} setIsOpen={setIsOpen} expenseData={expenseData} />\n      <ViewExpenseModal isOpen={viewExpense} setIsOpen={setViewExpense} expenseDetails={expenseData} />\n    </div>\n  );\n};\n\nexport default Expenses;\n","import React, { useState } from 'react';\nimport Expenses from './Expenses';\nimport Transactions from './Transactions';\n\nconst TransactionsManagement = () => {\n  const [active, setActive] = useState('transactions');\n  return (\n    <div className='bg-white mt-4'>\n      <div className='flex justify-center '>\n        <button\n          className={`${\n            active === 'transactions' ? 'text-green-500 border-green-500 font-bold' : 'text-gray-500 font-medium '\n          } text-lg px-4 py-2 border-b-2 transition-all ease-in-out`}\n          onClick={() => setActive('transactions')}\n        >\n          Transactions\n        </button>\n        <button\n          className={`${\n            active === 'expenses' ? 'text-green-500 border-b-2 border-green-500 font-bold' : 'text-gray-500 font-medium'\n          } text-lg px-4 py-2 border-b-2 transition-all ease-in-out`}\n          onClick={() => setActive('expenses')}\n        >\n          Expenses\n        </button>\n      </div>\n      {active === 'transactions' ? <Transactions /> : <Expenses />}\n    </div>\n  );\n};\n\nexport default TransactionsManagement;\n","import React from 'react';\nimport Transactions from '../components/Transactions/Transactions';\nimport Header from '../components/Header/Header';\nimport TransactionsManagement from '../components/Transactions';\n\nconst TransactionsPage = () => {\n  return (\n    <div className='p-10'>\n      <Header />\n      <TransactionsManagement />\n    </div>\n  );\n};\n\nexport default TransactionsPage;\n","import { PosPage, TransactionsPage } from '../pages';\nimport { TRANSACTIONS } from '../constants/pages';\n\nconst user = JSON.parse(localStorage.getItem('user'));\n\nconst routes =\n  user?.role === 'admin'\n    ? [\n        {\n          path: '/',\n          exact: true,\n          component: PosPage,\n        },\n        {\n          path: TRANSACTIONS,\n          component: TransactionsPage,\n        },\n      ]\n    : user?.role === 'superAdmin'\n    ? [\n        {\n          path: '/',\n          exact: true,\n          component: TransactionsPage,\n        },\n      ]\n    : [\n        {\n          path: '/',\n          exact: true,\n          component: PosPage,\n        },\n      ];\n\nexport default routes;\n","export const TRANSACTIONS = '/transactions';\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { LoginRequest } from '../../actions/auth.actions';\nimport { useNavigate } from 'react-router-dom';\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    dispatch(LoginRequest({ email: e.target[0].value, password: e.target[1].value }, navigate));\n  };\n\n  return (\n    <div className='w-screen h-screen bg-gray-100 flex justify-center items-center'>\n      <div className='w-full max-w-xs'>\n        <form onSubmit={handleLogin} className='bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4'>\n          <div className='mb-4'>\n            <label className='block text-gray-700 text-sm font-bold mb-2' for='username'>\n              Username\n            </label>\n            <input\n              className='shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline'\n              id='username'\n              type='text'\n              placeholder='Username'\n            />\n          </div>\n          <div className='mb-6'>\n            <label className='block text-gray-700 text-sm font-bold mb-2' for='password'>\n              Password\n            </label>\n            <input\n              className='shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline'\n              id='password'\n              type='password'\n              placeholder='******************'\n            />\n          </div>\n          <div className='flex items-center justify-between'>\n            <button\n              className='bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline'\n              type='submit'\n            >\n              Sign In\n            </button>\n            <a className='inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800' href='.'>\n              Forgot Password?\n            </a>\n          </div>\n        </form>\n        <p className='text-center text-gray-500 text-xs'>&copy;2022 Konfor. All rights reserved.</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport Login from '../components/Login/Login';\n\nconst LoginPage = () => {\n  return <Login />;\n};\n\nexport default LoginPage;\n","import React from 'react';\n\nconst Loader = () => {\n  return (\n    <>\n      <div className='loading'>\n        <svg\n          xmlns='http://www.w3.org/2000/svg'\n          style={{ margin: 'auto', background: 'none', display: 'block', shapeRendering: 'auto' }}\n          width='100px'\n          height='100px'\n          viewBox='0 0 100 100'\n          preserveAspectRatio='xMidYMid'\n        >\n          <circle\n            cx='50'\n            cy='50'\n            r='32'\n            strokeWidth='8'\n            stroke='#0d933b'\n            strokeDasharray='50.26548245743669 50.26548245743669'\n            fill='none'\n            strokeLinecap='round'\n          >\n            <animateTransform\n              attributeName='transform'\n              type='rotate'\n              repeatCount='indefinite'\n              dur='1s'\n              keyTimes='0;1'\n              values='0 50 50;360 50 50'\n            ></animateTransform>\n          </circle>\n        </svg>\n      </div>\n    </>\n  );\n};\n\nexport default Loader;\n","import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport routes from '../config/routes';\nimport React, { useEffect } from 'react';\nimport LoginPage from './LoginPage';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from '../components/Loader';\nimport { BASE_URL } from '../constants/apiUrl';\nimport { actionTypes } from '../constants/actionTypes';\nimport { toast } from 'react-toastify';\nimport { ConfirmOrder, GetOnHold } from '../actions/order.actions';\nimport { GetAllProducts, GetProducts } from '../actions/products.actions';\n\nfunction App() {\n  const isLoading = useSelector((state) => state.isLoading);\n  const { onlineStatus } = useSelector((state) => {\n    return { onlineStatus: state.onlineStatus.onlineStatus };\n  });\n  const productsFilter = useSelector((state) => state.products.productsFilter);\n  const dispatch = useDispatch();\n  const initialFilters = {\n    created_at_gteq: '',\n    created_at_lteq: '',\n    status_in: [0],\n    cashier_id_eq: null,\n    salesman_id_eq: null,\n  };\n\n  const onlinePollingInterval = 20000;\n\n  const checkOnlineStatus = async () => {\n    console.log(onlineStatus, 'hello');\n    const controller = new AbortController();\n    const { signal } = controller;\n\n    if (!navigator.onLine) return navigator.onLine;\n\n    try {\n      await fetch(BASE_URL, {\n        method: 'GET',\n        signal,\n      });\n      return true;\n    } catch (error) {\n      console.error(error);\n\n      controller.abort();\n    }\n    return false;\n  };\n\n  const setOnline = () => {\n    // if (onlineStatus === false) {\n    dispatch({ type: actionTypes.setOnline });\n    toast.success('Internet connection is active now');\n    const orders = JSON.parse(localStorage.getItem('orders'));\n    if (orders) {\n      for (let i = 0; i < orders.length; i++) {\n        dispatch(ConfirmOrder(orders[i])).then((res) => {\n          if (res.status === 200) {\n            if (i === orders.length - 1) {\n              localStorage.removeItem('orders');\n              dispatch(GetOnHold());\n              dispatch(GetProducts(productsFilter));\n              dispatch(GetAllProducts());\n            }\n          }\n        });\n      }\n    }\n    // }\n  };\n\n  const setOffline = () => {\n    if (onlineStatus) {\n      dispatch({ type: actionTypes.setOffline });\n      toast.warning('You are currently in offline mode');\n    }\n  };\n\n  const checkStatus = async () => {\n    const online = await checkOnlineStatus();\n    if (onlineStatus === false && online === true) {\n      console.log(onlineStatus, 'online');\n      const e = new Event('online');\n      window.dispatchEvent(e);\n    } else if (onlineStatus === true && online === false) {\n      const e = new Event('offline');\n      window.dispatchEvent(e);\n    } else {\n      return 0;\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('offline', setOffline);\n    window.addEventListener('online', setOnline);\n    const id = setInterval(checkStatus, onlinePollingInterval);\n    // const syncData = setInterval(() => {\n    //   handleSync();\n    // }, appConstants.DATA_SYNC_TIME_OUT);\n\n    return () => {\n      window.removeEventListener('offline', setOffline);\n      window.removeEventListener('online', setOnline);\n      clearInterval(id);\n      // clearInterval(syncData);\n    };\n  }, [onlineStatus]);\n\n  return (\n    <Router>\n      {isLoading && <Loader />}\n      <Routes>\n        {routes.map((route, index) => (\n          <Route path={route.path} exact={route.exact} key={index} element={<route.component />} />\n        ))}\n        <Route path='/Login' element={<LoginPage />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './config/globals';\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nimport './assets/theme/index.scss';\nimport DefaultPage from './pages/DefaultPage';\nimport { Provider } from 'react-redux';\nimport reportWebVitals from './config/reportWebVitals';\nimport { ToastContainer } from 'react-toastify';\nimport { store, persistor } from './config/store';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport Loader from './components/Loader';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={<Loader />} persistor={persistor}>\n        <ToastContainer position='top-right' />\n        <DefaultPage />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', () => {\n    navigator.serviceWorker\n      .register('./serviceworker.js')\n      .then((reg) => console.log('Success: ', reg.scope))\n      .catch((err) => console.log('Failure: ', err));\n  });\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}